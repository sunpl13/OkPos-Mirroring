{"version":3,"file":"static/js/8336.66118add.chunk.js","mappings":"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","sources":["components/Modal/officialMall/FaqDetailModal.js","components/forms/inputForm/ModalInput.js","components/forms/inputForm/ModalSelect.js","pages/officialMall/faq/FaqList.js","utils/columns/officialMall/Columns.js"],"sourcesContent":["import {\n  CButton,\n  CForm,\n  CFormTextarea,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport ModalSelect from '../../forms/inputForm/ModalSelect'\n\nconst FaqDetailModal = ({\n  item,\n  onChange,\n  onUpdate,\n  onDelete,\n  option,\n  visible,\n  setVisible,\n  isReadOnly,\n  setIsReadOnly,\n  isUpdate,\n  setIsUpdate,\n}) => {\n  const clickUpdateBtn = () => {\n    setIsReadOnly(false)\n    setIsUpdate(true)\n  }\n\n  // modal Title 세팅\n  let modalTitle = 'FAQ 추가'\n  if (isUpdate) modalTitle = 'FAQ 수정'\n  if (isReadOnly) modalTitle = 'FAQ 상세 내용'\n\n  return (\n    <CModal size='lg' visible={visible} onClose={() => setVisible(false)}>\n      <CModalHeader>\n        <CModalTitle>{modalTitle}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <CRow className={'p-2'}>\n            {(isReadOnly || isUpdate) && (\n              <ModalInput id={'faqId'} placeholder={''} label={'No'} value={item.faqId || ''} readOnly disabled />\n            )}\n            <ModalSelect\n              id={'category'}\n              size={'sm'}\n              placeholder={'선택'}\n              label={'분류'}\n              value={item.category || ''}\n              options={option}\n              isRequired={false}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n              onChange={onChange}\n            ></ModalSelect>\n          </CRow>\n          <CRow className={'p-2'}>\n            <ModalInput\n              id={'title'}\n              placeholder={''}\n              label={'제목'}\n              value={item.title || ''}\n              onChange={onChange}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <CRow className={'p-2'}>\n            <CFormTextarea\n              id='content'\n              label='답변 내용'\n              rows={9}\n              value={item.content || ''}\n              onChange={onChange}\n              disabled={isReadOnly}\n            ></CFormTextarea>\n          </CRow>\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        {!isReadOnly && !isUpdate && (\n          <CButton onClick={onUpdate} color='primary'>\n            추가\n          </CButton>\n        )}\n        {isUpdate && (\n          <CButton onClick={onUpdate} color='primary'>\n            저장\n          </CButton>\n        )}\n        {isReadOnly && (\n          <>\n            <CButton color={isReadOnly ? 'primary' : 'success'} onClick={clickUpdateBtn}>\n              수정\n            </CButton>\n            <CButton onClick={onDelete} color='danger'>\n              삭제\n            </CButton>\n          </>\n        )}\n        <CButton color='secondary' onClick={() => setVisible(false)}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default FaqDetailModal\n","import {CCol, CFormInput, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\nconst ModalInput = ({type, onChange, id, placeholder, value, label, readOnly, disabled, isRequired}) => {\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        <CFormInput\n          type={type || 'text'}\n          id={id}\n          placeholder={placeholder || ''}\n          value={type === 'file' ? undefined : value || ''}\n          onChange={onChange}\n          readOnly={readOnly}\n          disabled={disabled}\n        />\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalInput\n","import {CCol, CFormSelect, CFormLabel} from '@coreui/react'\nimport * as PorpTypes from 'prop-types'\n\nconst ModalSelect = ({\n  onChange,\n  size,\n  placeholder,\n  label,\n  value,\n  readOnly,\n  id,\n  disabled = false,\n  isRequired,\n  options,\n}) => {\n  const newOptions = options.map(item => (\n    <option key={item.key} value={item.key}>\n      {item.value}\n    </option>\n  ))\n\n  return (\n    <>\n      <CFormLabel htmlFor='staticEmail' className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol>\n        <CFormSelect value={value} disabled={disabled} id={id} size={size} onChange={onChange} readOnly={readOnly}>\n          <option>{placeholder}</option>\n          {newOptions}\n        </CFormSelect>\n      </CCol>\n    </>\n  )\n}\n\nModalSelect.propTypes = {\n  onChange: PorpTypes.func,\n  size: PorpTypes.string,\n  placeholder: PorpTypes.string,\n  label: PorpTypes.string,\n  value: PorpTypes.any,\n  readOnly: PorpTypes.bool,\n  id: PorpTypes.string,\n  disabled: PorpTypes.bool,\n  isRequired: PorpTypes.bool,\n  options: PorpTypes.any,\n}\n\nexport default ModalSelect\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport FaqDetailModal from '../../../components/Modal/officialMall/FaqDetailModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {faqListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport {useNavigate} from 'react-router-dom'\nimport * as _ from 'lodash'\n\nconst FaqList = () => {\n  const navigate = useNavigate()\n  const [isReadOnly, setIsReadOnly] = useState(false)\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n\n  const categoryOptions = [\n    {\n      key: '하드웨어',\n      value: '하드웨어',\n    },\n    {\n      key: '소프트웨어',\n      value: '소프트웨어',\n    },\n    {\n      key: '렌탈',\n      value: '렌탈',\n    },\n    {\n      key: '부가서비스',\n      value: '부가서비스',\n    },\n    {\n      key: '유지보수',\n      value: '유지보수',\n    },\n  ]\n\n  // Load FAQ List\n  const onLoadFaqList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_FAQS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n      } else {\n        setItems(res.result.faqInfos)\n      }\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Load FAQ Detail\n  const onLoadFaq = async faqId => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_FAQ,\n        path: {faqId},\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      res.result.faqId = faqId\n      setSelectedItem(res.result)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Create FAQ\n  const onCreateFaq = async item => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.POST,\n        url: EndPoint.POST_MALL_FAQ,\n        data: {\n          faqId: item.faqId,\n          category: item.category,\n          title: item.title,\n          content: item.content,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setSelectedItem(item)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Update FAQ\n  const onUpdateFaq = async item => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_UPDATE_FAQ,\n        data: {\n          faqId: item.faqId,\n          category: item.category,\n          title: item.title,\n          content: item.content,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setSelectedItem(item)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Delete FAQ\n  const onDeleteFaq = async faqId => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_DELETE_FAQ,\n        path: {faqId},\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n      }\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  useEffect(() => {\n    onLoadFaqList()\n  }, [])\n\n  function setInitItem() {\n    return {\n      title: '',\n      content: '',\n    }\n  }\n\n  /** Open Modal*/\n  const handleShowFaqItemAddModal = () => {\n    setSelectedItem(setInitItem())\n    setIsReadOnly(false)\n    setIsUpdate(false)\n    setShowModal(!showModal)\n  }\n  const handleShowFaqDetailModal = item => {\n    onLoadFaq(item.faqId)\n    setIsReadOnly(true)\n    setIsUpdate(false)\n    setShowModal(!showModal)\n  }\n\n  /** Add Faq Modal*/\n  const handleFaqItemModalOnChange = e => {\n    const {id, value} = e.target\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n\n  const handleDetailModalUpdate = async () => {\n    const {faqId, title, content, category} = selectedItem\n    // validation\n    const categoryVals = categoryOptions.map(row => row.value)\n    if (!category || !_.includes(categoryVals, category)) return alert('카테고리를 선택해주세요')\n    if (!title) return alert('제목을 입력해주세요')\n    if (!content) return alert('답변을 입력해주세요')\n\n    if (window.confirm('저장 하시겠습니까?')) {\n      if (faqId) {\n        // update\n        onUpdateFaq(selectedItem)\n        setShowModal(true)\n        setIsReadOnly(true)\n        setIsUpdate(false)\n      } else {\n        // create\n        onCreateFaq(selectedItem)\n        setShowModal(false)\n      }\n      await onLoadFaqList()\n    }\n  }\n\n  const handleDetailModalDelete = () => {\n    if (window.confirm('정말 삭제하시겠습니까?')) {\n      onDeleteFaq(selectedItem.faqId).then(onLoadFaqList, setShowModal(false))\n    }\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='FAQ 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardHeader>\n            <CForm className='row g-3'>\n              <CCol xs={1}>\n                <CButton color='primary' onClick={handleShowFaqItemAddModal}>\n                  추가\n                </CButton>\n              </CCol>\n            </CForm>\n          </CCardHeader>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowFaqDetailModal}\n              columns={faqListColumns}\n              className={'faqList'}\n              datePickerHidden={false}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <FaqDetailModal\n        item={selectedItem}\n        onUpdate={handleDetailModalUpdate}\n        onDelete={handleDetailModalDelete}\n        onChange={handleFaqItemModalOnChange}\n        option={categoryOptions}\n        visible={showModal}\n        setVisible={setShowModal}\n        isReadOnly={isReadOnly}\n        setIsReadOnly={setIsReadOnly}\n        isUpdate={isUpdate}\n        setIsUpdate={setIsUpdate}\n      />\n    </CRow>\n  )\n}\n\nexport default FaqList\n","// 회원 리스트\nexport const userListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 탈퇴회원 리스트\nexport const resignUserListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'resignReason', label: '탈퇴사유', _props: {className: 'resignReason'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'updatedAt', label: '계정탈퇴일', sorter: false, filter: false, _props: {className: 'updatedAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 1:1 문의 리스트\nexport const inquiryListColumns = [\n  {key: 'inquiryId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '문의 유형', _props: {className: 'category'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'reply', label: '답변', sorter: false, filter: false, _props: {className: 'reply'}},\n]\n\n// FAQ 리스트\nexport const faqListColumns = [\n  {key: 'faqId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '분류', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n]\n\n// 자료실 리스트\nexport const dataRoomListColumns = [\n  {key: 'dataRoomId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '분류', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n\n// 주문 현황 관리\nexport const orderListColumns = [\n  {key: 'orderId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '분류', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n"],"names":["item","onChange","onUpdate","onDelete","option","visible","setVisible","isReadOnly","setIsReadOnly","isUpdate","setIsUpdate","modalTitle","size","onClose","className","id","placeholder","label","value","faqId","readOnly","disabled","category","options","isRequired","title","rows","content","onClick","color","type","htmlFor","style","display","undefined","newOptions","map","key","navigate","useNavigate","useState","items","setItems","selectedItem","setSelectedItem","showModal","setShowModal","categoryOptions","onLoadFaqList","ApiConfig","method","HttpMethod","url","EndPoint","res","data","isSuccess","isEmpty","result","code","alert","message","faqInfos","onLoadFaq","path","onCreateFaq","onUpdateFaq","onDeleteFaq","useEffect","handleDetailModalUpdate","categoryVals","row","_","window","confirm","xs","columns","faqListColumns","datePickerHidden","then","e","target","userListColumns","sorter","filter","_props","resignUserListColumns","inquiryListColumns","dataRoomListColumns","orderListColumns"],"sourceRoot":""}