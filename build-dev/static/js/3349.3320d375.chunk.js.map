{"version":3,"file":"static/js/3349.3320d375.chunk.js","mappings":"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","sources":["components/common/PageHeader.tsx","components/list/ThumbnailModal.tsx","components/common/RangeDatePicker.js","components/list/ListTemplate.js","dataManager/apiConfig.js","dataManager/apiMapper.js"],"sourcesContent":["import styled from 'styled-components'\ntype Props = {\n  title: string\n}\n\nconst PageHeader = ({title}: Props) => {\n  return (\n    <Header>\n      <h1>{title}</h1>\n    </Header>\n  )\n}\n\nexport default PageHeader\n\nconst Header = styled.div`\n  border-bottom: 1px solid #ccc;\n  margin-bottom: 40px;\n  margin-top: 20px;\n`\n","import {CButton, CImage, CModal, CModalBody, CModalFooter} from '@coreui/react'\nimport {useState} from 'react'\n\nexport interface IImage {\n  img: string\n  altName: string\n}\n\ninterface IThumbnail {\n  thumbnails: any\n  visible: boolean\n  setVisible: (state: boolean) => void\n}\n\nconst ThumbnailModal = ({visible, setVisible}: IThumbnail) => {\n  const [imgUrl, setImgUrl] = useState('')\n  console.log(setImgUrl)\n  // useEffect(() => {\n  //   setImgUrl(thumbnails[0].img)\n\n  //   return () => {\n  //     setImgUrl(thumbnails[0].img)\n  //   }\n  // }, [thumbnails])\n  //const onChangeImg = (selectedUrl: string) => {\n  //     setImgUrl(selectedUrl)\n  //   }\n  return (\n    <CModal alignment='center' size='xl' visible={visible} onClose={() => setVisible(false)}>\n      {/*<CModalHeader></CModalHeader>*/}\n      <CModalBody className='clearfix'>\n        <CImage align='center' fluid src={imgUrl} alt='안녕하세요' width={600} />\n        {/* <MultipleRows>\n          {thumbnails.map(item => (\n            <CImage key={item.img} src={item.img} alt={item.altName} width={80} height={60} />\n          ))}\n        </MultipleRows> */}\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='danger' onClick={() => setVisible(false)}>\n          삭제\n        </CButton>\n        <CButton color='primary' onClick={() => setVisible(false)}>\n          Cancel\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ThumbnailModal\n\n//const MultipleRows = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   flex-wrap: wrap;\n//   gap: 0 10px;\n//   margin-top: 20px;\n//   & img {\n//     width: 80px;\n//     height: 60px;\n//   }\n// `\n","import {ConfigProvider, DatePicker, Space} from 'antd'\nimport locale from 'antd/lib/locale/ko_KR'\nimport 'antd/dist/antd.min.css'\nimport moment from 'moment'\nimport 'moment/locale/ko'\nimport {CCol} from '@coreui/react'\nimport styled from 'styled-components'\n\nconst RangeDatePicker = ({setStartDate, setEndDate}) => {\n  const {RangePicker} = DatePicker\n  moment.locale('ko')\n  const datePickerOnChange = date => {\n    if (date) {\n      setStartDate(moment(date[0]._d).format('YYYY-MM-DD'))\n      setEndDate(moment(date[1]._d).format('YYYY-MM-DD'))\n    } else {\n      setStartDate('')\n      setEndDate('')\n    }\n  }\n\n  return (\n    <PickerCCol>\n      <ConfigProvider locale={locale}>\n        <Space direction='vertical'>\n          <RangePicker allowClear={true} onChange={datePickerOnChange} />\n        </Space>\n      </ConfigProvider>\n    </PickerCCol>\n  )\n}\n\nexport default RangeDatePicker\n\nconst PickerCCol = styled(CCol)`\n  display: flex;\n  flex-direction: row;\n  align-content: end;\n  justify-content: end;\n  height: 100%;\n  width: 100%;\n  & div {\n    height: 100%;\n  }\n  & .ant-space-item {\n    width: 100%;\n  }\n  & .ant-picker {\n    border-radius: 0.375rem;\n    border: solid 1px #9da5b1;\n  }\n  & .ant-space-item {\n    width: 100%;\n    & > div {\n      width: 100%;\n    }\n  }\n  & .ant-space.ant-space-vertical {\n    width: 100%;\n  }\n`\n","import React, {useEffect, useState} from 'react'\nimport {CSmartTable} from '../custom/smart-table/CSmartTable'\nimport PropTypes from 'prop-types'\nimport {\n  CBadge,\n  CButton,\n  CCol,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CFormCheck,\n  CFormInput,\n  CImage,\n  CInputGroup,\n  CRow,\n} from '@coreui/react'\nimport ThumbnailModal from './ThumbnailModal'\nimport RangeDatePicker from '../common/RangeDatePicker'\nimport moment from 'moment'\nimport ApiConfig, {HttpMethod} from '../../dataManager/apiConfig'\nimport {EndPoint} from '../../dataManager/apiMapper'\n\nconst ListTemplate = ({\n  items, // 리스트 아이템\n  onClick, // 리스트 클릭 이벤트 ex) Modal\n  columns, // 리스트의 헤더\n  className, // 리스트의 클레스 네임\n  onDelete, // 리스트 아이템 삭제\n  selectedOptions, // 리스트의 selectBox 옵션\n  datePickerHidden = true, // 기간선택 데이터 피커 출력 유무\n  itemPerPageHidden = true, // 리스트의 페이지마다 출력될 아이템 개수 선택 박스 출력 유무\n  searchInputHidden = true, // 검색창 출력 유무\n  checkBoxInputHidden = false, // 체크박스 출력 유무\n  func, //보낼 함수\n}) => {\n  // Local state 선언\n  const [listItems, setListItems] = useState([])\n  const [filterItems, setFilterItems] = useState()\n  const [showModal, setShowModal] = useState(false)\n  const [imgClick, setImgClick] = useState('')\n  const [startDate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n  const [searchOption, setSearchOption] = useState('')\n  const [allSelected, setAllSelected] = useState(false)\n\n  // 리스트 헤더 전체 체크박스\n  const handleAllSelectedOnChange = () => {\n    setAllSelected(!allSelected)\n    setListItems(\n      listItems.map(value => ({\n        ...value,\n        checked: allSelected ? false : true,\n      })),\n    )\n  }\n  // 리스트 아이템 체크박스\n  const handleItemOnSelected = item => {\n    setListItems(\n      listItems.map(value =>\n        value._id === item._id\n          ? {\n              ...value,\n              checked: !item.checked,\n            }\n          : value,\n      ),\n    )\n    if (!item.checked) {\n      item.checked = true\n    } else {\n      item.checked = false\n    }\n    console.log(item)\n  }\n  // 테이블 헤더의 전체 체크박스\n  const allCheckBox = {\n    key: 'checkBox',\n    label: (\n      <CFormCheck\n        id={'allSelected'}\n        type={'checkbox'}\n        onChange={event => handleAllSelectedOnChange(event)}\n        checked={allSelected}\n      />\n    ),\n    _props: {className: 'checkBox'},\n    sorter: false,\n    filter: false,\n  }\n\n  // 함수 선언\n\n  // 상태값 Color get 함수\n  const getBadgeColor = status => {\n    switch (status) {\n      case 'ACTIVE':\n        return 'success'\n      case 'INACTIVE':\n        return 'danger'\n      case true:\n        return 'success'\n      case false:\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  // 상태값 Text get 함수\n  const getBadgeText = status => {\n    switch (status) {\n      case 'ACTIVE':\n        return '활성화'\n      case 'INACTIVE':\n        return '비활성화'\n      case true:\n        return '완료'\n      case false:\n        return '미완료'\n      default:\n        return '기타'\n    }\n  }\n\n  const testOnClick = (event, url) => {\n    event.stopPropagation()\n    setShowModal(!showModal)\n    setImgClick(url)\n  }\n  const modalOnClick = () => {\n    setShowModal(!showModal)\n  }\n  const handleDeleteOnClick = (event, item) => {\n    event.stopPropagation()\n    onDelete(item)\n  }\n\n  const handleOnCheckedApi = async item => {\n    console.log(item)\n    // try {\n    //   const data = await ApiConfig.request({\n    //     data: {\n    //       editorIds: [item.editorId],\n    //     },\n    //     query: {},\n    //     path: {},\n    //     method: HttpMethod.PATCH,\n    //     url: `${EndPoint.EDITOR}/auth`,\n    //   })\n    //   console.log(data)\n    // } catch (error) {\n    //   alert(error)\n    // }\n  }\n\n  useEffect(() => {\n    setListItems(items)\n    if (columns) {\n      setSearchOption(columns[0].key)\n    }\n  }, [items])\n\n  useEffect(() => {\n    // data picker 에 선택된 값\n    if (endDate) {\n      setFilterItems(\n        listItems.filter(\n          value =>\n            moment(value.createdAt, 'YYYYMMDDHHmmss').format('YYYY-MM-DD') >= startDate &&\n            moment(value.createdAt, 'YYYYMMDDHHmmss').format('YYYY-MM-DD') <= endDate,\n        ),\n      )\n      // 생성일로 필터\n    } else {\n      setFilterItems('')\n    }\n  }, [endDate])\n\n  const handleSearchOnClick = () => {\n    console.log('test')\n  }\n  const handleSearchItemOnClick = key => {\n    setSearchOption(key)\n  }\n  return (\n    <>\n      <CRow className={'justify-content-end'}>\n        {searchInputHidden && (\n          <CCol xs={4}>\n            <CInputGroup>\n              <CDropdown alignment='end' variant='input-group'>\n                <CDropdownToggle color='secondary' variant='outline' split>\n                  {searchOption}\n                </CDropdownToggle>\n                <CFormInput aria-label='Text input with segmented dropdown button' />\n                <CDropdownMenu>\n                  {columns.map(({key}) => {\n                    if (key !== 'createdAt') {\n                      return (\n                        <CDropdownItem key={key} onClick={() => handleSearchItemOnClick(key)}>\n                          {key}\n                        </CDropdownItem>\n                      )\n                    }\n                  })}\n                </CDropdownMenu>\n              </CDropdown>\n              <CButton type='button' color='secondary' variant='outline' onClick={() => handleSearchOnClick()}>\n                검색\n              </CButton>\n            </CInputGroup>\n          </CCol>\n        )}\n\n        <CCol xs={4}>\n          {datePickerHidden && <RangeDatePicker setStartDate={setStartDate} setEndDate={setEndDate} />}\n        </CCol>\n      </CRow>\n      <br />\n      <CSmartTable\n        items={filterItems || listItems}\n        columns={checkBoxInputHidden ? [allCheckBox, ...columns] : columns || null}\n        activePage={1}\n        columnSorter\n        pagination\n        clickableRows\n        tableHeadProps={{\n          color: 'primary',\n        }}\n        onRowClick={onClick}\n        tableProps={{\n          hover: true,\n          responsive: true,\n          striped: true,\n          align: 'middle',\n          className: className,\n        }}\n        scopedColumns={{\n          checkBox: item => (\n            <td onClick={event => event.stopPropagation()}>\n              <CFormCheck onChange={() => handleItemOnSelected(item)} checked={item.checked || false} />\n            </td>\n          ),\n          isAuthorized: item => (\n            <td onClick={event => event.stopPropagation()}>\n              <CFormCheck onChange={() => func(item)} checked={item.isAuthorized || false} />\n            </td>\n          ),\n          // 상태\n          status: ({status}) => (\n            <td>\n              <CBadge color={getBadgeColor(status)}>{getBadgeText(status)}</CBadge>\n            </td>\n          ),\n          reply: ({reply}) => (\n            <td>\n              <CBadge color={getBadgeColor(reply)}>{getBadgeText(reply)}</CBadge>\n            </td>\n          ),\n          // 이미지\n          images: ({images}) => (\n            <td onClick={event => (images.length !== 0 ? testOnClick(event, images) : onClick)}>\n              <CImage rounded src={images.length === 0 ? '' : images[0]} alt='' width={100} height={60} />\n            </td>\n          ),\n          deleteBtn: item => (\n            <td onClick={event => handleDeleteOnClick(event, item)}>\n              <CBadge color={'danger'}>삭제</CBadge>\n            </td>\n          ),\n          //\n          //category: ({category}) => <td>{selectedOptions ? selectedOptions[category] : ''}</td>,\n          jobType: ({jobType}) => <td>{selectedOptions ? selectedOptions[jobType] : ''}</td>,\n          education: ({education}) => <td>{selectedOptions ? selectedOptions[education] : ''}</td>,\n          inquiryType: ({inquiryType}) => <td>{selectedOptions ? selectedOptions[inquiryType] : ''}</td>,\n          career: ({career}) => <td>{selectedOptions ? selectedOptions[career] : ''}</td>,\n          proceed: ({proceed}) => <td>{proceed ? '채용중' : '채용 마감'}</td>,\n          deliveryStatus: ({deliveryStatus}) => (\n            <td>\n              <CBadge color={'primary'}>{selectedOptions ? selectedOptions[deliveryStatus] : 'Not Data'} </CBadge>\n            </td>\n          ),\n          productImg: ({productImg}) => (\n            <td>\n              <CImage rounded src={productImg || ''} alt='' width={100} height={60} />\n            </td>\n          ),\n          startedAt: ({startedAt}) => <td>{moment(startedAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          closedAt: ({closedAt}) => <td>{moment(closedAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          createdAt: ({createdAt}) => <td>{moment(createdAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          updatedAt: ({updatedAt}) => <td>{moment(updatedAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          noticeFiles: ({noticeFiles}) => <td>{noticeFiles?.length} 개</td>,\n        }}\n        noItemsLabel={'데이터가 없습니다.'}\n        //itemsPerPageSelect={itemPerPageHidden}\n        itemsPerPage={20}\n      />\n      {showModal ? (\n        <ThumbnailModal visible={showModal} setVisible={setShowModal} onClick={modalOnClick} url={imgClick} />\n      ) : (\n        ''\n      )}\n    </>\n  )\n}\n\nListTemplate.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n  selectedOptions: PropTypes.object,\n  datePickerHidden: PropTypes.bool,\n  itemPerPageHidden: PropTypes.bool,\n}\n\nexport default ListTemplate\n","import Axios from 'axios'\nimport {isEmpty} from '../utils/utility'\n\nexport const HttpMethod = {\n  GET: 'get',\n  POST: 'post',\n  PUT: 'put',\n  PATCH: 'patch',\n  // DELETE: \"delete\",\n}\n\nexport default class ApiConfig {\n  static request({data, query, path, method, url}) {\n    try {\n      if (isEmpty(method) || isEmpty(url)) {\n        alert('HTTP Method 와 URL 을 확인해주세요.')\n        return\n      }\n\n      // const api = ApiMapper[method][url]\n      // if (isEmpty(api)) {\n      //   alert(`요청하신 API가 존재하지 않습니다.\\n[METHOD: ${method}]\\n[URL:${url}]`)\n      //   return\n      // }\n\n      if (path) {\n        for (const [key, value] of Object.entries(path)) {\n          url = url.replace(`:${key}`, value)\n        }\n      }\n\n      if (!isEmpty(query)) {\n        url +=\n          '?' +\n          Object.keys(query)\n            .map(key => key + '=' + query[key])\n            .join('&')\n      }\n\n      const headers = {\n        accept: 'application/json',\n        'Content-Type': 'application/json',\n        'X-Access-Token': window.sessionStorage.getItem('jwt'),\n      }\n\n      switch (method) {\n        case HttpMethod.GET:\n          return Axios.get(url, {headers: headers})\n        case HttpMethod.POST:\n          return Axios.post(url, data, {headers: headers})\n        case HttpMethod.PATCH:\n          return Axios.patch(url, data, {headers: headers})\n        case HttpMethod.PUT:\n          return Axios.put(url, data, {headers: headers})\n        // case HttpMethod.DELETE:\n        //   return Axios.delete(url, data, {headers: headers})\n        default:\n          break\n      }\n    } catch (error) {\n      alert(error.message)\n    }\n  }\n}\n","const API = process.env.REACT_APP_API\n\nexport const EndPoint = {\n  // ------ 오케이포스 홈페이지\n  GET_V1_TEST_AUTO_LOGIN: `${API}/test/v1/jwt/check/:isManual`,\n  POST_LOGIN: `${API}/admin/login`,\n  POST_TEST_V1_REGISTER: `${API}/test/v1/register`,\n  RECRUITMENT: `${API}/admin/recruitment`,\n  TALENTPOOL: `${API}/admin/talent-pool`,\n  EDITOR: `${API}/admin/editor`,\n\n  // ------ 파트너 센터 페이지\n  GET_PARTNER_USERS: `${API}/admin/partner/users`, // 유저 리스트\n  GET_PARTNER_INACTIVE_USERS: `${API}/admin/partner/users/inactive`, // 탈퇴 유저 리스트\n  GET_PARTNER_INQUIRIES: `${API}/admin/partner/inquiries`, // 1:1 문의 리스트\n  GET_PARTNER_NOTICES: `${API}/admin/partner/notices`, // 공지사항 리스트\n  GET_PARTNER_AGENCYAPPLICANT: `${API}/admin/partner/notices/agencyApplicant`, // 영업점 딜러 지원 리스트\n\n  // ------ 가맹점 전용 공식몰 페이지\n  GET_MALL_USERS: `${API}/admin/mall/users`,\n  GET_MALL_USER: `${API}/admin/mall/users/:userId`,\n  GET_MALL_RESIGNUSERS: `${API}/admin/mall/users/resign`,\n  GET_MALL_RESIGNUSER: `${API}/admin/mall/users/resign/:userId`,\n\n  GET_MALL_INQUIRIES: `${API}/admin/mall/inquiries`,\n  GET_MALL_INQUIRY: `${API}/admin/mall/inquiries/:inquiryId`,\n  POST_MALL_INQUIRY_REPLY: `${API}/admin/mall/inquiryReplies`,\n  PATCH_MALL_UPDATE_INQUIRY_REPLY: `${API}/admin/mall/inquiryReplies`,\n  PATCH_MALL_DELETE_INQUIRY: `${API}/admin/mall/inquiries/:inquiryId`,\n\n  GET_MALL_FAQS: `${API}/admin/mall/faqs`,\n  GET_MALL_FAQ: `${API}/admin/mall/faqs/:faqId`,\n  POST_MALL_FAQ: `${API}/admin/mall/faqs`,\n  PATCH_MALL_UPDATE_FAQ: `${API}/admin/mall/faqs`,\n  PATCH_MALL_DELETE_FAQ: `${API}/admin/mall/faqs/:faqId`,\n\n  GET_MALL_DATAROOMS: `${API}/admin/mall/datarooms`,\n  GET_MALL_DATAROOM: `${API}/admin/mall/datarooms/:dataRoomId`,\n  POST_MALL_DATAROOMS: `${API}/admin/mall/datarooms`,\n\n  // ------ 대리점 전용 파트너 센터\n  POST_REGISTER: `${API}/admin/join`,\n}\n\nconst ApiMapper = {\n  get: {\n    [EndPoint.GET_V1_TEST_AUTO_LOGIN]: {},\n\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.GET_MALL_USERS]: {},\n    [EndPoint.GET_MALL_USER]: {},\n    [EndPoint.GET_MALL_RESIGNUSERS]: {},\n    [EndPoint.GET_MALL_RESIGNUSER]: {},\n    [EndPoint.GET_MALL_INQUIRIES]: {},\n    [EndPoint.GET_MALL_INQUIRY]: {},\n    [EndPoint.GET_MALL_FAQS]: {},\n    [EndPoint.GET_MALL_FAQ]: {},\n    [EndPoint.GET_MALL_DATAROOMS]: {},\n    [EndPoint.GET_MALL_DATAROOM]: {},\n\n    // ------ 파트너센터 페이지\n    [EndPoint.GET_PARTNER_USERS]: {},\n    [EndPoint.GET_PARTNER_INACTIVE_USERS]: {},\n    [EndPoint.GET_PARTNER_INQUIRIES]: {},\n    [EndPoint.GET_PARTNER_NOTICES]: {},\n    [EndPoint.GET_PARTNER_AGENCYAPPLICANT]: {},\n  },\n  post: {\n    [EndPoint.POST_LOGIN]: {},\n    [EndPoint.POST_REGISTER]: {},\n\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.POST_MALL_INQUIRY_REPLY]: {},\n    [EndPoint.POST_MALL_FAQ]: {},\n    [EndPoint.POST_MALL_DATAROOMS]: {},\n  },\n  patch: {\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.PATCH_MALL_UPDATE_INQUIRY_REPLY]: {},\n    [EndPoint.PATCH_MALL_DELETE_INQUIRY]: {},\n    [EndPoint.PATCH_MALL_UPDATE_FAQ]: {},\n    [EndPoint.PATCH_MALL_DELETE_FAQ]: {},\n  },\n  put: {},\n  delete: {},\n}\n\nexport default ApiMapper\n"],"names":["title","Header","styled","visible","setVisible","useState","imgUrl","setImgUrl","console","log","alignment","size","onClose","className","align","fluid","src","alt","width","color","onClick","setStartDate","setEndDate","RangePicker","DatePicker","moment","PickerCCol","locale","direction","allowClear","onChange","date","_d","format","CCol","items","columns","onDelete","selectedOptions","datePickerHidden","itemPerPageHidden","searchInputHidden","checkBoxInputHidden","func","listItems","setListItems","filterItems","setFilterItems","showModal","setShowModal","imgClick","setImgClick","startDate","endDate","searchOption","setSearchOption","allSelected","setAllSelected","allCheckBox","key","label","id","type","event","map","value","checked","_props","sorter","filter","getBadgeColor","status","getBadgeText","useEffect","createdAt","xs","variant","split","handleSearchItemOnClick","CSmartTable","activePage","columnSorter","pagination","clickableRows","tableHeadProps","onRowClick","tableProps","hover","responsive","striped","scopedColumns","checkBox","item","stopPropagation","_id","handleItemOnSelected","isAuthorized","reply","images","length","url","testOnClick","rounded","height","deleteBtn","handleDeleteOnClick","jobType","education","inquiryType","career","proceed","deliveryStatus","productImg","startedAt","closedAt","updatedAt","noticeFiles","noItemsLabel","itemsPerPage","HttpMethod","GET","POST","PUT","PATCH","ApiConfig","data","query","path","method","isEmpty","alert","Object","entries","replace","keys","join","headers","accept","window","sessionStorage","getItem","Axios","error","message","API","process","EndPoint","GET_V1_TEST_AUTO_LOGIN","POST_LOGIN","POST_TEST_V1_REGISTER","RECRUITMENT","TALENTPOOL","EDITOR","GET_PARTNER_USERS","GET_PARTNER_INACTIVE_USERS","GET_PARTNER_INQUIRIES","GET_PARTNER_NOTICES","GET_PARTNER_AGENCYAPPLICANT","GET_MALL_USERS","GET_MALL_USER","GET_MALL_RESIGNUSERS","GET_MALL_RESIGNUSER","GET_MALL_INQUIRIES","GET_MALL_INQUIRY","POST_MALL_INQUIRY_REPLY","PATCH_MALL_UPDATE_INQUIRY_REPLY","PATCH_MALL_DELETE_INQUIRY","GET_MALL_FAQS","GET_MALL_FAQ","POST_MALL_FAQ","PATCH_MALL_UPDATE_FAQ","PATCH_MALL_DELETE_FAQ","GET_MALL_DATAROOMS","GET_MALL_DATAROOM","POST_MALL_DATAROOMS","POST_REGISTER"],"sourceRoot":""}