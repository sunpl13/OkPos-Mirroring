{"version":3,"file":"static/js/1981.10f42933.chunk.js","mappings":"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","sources":["components/forms/downloadForm/MultiFileDownloadForm.js","components/forms/inputForm/ModalInput.js","components/Modal/officialMall/InquiryDetailModal.js","pages/officialMall/inquiry/InquiryList.js","utils/awsCustom.js","utils/columns/officialMall/Columns.js"],"sourcesContent":["import {CCol, CFormLabel} from '@coreui/react'\nimport {map} from 'lodash'\nimport styled from 'styled-components'\nimport {antdImageFormat} from '../../../utils/awsCustom'\n\nconst MultiFileDownloadForm = ({id, placeholder, files, label, isRequired}) => {\n  const downloadFile = (url, fileName) => {\n    url = antdImageFormat(url)\n\n    fetch(url, {method: 'GET'})\n      .then(res => {\n        return res.blob()\n      })\n      .then(blob => {\n        const url = window.URL.createObjectURL(blob)\n        const a = document.createElement('a')\n        a.href = url\n        a.download = fileName\n        document.body.appendChild(a)\n        a.click()\n        setTimeout(_ => {\n          window.URL.revokeObjectURL(url)\n        }, 60000)\n        a.remove()\n      })\n      .catch(err => {\n        console.error('err: ', err)\n      })\n  }\n\n  //onClick={() => downloadFile(file, fileName)}\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol>\n        {files.length > 0 ? (\n          files.map((file, index) => {\n            const splitUrl = file.split('/') //   \"/\" 로 전체 url 을 나눈다\n            const splitUrlLength = splitUrl.length\n            const fileName = splitUrl[splitUrlLength - 1] // 나누어진 배열의 맨 끝이 파일명이다\n            return (\n              <div key={index} className='col-form-label'>\n                <SpanStyle\n                  role='link'\n                  key={index}\n                  href={antdImageFormat(file)}\n                  onClick={() => downloadFile(file, fileName)}\n                >\n                  {index + 1}. {fileName}\n                </SpanStyle>\n              </div>\n            )\n          })\n        ) : (\n          <div className='col-form-label'>등록된 파일이 없습니다.</div>\n        )}\n      </CCol>\n    </>\n  )\n}\nexport default MultiFileDownloadForm\n\nconst SpanStyle = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  padding: 0 8px;\n  line-height: 1.5714285714285714;\n  flex: auto;\n  transition: all 0.3s;\n  color: #1677ff !important;\n  text-decoration: none;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n`\n","import {CCol, CFormInput, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\nconst ModalInput = ({type, onChange, id, placeholder, value, label, readOnly, disabled, isRequired}) => {\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        <CFormInput\n          type={type || 'text'}\n          id={id}\n          placeholder={placeholder || ''}\n          value={type === 'file' ? undefined : value || ''}\n          onChange={onChange}\n          readOnly={readOnly}\n          disabled={disabled}\n        />\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalInput\n","import {\n  CButton,\n  CForm,\n  CFormTextarea,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport MultiFileDownloadForm from '../../forms/downloadForm/MultiFileDownloadForm'\n\nconst InquiryDetailModal = ({\n  onClick,\n  onCreate,\n  onChange,\n  onDelete,\n  value,\n  isReadOnly,\n  setIsReadOnly,\n  isUpdate,\n  setIsUpdate,\n  visible,\n  setVisible,\n}) => {\n  // modal title 세팅\n  let modalTitle = '1:1 문의 상세 내용'\n  if (isUpdate) modalTitle = '1:1 문의 답변 수정'\n  if (isReadOnly) modalTitle = '1:1 문의 상세 내용'\n\n  // 함수 선언\n\n  const clickUpdateBtn = () => {\n    setIsReadOnly(false)\n    setIsUpdate(true)\n  }\n\n  return (\n    <CModal size='lg' visible={visible} onClose={() => setVisible(false)}>\n      <CModalHeader>\n        <CModalTitle>{modalTitle}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput id={'id'} placeholder={'inquiryId'} label={'No'} value={value.inquiryId} readOnly disabled />\n          <ModalInput id={'name'} placeholder={'이름'} label={'이름'} value={value.name} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput id={'email'} placeholder={'이메일'} label={'이메일'} value={value.email} readOnly disabled />\n          <ModalInput\n            id={'phoneNumber'}\n            placeholder={'휴대전화번호'}\n            label={'휴대전화번호'}\n            value={value.phoneNumber}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'category'}\n            placeholder={'문의 유형'}\n            label={'문의 유형'}\n            value={value.category}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <CFormTextarea id='content' label='문의내용' value={value.content} readOnly disabled rows={9} />\n        </CRow>\n        <CRow className={'p-2'}>\n          <MultiFileDownloadForm\n            id={'files'}\n            placeholder={'첨부파일'}\n            label={'첨부파일'}\n            files={value.files || ''}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <hr />\n        <CForm>\n          <CFormTextarea\n            id='inquiryReplyContent'\n            placeholder={'답변 미작성'}\n            rows={9}\n            value={value.inquiryReplyContent || ''}\n            onChange={onChange}\n            disabled={isReadOnly}\n          />\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        {isReadOnly ? (\n          <CButton color='success' onClick={clickUpdateBtn}>\n            수정\n          </CButton>\n        ) : (\n          <CButton onClick={() => onCreate(value)} color='primary'>\n            저장\n          </CButton>\n        )}\n        <CButton color='danger' onClick={() => onDelete(value)}>\n          삭제\n        </CButton>\n        <CButton color='secondary' onClick={() => setVisible(false)}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default InquiryDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCardHeader, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport InquiryDetailModal from '../../../components/Modal/officialMall/InquiryDetailModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {inquiryListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\n\nconst InquiryList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [inquiryList, setInquiryList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({\n    inquiryMallId: 0,\n    name: '',\n    email: '',\n    category: '',\n    phoneNumber: '',\n    inquiryReplyContent: '',\n  })\n  const [showModal, setShowModal] = useState(false)\n  const [isReadOnly, setIsReadOnly] = useState(false)\n  const [isUpdate, setIsUpdate] = useState(false)\n\n  // API 통신 함수\n  const onLoadMallInquiryList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_INQUIRIES,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('onLoadMallInquiryList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setInquiryList(res.result.inquiryInfos)\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  const onloadMallInquiry = async inquiryId => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {inquiryId},\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_INQUIRY,\n      })\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('onloadMallInquiry error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      await setSelectedItem(res.result)\n      if (res.result.inquiryReplyId) {\n        setIsReadOnly(true)\n      } else {\n        setIsReadOnly(false)\n      }\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Create Inquiry Answer\n  const onCreateMallInquiryAnswer = async (inquiryId, inquiryReplyContent) => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.POST,\n        url: EndPoint.POST_MALL_INQUIRY_REPLY,\n        data: {\n          inquiryId: inquiryId,\n          inquiryReplyContent: inquiryReplyContent,\n        },\n      })\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        }\n      }\n      alert(res?.message)\n      await onloadMallInquiry(inquiryId)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Update Inquiry Answer\n  const onUpdateInquiryAnswer = async (inquiryId, inquiryReplyId, inquiryReplyContent) => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_UPDATE_INQUIRY_REPLY,\n        data: {\n          inquiryId: inquiryId,\n          inquiryReplyId: inquiryReplyId,\n          inquiryReplyContent: inquiryReplyContent,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      alert(res?.message)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Delete Inquiry\n  const onDeleteInquiry = async inquiry => {\n    const {inquiryId} = inquiry\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_DELETE_INQUIRY,\n        path: {inquiryId},\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n      }\n      alert(res?.message)\n      setShowModal(!showModal)\n      await onLoadMallInquiryList()\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallInquiryList()\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowInquiryDetailModal = async item => {\n    await onloadMallInquiry(item.inquiryId)\n    await setShowModal(!showModal)\n  }\n\n  // data onChange\n  const handleInquiryModalOnChange = e => {\n    const {id, value} = e.target\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n\n  // 답변 저장\n  const handleInquiryModalCreate = async inquiry => {\n    const {inquiryId, inquiryReplyContent} = selectedItem\n    const {inquiryReplyId} = inquiry\n\n    // validation\n    if (!inquiryId) return alert('번호를 찾을 수 없습니다.')\n    if (!inquiryReplyContent) return alert('답변을 입력해주세요')\n\n    if (window.confirm('저장 하시겠습니까?')) {\n      if (inquiryReplyId) {\n        // update\n        await onUpdateInquiryAnswer(inquiryId, inquiryReplyId, inquiryReplyContent)\n      } else {\n        // create\n        await onCreateMallInquiryAnswer(inquiryId, inquiryReplyContent)\n      }\n\n      await onLoadMallInquiryList()\n      setIsReadOnly(true)\n      setIsUpdate(false)\n    }\n  }\n  return (\n    <CRow>\n      <PageHeader title='1 : 1 문의 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={inquiryList}\n              onClick={handleShowInquiryDetailModal}\n              columns={inquiryListColumns}\n              className={'userList'}\n              datePickerHidden={false}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <InquiryDetailModal\n        visible={showModal}\n        setVisible={setShowModal}\n        value={selectedItem}\n        onCreate={handleInquiryModalCreate}\n        onChange={handleInquiryModalOnChange}\n        onDelete={onDeleteInquiry}\n        isReadOnly={isReadOnly}\n        setIsReadOnly={setIsReadOnly}\n        isUpdate={isUpdate}\n        setIsUpdate={setIsUpdate}\n      />\n    </CRow>\n  )\n}\n\nexport default InquiryList\n","//url 리스트를 보낼 때 커스텀 해주는 함수\nexport const sendFileUrlFormat = array => {\n  return array.map(item => {\n    return item.url.split('.com/')[1]\n  })\n}\n\nexport const returnBucketName = imgPath => {\n  return `${process.env.REACT_APP_AWS_BUCKET_NAME}/admin/images/${imgPath}`\n}\n\nexport const antdImageFormat = path => {\n  return `https://${process.env.REACT_APP_AWS_BUCKET_NAME}.s3.${process.env.REACT_APP_AWS_REGION}.amazonaws.com/${path}`\n}\n\nexport const returnBucketNameFile = imgPath => {\n  return `${process.env.REACT_APP_AWS_BUCKET_NAME}/admin/files/${imgPath}`\n}\n","// 회원 리스트\nexport const userListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 탈퇴회원 리스트\nexport const resignUserListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'resignReason', label: '탈퇴사유', _props: {className: 'resignReason'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'updatedAt', label: '계정탈퇴일', sorter: false, filter: false, _props: {className: 'updatedAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 1:1 문의 리스트\nexport const inquiryListColumns = [\n  {key: 'inquiryId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '문의 유형', _props: {className: 'category'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'reply', label: '답변', sorter: false, filter: false, _props: {className: 'reply'}},\n]\n\n// FAQ 리스트\nexport const faqListColumns = [\n  {key: 'faqId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '분류', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n]\n\n// 자료실 리스트\nexport const dataRoomListColumns = [\n  {key: 'dataRoomId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '분류', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n\n// 주문 현황 관리\nexport const orderListColumns = [\n  {key: 'orderId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '분류', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n"],"names":["id","files","placeholder","label","isRequired","htmlFor","className","length","map","file","index","splitUrl","split","fileName","SpanStyle","role","href","antdImageFormat","onClick","url","fetch","method","then","res","blob","window","URL","createObjectURL","a","document","createElement","download","body","appendChild","click","setTimeout","_","revokeObjectURL","remove","catch","err","console","error","downloadFile","styled","type","onChange","value","readOnly","disabled","style","display","undefined","onCreate","onDelete","isReadOnly","setIsReadOnly","isUpdate","setIsUpdate","visible","setVisible","modalTitle","size","onClose","ModalInput","inquiryId","name","email","phoneNumber","category","content","rows","MultiFileDownloadForm","inquiryReplyContent","color","navigate","useNavigate","useState","inquiryList","setInquiryList","inquiryMallId","selectedItem","setSelectedItem","showModal","setShowModal","onLoadMallInquiryList","ApiConfig","HttpMethod","EndPoint","data","isSuccess","isEmpty","result","log","code","alert","message","inquiryInfos","onloadMallInquiry","query","path","inquiryReplyId","onCreateMallInquiryAnswer","onUpdateInquiryAnswer","onDeleteInquiry","inquiry","useEffect","handleShowInquiryDetailModal","item","handleInquiryModalCreate","confirm","PageHeader","title","xs","ListTemplate","items","columns","inquiryListColumns","datePickerHidden","e","target","sendFileUrlFormat","array","returnBucketName","imgPath","process","returnBucketNameFile","userListColumns","key","sorter","filter","_props","resignUserListColumns","faqListColumns","dataRoomListColumns","orderListColumns"],"sourceRoot":""}