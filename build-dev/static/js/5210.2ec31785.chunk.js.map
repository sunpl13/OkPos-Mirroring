{"version":3,"file":"static/js/5210.2ec31785.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/InboxOutlined.js","../node_modules/@ant-design/icons/es/icons/InboxOutlined.js","components/forms/inputForm/ModalFilesInput.js","components/forms/inputForm/ModalSelect.js","components/forms/inputForm/ModalTextArrayInput.js","components/Modal/partnerCenter/material/MeterialDetailModal.js","pages/partnerCenter/material/MaterialList.js","utils/awsCustom.js","utils/columns/partnerCenter/ColumnsSelectData.js"],"sourcesContent":["// This icon file is generated automatically.\nvar InboxOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M885.2 446.3l-.2-.8-112.2-285.1c-5-16.1-19.9-27.2-36.8-27.2H281.2c-17 0-32.1 11.3-36.9 27.6L139.4 443l-.3.7-.2.8c-1.3 4.9-1.7 9.9-1 14.8-.1 1.6-.2 3.2-.2 4.8V830a60.9 60.9 0 0060.8 60.8h627.2c33.5 0 60.8-27.3 60.9-60.8V464.1c0-1.3 0-2.6-.1-3.7.4-4.9 0-9.6-1.3-14.1zm-295.8-43l-.3 15.7c-.8 44.9-31.8 75.1-77.1 75.1-22.1 0-41.1-7.1-54.8-20.6S436 441.2 435.6 419l-.3-15.7H229.5L309 210h399.2l81.7 193.3H589.4zm-375 76.8h157.3c24.3 57.1 76 90.8 140.4 90.8 33.7 0 65-9.4 90.3-27.2 22.2-15.6 39.5-37.4 50.7-63.6h156.5V814H214.4V480.1z\" } }] }, \"name\": \"inbox\", \"theme\": \"outlined\" };\nexport default InboxOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport InboxOutlinedSvg from \"@ant-design/icons-svg/es/asn/InboxOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar InboxOutlined = function InboxOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: InboxOutlinedSvg\n  }));\n};\n\nInboxOutlined.displayName = 'InboxOutlined';\nexport default /*#__PURE__*/React.forwardRef(InboxOutlined);","import {InboxOutlined} from '@ant-design/icons'\nimport {Upload} from 'antd'\nimport styled from 'styled-components'\nimport {CFormLabel} from '@coreui/react'\nimport AWS from 'aws-sdk'\nimport {useEffect} from 'react'\nimport {antdImageFormat, returnBucketNameFile} from '../../../utils/awsCustom'\n\nconst ModalFilesInput = ({files, label, id, disabled, fileList, setFileList, filePath}) => {\n  // files = 조회를 통해 가져온 데이터가 있는 경우\n  useEffect(() => {\n    if (files && files.length > 0) {\n      setFileList(\n        files.map((path, index) => ({\n          key: index,\n          uid: path,\n          name: getFileNameFromURL(path),\n          status: 'done',\n          //url: antdImageFormat(path),\n          url: path,\n        })),\n      )\n    }\n  }, [files])\n\n  const getFileNameFromURL = url => {\n    //   \"/\" 로 전체 url 을 나눈다\n    const splitUrl = url.split('/')\n    const splitUrlLength = splitUrl.length\n    // 나누어진 배열의 맨 끝이 파일명이다\n    const fileName = splitUrl[splitUrlLength - 1]\n    return fileName\n  }\n\n  const onSuccess = successData => {\n    const httpRequest = successData.request.httpRequest\n    const file = httpRequest.body\n    const {protocol, host} = httpRequest.endpoint\n\n    const fileData = {\n      uid: successData.request.params.Key,\n      name: file.name,\n      status: 'done',\n      url: `${protocol}//${host}${httpRequest.path}`,\n    }\n    setFileList([...fileList, fileData])\n  }\n\n  // 파일 업로드\n  const customReq = ({file, onError, onProgress, onSuccess}) => {\n    AWS.config.update({\n      region: process.env.REACT_APP_AWS_REGION,\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n    })\n\n    const S3 = new AWS.S3()\n    const fileName = file.name.replaceAll(' ', '')\n    const objParams = {\n      Bucket: returnBucketNameFile(filePath),\n      Key: fileName,\n      Body: file,\n      ContentType: file.type, // TODO: You should set content-type because AWS SDK will not automatically set file MIME\n    }\n\n    const upload = S3.putObject(objParams)\n      .on('httpUploadProgress', ({loaded, total}) => onProgress({percent: (loaded / total) * 100}))\n      .promise()\n    upload.then(\n      function (data) {\n        onSuccess(data.$response)\n      },\n      function (error) {\n        onError()\n        console.log(error.code)\n        console.log(error.message)\n      },\n    )\n  }\n\n  // 파일 삭제\n  const onDelete = item => {\n    AWS.config.update({\n      region: process.env.REACT_APP_AWS_REGION,\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n    })\n\n    const S3 = new AWS.S3()\n\n    const objParams = {\n      Bucket: `${process.env.REACT_APP_AWS_BUCKET_NAME}`,\n      Key: item.uid,\n    }\n\n    S3.deleteObject(objParams, (err, data) => {\n      if (err) {\n        setFileList(\n          fileList.map(file => {\n            if (file.uid === item.uid) {\n              return {...file, status: 'error'}\n            } else {\n              return file\n            }\n          }),\n        )\n      }\n      setFileList(fileList.filter(file => file.uid !== item.uid))\n    })\n  }\n\n  const props = {\n    name: 'file',\n    multiple: true,\n    disabled: disabled,\n    fileList: fileList,\n    customRequest(data) {\n      customReq(data)\n    },\n    onSuccess(data) {\n      onSuccess(data)\n    },\n    onRemove(data) {\n      onDelete(data)\n    },\n  }\n\n  return (\n    <>\n      <DivBox className={disabled ? 'disabled' : ''}>\n        <CFormLabel className=' col-form-label'>{label || ''}</CFormLabel>\n        <Upload.Dragger {...props} id={id}>\n          <p className='ant-upload-drag-icon'>\n            <InboxOutlined />\n          </p>\n          <p className='ant-upload-text'>업로드하려면 이 영역으로 파일을 클릭하거나 드래그하세요.</p>\n          <p className='ant-upload-hint'>추가설명</p>\n        </Upload.Dragger>\n      </DivBox>\n    </>\n  )\n}\n\nexport default ModalFilesInput\n\nconst DivBox = styled.div`\n  border-radius: 0.375rem;\n  &.disabled {\n    background: #d8dbe0;\n  }\n  & .ant-upload-disabled {\n    background: #d8dbe0;\n    border: 0.5px dashed #b1b7c1;\n    opacity: 1;\n  }\n  & > span {\n    display: flex;\n    flex-direction: column;\n  }\n`\n","import {CCol, CFormSelect, CFormLabel} from '@coreui/react'\nimport * as PorpTypes from 'prop-types'\n\nconst ModalSelect = ({\n  onChange,\n  size,\n  placeholder,\n  label,\n  value,\n  readOnly,\n  id,\n  disabled = false,\n  isRequired,\n  options,\n}) => {\n  const newOptions = options.map(item => (\n    <option key={item.key} value={item.key}>\n      {item.value}\n    </option>\n  ))\n\n  return (\n    <>\n      <CFormLabel htmlFor='staticEmail' className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol>\n        <CFormSelect value={value} disabled={disabled} id={id} size={size} onChange={onChange} readOnly={readOnly}>\n          <option>{placeholder}</option>\n          {newOptions}\n        </CFormSelect>\n      </CCol>\n    </>\n  )\n}\n\nModalSelect.propTypes = {\n  onChange: PorpTypes.func,\n  size: PorpTypes.string,\n  placeholder: PorpTypes.string,\n  label: PorpTypes.string,\n  value: PorpTypes.any,\n  readOnly: PorpTypes.bool,\n  id: PorpTypes.string,\n  disabled: PorpTypes.bool,\n  isRequired: PorpTypes.bool,\n  options: PorpTypes.any,\n}\n\nexport default ModalSelect\n","import {CCol, CFormTextarea} from '@coreui/react'\n\nconst ModalTextArrayInput = ({id, value, rows, label, onChange, text, readOnly, disabled}) => {\n  return (\n    <CCol>\n      <CFormTextarea\n        id={id || ''}\n        label={label || ''}\n        rows={rows || 10}\n        value={value || ''}\n        onChange={onChange}\n        text={text || ''}\n        readOnly={readOnly}\n        disabled={disabled}\n      />\n    </CCol>\n  )\n}\n\nexport default ModalTextArrayInput\n","import {useEffect} from 'react'\nimport ModalInput from '../../../forms/inputForm/ModalInput'\nimport ModalTextArrayInput from '../../../forms/inputForm/ModalTextArrayInput'\nimport ModalFilesInput from '../../../forms/inputForm/ModalFilesInput'\nimport ModalSelect from '../../../forms/inputForm/ModalSelect'\nimport {meterialOptions} from '../../../../utils/columns/partnerCenter/ColumnsSelectData'\nimport DetailModalTemplate from '../DetailModalTemplate'\nimport {CForm, CRow} from '@coreui/react'\nimport PropTypes from 'prop-types'\n\nconst MeterialDetailModal = ({onChange, value, visible, setVisible, upDate}) => {\n  const {no, title, content, createdAt} = value\n\n  useEffect(() => {\n    if (visible) {\n    }\n  }, [visible])\n\n  return (\n    <DetailModalTemplate\n      title={no !== 0 ? '자료 상세' : '자료 추가'}\n      visible={visible}\n      setVisible={setVisible}\n      upDate={upDate}\n      btnText={no !== 0 ? '수정' : '추가'}\n    >\n      <CRow className={'p-2'}>\n        <ModalInput id={'no'} placeholder={'No'} label={'No'} value={no} onChange={onChange} readOnly disabled />\n        <ModalSelect\n          id={'category'}\n          placeholder={'category'}\n          label={'카테고리'}\n          options={meterialOptions || []}\n          value={value.category}\n          onChange={onChange}\n          size={'sm'}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput id={'title'} placeholder={'제목'} label={'제목'} value={title} onChange={onChange} />\n      </CRow>\n      <CRow>\n        <ModalTextArrayInput id='content' label={'본문'} value={content} onChange={onChange} rows={9} />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalFilesInput id={'files'} value={''} label={'첨부파일'} />\n      </CRow>\n      <br />\n      <CForm>\n        <CRow className={'p-2'}>\n          <ModalInput id={'createdAd'} placeholder={'작성일'} label={'작성일'} value={createdAt} readOnly disabled />\n        </CRow>\n      </CForm>\n    </DetailModalTemplate>\n  )\n}\nMeterialDetailModal.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  visible: PropTypes.bool,\n  setVisible: PropTypes.func,\n  upDate: PropTypes.func,\n}\n\nexport default MeterialDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {materiaList} from '../../../utils/columns/partnerCenter/Columns'\nimport MeterialDetailModal from '../../../components/Modal/partnerCenter/material/MeterialDetailModal'\nimport {meterialListData} from '../../../utils/columns/partnerCenter/ColumnsTestData'\n\nconst MaterialList = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [editCheck, setEditCheck] = useState({})\n\n  const [showModal, setShowModal] = useState(false)\n  useEffect(() => {\n    setItems(meterialListData)\n  }, [])\n\n  /** Open Modal*/\n  const handleShowMaterialDetailModal = item => {\n    if (!item.no) {\n      setShowModal(!showModal)\n      setSelectedItem({\n        no: 0,\n        title: '',\n        content: '',\n        files: '',\n        createdAt: '',\n      })\n    } else {\n      setSelectedItem(item)\n      setEditCheck(item)\n      setShowModal(!showModal)\n    }\n  }\n\n  const handleDetailModalUpDate = () => {\n    const {no, title, content, files, category} = selectedItem\n    if (no !== 0) {\n      if (\n        editCheck.title !== title ||\n        editCheck.content !== content ||\n        editCheck.files !== files ||\n        editCheck.category !== category\n      ) {\n        if (window.confirm('Edit ?')) {\n          if (!title) return alert('Not Title')\n          //if (!files) return alert('Not File')\n          if (!category) return alert('Not Selected Category')\n          if (!content) return alert('Not Content')\n          setItems(items.map(value => (value.no === no ? selectedItem : value)))\n          setShowModal(false)\n        }\n      } else {\n        setShowModal(false)\n      }\n    } else {\n      if (title || content || files || category) {\n        if (window.confirm('Add ?')) {\n          if (!title) return alert('Not Title')\n          //if (!files) return alert('Not File')\n          if (!category) return alert('Not Selected Category')\n          if (!content) return alert('Not Content')\n          setItems([\n            ...items,\n            {\n              ...selectedItem,\n              no: items.length + 1,\n            },\n          ])\n          setShowModal(false)\n        }\n      } else {\n        setShowModal(false)\n      }\n    }\n  }\n\n  const handleMaterialModalOnChange = ({target: {id, value}, target}) => {\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n\n  const handleMaterialModalOnDelete = ({no}) => {\n    if (window.confirm('Delete ?')) {\n      setItems(items.filter(value => value.no !== no))\n    }\n  }\n  return (\n    <CRow>\n      <PageHeader title='자료 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardHeader>\n            <CForm className='row g-3'>\n              <CCol xs={1}>\n                <CButton color='primary' onClick={handleShowMaterialDetailModal}>\n                  추가\n                </CButton>\n              </CCol>\n            </CForm>\n          </CCardHeader>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowMaterialDetailModal}\n              columns={materiaList}\n              className={'userList'}\n              onDelete={handleMaterialModalOnDelete}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <MeterialDetailModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        onChange={handleMaterialModalOnChange}\n        upDate={handleDetailModalUpDate}\n      />\n    </CRow>\n  )\n}\n\nexport default MaterialList\n","//url 리스트를 보낼 때 커스텀 해주는 함수\nexport const sendFileUrlFormat = array => {\n  return array.map(item => {\n    return item.url.split('.com/')[1]\n  })\n}\n\nexport const returnBucketName = imgPath => {\n  return `${process.env.REACT_APP_AWS_BUCKET_NAME}/admin/images/${imgPath}`\n}\n\nexport const antdImageFormat = path => {\n  return `https://${process.env.REACT_APP_AWS_BUCKET_NAME}.s3.${process.env.REACT_APP_AWS_REGION}.amazonaws.com/${path}`\n}\n\nexport const returnBucketNameFile = imgPath => {\n  return `${process.env.REACT_APP_AWS_BUCKET_NAME}/admin/files/${imgPath}`\n}\n","exports.meterialOptions = [\n  {key: 1, value: '드라이버'},\n  {key: 2, value: '매뉴얼'},\n  {key: 3, value: '펌웨어'},\n  {key: 4, value: '기술자료'},\n  {key: 5, value: '기타'},\n]\n\nexports.deliveryStatusOptions = {\n  1: '결제 완료',\n  2: '배송 준비중',\n  3: '배송중',\n  4: '배송 완료',\n}\n"],"names":["InboxOutlined","props","ref","React","AntdIcon","_objectSpread","icon","InboxOutlinedSvg","displayName","files","label","id","disabled","fileList","setFileList","filePath","useEffect","length","map","path","index","key","uid","name","getFileNameFromURL","status","url","splitUrl","split","multiple","customRequest","data","file","onError","onProgress","onSuccess","AWS","region","process","accessKeyId","secretAccessKey","S3","fileName","replaceAll","objParams","Bucket","returnBucketNameFile","Key","Body","ContentType","type","putObject","on","loaded","total","percent","promise","then","$response","error","console","log","code","message","customReq","successData","httpRequest","request","body","endpoint","protocol","host","fileData","params","onRemove","item","deleteObject","err","filter","onDelete","DivBox","className","styled","onChange","size","placeholder","value","readOnly","isRequired","newOptions","options","htmlFor","rows","text","visible","setVisible","upDate","no","title","content","createdAt","DetailModalTemplate","btnText","ModalInput","ModalSelect","meterialOptions","category","ModalTextArrayInput","ModalFilesInput","useState","items","setItems","selectedItem","setSelectedItem","editCheck","setEditCheck","showModal","setShowModal","meterialListData","handleShowMaterialDetailModal","PageHeader","xs","color","onClick","ListTemplate","columns","materiaList","window","confirm","target","alert","sendFileUrlFormat","array","returnBucketName","imgPath","antdImageFormat","exports"],"sourceRoot":""}