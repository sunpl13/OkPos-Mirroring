{"version":3,"file":"static/js/9952.07681172.chunk.js","mappings":"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","sources":["components/list/maintenance/AntDesignListForm.js","components/list/maintenance/NumberOfStoresList.js","components/list/maintenance/FlagshipSolutionList.js","components/list/maintenance/ManagementTarget.js","components/Modal/partnerCenter/order/OrderDetailModal.js","pages/partnerCenter/order/AppliedForMaintenanceList.js","utils/columns/partnerCenter/ColumnsSelectData.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {Table} from 'antd'\nimport {CFormLabel} from '@coreui/react'\nimport PropTypes from 'prop-types'\n\nconst AntDesignListForm = ({items, onClick, columns, className, title, listIndex, summary, children}) => {\n  const getListIndex = num => {\n    switch (+num) {\n      case 1:\n        return '①'\n      case 2:\n        return '②'\n      case 3:\n        return '③'\n      case 4:\n        return '④'\n      case 5:\n        return '⑤'\n      case 6:\n        return '⑥'\n      case 7:\n        return '⑦'\n      case 8:\n        return '⑧'\n      case 9:\n        return '⑨'\n      case 10:\n        return '⑩'\n      default:\n        return ''\n    }\n  }\n  return (\n    <>\n      <ListTitleForm>\n        <span>{getListIndex(listIndex)}</span>\n        {title}\n      </ListTitleForm>\n      {children}\n      <AntTable\n        onRow={(record, rowIndex) => {\n          return {\n            onClick: event => {\n              console.log(event, record, rowIndex)\n            }, // click row\n            onDoubleClick: event => {\n              console.log(event, record, rowIndex)\n            }, // double click row\n          }\n        }}\n        onCell={{\n          cat: item => {\n            console.log(item)\n            return <div>asdasd</div>\n          },\n        }}\n        columns={columns || []}\n        dataSource={items || []}\n        className={className}\n        pagination={false}\n        summary={summary}\n        bordered\n      />\n    </>\n  )\n}\nAntDesignListForm.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n  title: PropTypes.string,\n  listIndex: PropTypes.number,\n  summary: PropTypes.func,\n  children: PropTypes.element,\n}\nexport default AntDesignListForm\n\nconst AntTable = styled(Table)`\n  &.userList {\n    width: 100%;\n    & > div {\n    width:100%\n  }\n  & th {\n    width: 100&;\n    min-width: auto;\n    background:#d6d2f8;\n  }\n  & th,\n  & td{\n  border: 1px solid #d8dbe0;\n    text-align: center;\n    padding:0.5rem;\n    & select {\n     border:none;\n    }\n  }\n  \n  }\n  &.solutionList{\n  & td:nth-child(2),\n  & td:nth-child(5){\n  padding:0;\n    & select{\n      padding:.8rem;\n    }\n  }\n  \n`\nconst ListTitleForm = styled(CFormLabel)`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: center;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  & span {\n    font-size: 17px;\n    margin-right: 0.2rem;\n  }\n`\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {Table, Typography} from 'antd'\nimport AntDesignListForm from './AntDesignListForm'\nconst {Text} = Typography\n\nconst NumberOfStoresList = ({items, onClick, columns, className}) => {\n  const [listItems, setListItems] = useState([])\n\n  useEffect(() => {\n    setListItems(items)\n  }, [items])\n\n  return (\n    <>\n      <AntDesignListForm\n        listIndex={1}\n        title={'신청 가맹점 수'}\n        columns={columns}\n        items={listItems}\n        className={className}\n        summary={pageData => {\n          let totalCat = 0\n          let totalPos = 0\n          let totalKiosk = 0\n          let totalSum = 0\n          pageData.forEach(({cat, pos, kiosk, sum}) => {\n            totalCat += cat\n            totalPos += pos\n            totalKiosk += kiosk\n            totalSum += sum\n          })\n          return (\n            <>\n              <Table.Summary.Row>\n                <Table.Summary.Cell index={0}>Total</Table.Summary.Cell>\n                <Table.Summary.Cell index={1}>\n                  <Text>{totalCat}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{totalPos}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{totalKiosk}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{totalSum}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{'  '}</Text>\n                </Table.Summary.Cell>\n              </Table.Summary.Row>\n            </>\n          )\n        }}\n      />\n    </>\n  )\n}\n\nNumberOfStoresList.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n}\n\nexport default NumberOfStoresList\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport AntDesignListForm from './AntDesignListForm'\n\nconst FlagshipSolutionList = ({items, onClick, columns, className}) => {\n  const [listItems, setListItems] = useState([])\n  useEffect(() => {\n    setListItems(items)\n  }, [items])\n\n  return (\n    <>\n      <AntDesignListForm\n        columns={columns || []}\n        items={listItems || []}\n        className={className}\n        title={'주력 솔루션 및 VAN 사'}\n        listIndex={2}\n      />\n    </>\n  )\n}\n\nFlagshipSolutionList.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n}\n\nexport default FlagshipSolutionList\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  CCol,\n  CFormInput,\n  CFormLabel,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport styled from 'styled-components'\n\nconst ManagementTarget = ({items, onClick, columns, className}) => {\n  const [listItems, setListItems] = useState([])\n  useEffect(() => {\n    setListItems(items)\n  }, [items])\n\n  return (\n    <CCol>\n      <ListTitleForm>\n        <span>③</span>\n        관리 대상 H/W 현황\n      </ListTitleForm>\n      <CCol className={'searchInput pb-3'}>\n        <CFormInput type='text' placeholder='주력 H/W 모델명을 입력해 주세요' aria-label='Disabled input' />\n      </CCol>\n      <CCol>\n        <CustomCTable stripedColumns>\n          <CTableHead color='light'>\n            <CTableHeaderCell>구분</CTableHeaderCell>\n            <CTableHeaderCell>제조사/모델명</CTableHeaderCell>\n            <CTableHeaderCell>구분</CTableHeaderCell>\n            <CTableHeaderCell>제조사/모델명</CTableHeaderCell>\n          </CTableHead>\n          <CTableBody>\n            <CTableRow>\n              <CTableDataCell className={'rowTitle'}>POS</CTableDataCell>\n              <CTableDataCell>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n              </CTableDataCell>\n              <CTableDataCell className={'rowTitle'}>KIOSK</CTableDataCell>\n              <CTableDataCell>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n              </CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CustomCTable>\n      </CCol>\n    </CCol>\n  )\n}\n\nManagementTarget.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n}\n\nexport default ManagementTarget\n\nconst CustomCTable = styled(CTable)`\n  text-align: center;\n  & th {\n    padding: 0.5rem 0;\n  }\n  & .rowTitle {\n    display: table-cell;\n    vertical-align: middle;\n  }\n  & tbody td {\n    padding: 0;\n    & .col {\n    padding 0.5rem;\n    &.col:not(:last-child) {\n      border-bottom 1px solid #D8DBE0;\n    }\n  }\n`\nconst ListTitleForm = styled(CFormLabel)`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: center;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  & span {\n    font-size: 17px;\n    margin-right: 0.2rem;\n  }\n`\n","import {useEffect} from 'react'\nimport ModalInput from '../../../forms/inputForm/ModalInput'\nimport DetailModalTemplate from '../DetailModalTemplate'\nimport {CRow} from '@coreui/react'\nimport ListTemplate from '../../../list/ListTemplate'\nimport {deliveryStatusOptions} from '../../../../utils/columns/partnerCenter/ColumnsSelectData'\nimport NumberOfStoresList from '../../../list/maintenance/NumberOfStoresList'\nimport {GeneralList, SolutionList} from '../../../../utils/columns/partnerCenter/ColumnsTestData'\nimport {\n  generalListApplicationColumns,\n  solutionListColumns,\n  managementTargetColumns,\n} from '../../../../utils/columns/partnerCenter/Columns'\nimport FlagshipSolutionList from '../../../list/maintenance/FlagshipSolutionList'\nimport ManagementTarget from '../../../list/maintenance/ManagementTarget'\n\nconst OrderDetailModal = ({onChange, value, visible, setVisible, upDate, onDelete}) => {\n  const {\n    no,\n    orderNo /** 발주 번호 */,\n    businessName /** 상호명 */,\n    representativeName /** 대표자명*/,\n    orderDate /** 주문일자 */,\n    businessNumber /** 사업자 번호 */,\n    email /** 이메일 */,\n    phoneNumber /** 휴대포 번호 */,\n    homePhoneNumber /** 사업장 전화번호*/,\n    businessAddress /** 사업장 주소*/,\n    receive /** 수령 방법 */,\n    orderList /** 발주 리스트  */,\n    taxInvoiceEmail /** 세금 고지서 수령 이메일 */,\n  } = value\n  const orderListColumns = [\n    {\n      key: 'productId',\n      label: '제품 번호',\n      _props: {color: 'primary', className: 'no'},\n    },\n    {\n      key: 'productImg',\n      _props: {color: 'primary', className: 'productImg'},\n      filter: false,\n      sorter: false,\n    },\n    {\n      key: 'productName',\n      _props: {color: 'primary', className: 'productName'},\n    },\n    {\n      key: 'deliveryStatus',\n      label: '배송 현황',\n      _props: {color: 'primary', className: 'deliveryStatus'},\n      filter: false,\n    },\n    {\n      key: 'deleteBtn',\n      label: ' ',\n      filter: false,\n      sorter: false,\n      _props: {color: 'primary', className: 'deleteBtn'},\n    },\n  ]\n  useEffect(() => {\n    if (visible) {\n    }\n  }, [visible])\n  return (\n    <DetailModalTemplate title={'발주 상세'} visible={visible} setVisible={setVisible} upDate={upDate} btnText={'수정'}>\n      <CRow className={'p-2'}>\n        <ModalInput id={'no'} placeholder={'No'} label={'No'} value={no} onChange={onChange} readOnly disabled />\n        <ModalInput\n          id={'orderNo'}\n          placeholder={'발주 번호'}\n          label={'발주 번호'}\n          value={orderNo}\n          onChange={onChange}\n          readOnly\n          disabled\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'representativeName'}\n          placeholder={'대표자명'}\n          label={'대표자명'}\n          value={representativeName}\n          onChange={onChange}\n        />\n        <ModalInput\n          id={'businessName'}\n          placeholder={'상호명'}\n          label={'상호명'}\n          value={businessName}\n          onChange={onChange}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'businessNumber'}\n          placeholder={'사업자 번호'}\n          label={'사업자 번호'}\n          value={businessNumber}\n          onChange={onChange}\n        />\n        <ModalInput\n          id={'businessAddress'}\n          placeholder={'사업장 주소'}\n          label={'사업장 주소'}\n          value={businessAddress}\n          onChange={onChange}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'orderDate'}\n          placeholder={'주문 일자'}\n          label={'주문 일자'}\n          value={orderDate}\n          onChange={onChange}\n        />\n        <ModalInput\n          id={'phoneNumber'}\n          placeholder={'휴대전화'}\n          label={'휴대전화'}\n          value={phoneNumber}\n          onChange={onChange}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'homePhoneNumber'}\n          placeholder={'사업장 전화번호'}\n          label={'사업장 전화번호'}\n          value={homePhoneNumber}\n          onChange={onChange}\n        />\n\n        <ModalInput id={'email'} placeholder={'이메일'} label={'이메일'} value={email} onChange={onChange} />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput id={'receive'} placeholder={'수령 방법'} label={'수령 방법'} value={receive} onChange={onChange} />\n        <ModalInput\n          id={'taxInvoiceEmail'}\n          type={'email'}\n          placeholder={'세금계산서 수령 이메일'}\n          label={'세금계산서 수령 이메일'}\n          value={taxInvoiceEmail}\n          onChange={onChange}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ListTemplate\n          items={orderList}\n          //onClick={handleShowMaterialDetailModal}\n          columns={orderListColumns}\n          className={'userList'}\n          onDelete={onDelete}\n          datePickerHidden={false}\n          selectedOptions={deliveryStatusOptions}\n          itemPerPageHidden={false}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <NumberOfStoresList className={'userList'} columns={generalListApplicationColumns} items={GeneralList} />\n      </CRow>\n      <CRow className={'p-2'}>\n        <FlagshipSolutionList className={'userList solutionList'} columns={solutionListColumns} items={SolutionList} />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ManagementTarget className={'userList'} columns={managementTargetColumns} items={SolutionList} />\n      </CRow>\n    </DetailModalTemplate>\n  )\n}\n\nexport default OrderDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {maintenanceApplicationList} from '../../../utils/columns/partnerCenter/Columns'\nimport {AppliedForMaintenanceData} from '../../../utils/columns/partnerCenter/ColumnsTestData'\nimport OrderDetailModal from '../../../components/Modal/partnerCenter/order/OrderDetailModal'\n\nconst AppliedForMaintenanceList = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [editCheck, setEditCheck] = useState({})\n\n  const [showModal, setShowModal] = useState(false)\n  useEffect(() => {\n    setItems(AppliedForMaintenanceData)\n  }, [])\n\n  /** Open Modal*/\n  const handleShowMaterialDetailModal = item => {\n    setSelectedItem(item)\n    setEditCheck(item)\n    setShowModal(!showModal)\n  }\n  const handleDetailModalUpDate = () => {\n    const {\n      no,\n      businessName /** 상호명 */,\n      representativeName /** 대표자명*/,\n      businessNumber /** 사업자 번호 */,\n      email /** 이메일 */,\n      phoneNumber /** 휴대포 번호 */,\n      homePhoneNumber /** 사업장 전화번호*/,\n      businessAddress /** 사업장 주소*/,\n      receive /** 수령 방법 */,\n      orderList /** 발주 리스트  */,\n      taxInvoiceEmail /** 세금 고지서 수령 이메일 */,\n    } = selectedItem\n    if (\n      editCheck.businessName !== businessName ||\n      editCheck.representativeName !== representativeName ||\n      editCheck.businessNumber !== businessNumber ||\n      editCheck.email !== email ||\n      editCheck.phoneNumber !== phoneNumber ||\n      editCheck.homePhoneNumber !== homePhoneNumber ||\n      editCheck.businessAddress !== businessAddress ||\n      editCheck.orderList !== orderList ||\n      editCheck.receive !== receive ||\n      editCheck.taxInvoiceEmail !== taxInvoiceEmail\n    ) {\n      if (window.confirm('Edit ?')) {\n        if (!representativeName) return alert('Not Representative Name')\n        if (!businessName) return alert('Not businessName')\n        if (!representativeName) return alert('Not representativeName')\n        if (!businessNumber) return alert('Not businessNumber')\n        if (!email) return alert('Not email')\n        if (!phoneNumber) return alert('Not phoneNumber')\n        if (!homePhoneNumber) return alert('Not homePhoneNumber')\n        if (!businessAddress) return alert('Not businessAddress')\n        if (!receive) return alert('Not receive')\n        if (orderList.length === 0) return alert('Not orderList')\n        if (!taxInvoiceEmail) return alert('Not taxInvoiceEmail')\n        setItems(items.map(value => (value.no === no ? selectedItem : value)))\n        setShowModal(false)\n      }\n    } else {\n      setShowModal(false)\n    }\n  }\n\n  const handleOrderModalOnChange = ({target: {id, value}}) => {\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n  const handleOrderListOnDelete = ({no}) => {\n    if (window.confirm('Delete ?')) {\n      setItems(items.filter(value => value.no !== no))\n    }\n  }\n  const handleOrderOnDelete = ({productId}) => {\n    if (window.confirm('Delete ?')) {\n      setSelectedItem({\n        ...selectedItem,\n        orderList: selectedItem.orderList.filter(value => value.productId !== productId),\n      })\n    }\n  }\n  return (\n    <CRow>\n      <PageHeader title='유지보수 신청 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowMaterialDetailModal}\n              columns={maintenanceApplicationList}\n              className={'userList'}\n              onDelete={handleOrderListOnDelete}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <OrderDetailModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        onChange={handleOrderModalOnChange}\n        upDate={handleDetailModalUpDate}\n        onDelete={handleOrderOnDelete}\n      />\n    </CRow>\n  )\n}\n\nexport default AppliedForMaintenanceList\n","exports.meterialOptions = [\n  {key: 1, value: '드라이버'},\n  {key: 2, value: '매뉴얼'},\n  {key: 3, value: '펌웨어'},\n  {key: 4, value: '기술자료'},\n  {key: 5, value: '기타'},\n]\n\nexports.deliveryStatusOptions = {\n  1: '결제 완료',\n  2: '배송 준비중',\n  3: '배송중',\n  4: '배송 완료',\n}\n"],"names":["items","columns","onClick","className","title","listIndex","summary","children","ListTitleForm","num","getListIndex","AntTable","onRow","record","rowIndex","event","console","log","onDoubleClick","onCell","cat","item","dataSource","pagination","bordered","styled","Table","CFormLabel","Text","Typography","useState","listItems","setListItems","useEffect","pageData","totalCat","totalPos","totalKiosk","totalSum","forEach","pos","kiosk","sum","index","type","placeholder","CustomCTable","stripedColumns","color","CTable","onChange","value","visible","setVisible","upDate","onDelete","no","orderNo","businessName","representativeName","orderDate","businessNumber","email","phoneNumber","homePhoneNumber","businessAddress","receive","orderList","taxInvoiceEmail","DetailModalTemplate","btnText","ModalInput","id","label","readOnly","disabled","ListTemplate","key","_props","filter","sorter","datePickerHidden","selectedOptions","deliveryStatusOptions","itemPerPageHidden","generalListApplicationColumns","GeneralList","solutionListColumns","SolutionList","managementTargetColumns","setItems","selectedItem","setSelectedItem","editCheck","setEditCheck","showModal","setShowModal","AppliedForMaintenanceData","xs","maintenanceApplicationList","window","confirm","target","alert","length","map","productId","exports"],"sourceRoot":""}