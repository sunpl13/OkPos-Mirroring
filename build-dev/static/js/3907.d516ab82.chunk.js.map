{"version":3,"file":"static/js/3907.d516ab82.chunk.js","mappings":"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","sources":["components/Modal/officialMall/FaqDetailModal.js","../node_modules/@ant-design/icons-svg/es/asn/InboxOutlined.js","../node_modules/@ant-design/icons/es/icons/InboxOutlined.js","components/forms/inputForm/ModalFilesInput.js","components/forms/inputForm/ModalInput.js","components/forms/inputForm/ModalSelect.js","components/forms/inputForm/ModalTextArrayInput.js","utils/categoryOptions/officailMall/categoryOptions.js","components/Modal/officialMall/DataRoomModal.js","pages/officialMall/dataRoom/DataRoomList.js","utils/awsCustom.js","utils/columns/officialMall/Columns.js"],"sourcesContent":["import {\n  CButton,\n  CForm,\n  CFormTextarea,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport ModalSelect from '../../forms/inputForm/ModalSelect'\n\nconst FaqDetailModal = ({\n  item,\n  onChange,\n  onUpdate,\n  onDelete,\n  option,\n  visible,\n  setVisible,\n  isReadOnly,\n  setIsReadOnly,\n  isUpdate,\n  setIsUpdate,\n}) => {\n  const clickUpdateBtn = () => {\n    setIsReadOnly(false)\n    setIsUpdate(true)\n  }\n\n  // modal Title 세팅\n  let modalTitle = 'FAQ 추가'\n  if (isUpdate) modalTitle = 'FAQ 수정'\n  if (isReadOnly) modalTitle = 'FAQ 상세 내용'\n\n  return (\n    <CModal size='lg' visible={visible} onClose={() => setVisible(false)}>\n      <CModalHeader>\n        <CModalTitle>{modalTitle}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <CRow className={'p-2'}>\n            {(isReadOnly || isUpdate) && (\n              <ModalInput id={'faqId'} placeholder={''} label={'No'} value={item.faqId || ''} readOnly disabled />\n            )}\n            <ModalSelect\n              id={'category'}\n              size={'sm'}\n              placeholder={'선택'}\n              label={'분류'}\n              value={item.category || ''}\n              options={option}\n              isRequired={false}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n              onChange={onChange}\n            ></ModalSelect>\n          </CRow>\n          <CRow className={'p-2'}>\n            <ModalInput\n              id={'title'}\n              placeholder={''}\n              label={'제목'}\n              value={item.title || ''}\n              onChange={onChange}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <CRow className={'p-2'}>\n            <CFormTextarea\n              id='content'\n              label='답변 내용'\n              rows={9}\n              value={item.content || ''}\n              onChange={onChange}\n              disabled={isReadOnly}\n            ></CFormTextarea>\n          </CRow>\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        {!isReadOnly && !isUpdate && (\n          <CButton onClick={onUpdate} color='primary'>\n            추가\n          </CButton>\n        )}\n        {isUpdate && (\n          <CButton onClick={onUpdate} color='primary'>\n            저장\n          </CButton>\n        )}\n        {isReadOnly && (\n          <>\n            <CButton color={isReadOnly ? 'primary' : 'success'} onClick={clickUpdateBtn}>\n              수정\n            </CButton>\n            <CButton onClick={onDelete} color='danger'>\n              삭제\n            </CButton>\n          </>\n        )}\n        <CButton color='secondary' onClick={() => setVisible(false)}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default FaqDetailModal\n","// This icon file is generated automatically.\nvar InboxOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M885.2 446.3l-.2-.8-112.2-285.1c-5-16.1-19.9-27.2-36.8-27.2H281.2c-17 0-32.1 11.3-36.9 27.6L139.4 443l-.3.7-.2.8c-1.3 4.9-1.7 9.9-1 14.8-.1 1.6-.2 3.2-.2 4.8V830a60.9 60.9 0 0060.8 60.8h627.2c33.5 0 60.8-27.3 60.9-60.8V464.1c0-1.3 0-2.6-.1-3.7.4-4.9 0-9.6-1.3-14.1zm-295.8-43l-.3 15.7c-.8 44.9-31.8 75.1-77.1 75.1-22.1 0-41.1-7.1-54.8-20.6S436 441.2 435.6 419l-.3-15.7H229.5L309 210h399.2l81.7 193.3H589.4zm-375 76.8h157.3c24.3 57.1 76 90.8 140.4 90.8 33.7 0 65-9.4 90.3-27.2 22.2-15.6 39.5-37.4 50.7-63.6h156.5V814H214.4V480.1z\" } }] }, \"name\": \"inbox\", \"theme\": \"outlined\" };\nexport default InboxOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport InboxOutlinedSvg from \"@ant-design/icons-svg/es/asn/InboxOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar InboxOutlined = function InboxOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: InboxOutlinedSvg\n  }));\n};\n\nInboxOutlined.displayName = 'InboxOutlined';\nexport default /*#__PURE__*/React.forwardRef(InboxOutlined);","import {InboxOutlined} from '@ant-design/icons'\nimport {Upload} from 'antd'\nimport styled from 'styled-components'\nimport {CFormLabel} from '@coreui/react'\nimport AWS from 'aws-sdk'\nimport {useEffect} from 'react'\nimport {antdImageFormat, returnBucketNameFile} from '../../../utils/awsCustom'\n\nconst ModalFilesInput = ({files, label, id, disabled, fileList, setFileList, filePath}) => {\n  // files = 조회를 통해 가져온 데이터가 있는 경우\n  useEffect(() => {\n    if (files && files.length > 0) {\n      setFileList(\n        files.map((path, index) => ({\n          key: index,\n          uid: path,\n          name: getFileNameFromURL(path),\n          status: 'done',\n          //url: antdImageFormat(path),\n          url: path,\n        })),\n      )\n    }\n  }, [files])\n\n  const getFileNameFromURL = url => {\n    //   \"/\" 로 전체 url 을 나눈다\n    const splitUrl = url.split('/')\n    const splitUrlLength = splitUrl.length\n    // 나누어진 배열의 맨 끝이 파일명이다\n    const fileName = splitUrl[splitUrlLength - 1]\n    return fileName\n  }\n\n  const onSuccess = successData => {\n    const httpRequest = successData.request.httpRequest\n    const file = httpRequest.body\n    const {protocol, host} = httpRequest.endpoint\n\n    const fileData = {\n      uid: successData.request.params.Key,\n      name: file.name,\n      status: 'done',\n      url: `${protocol}//${host}${httpRequest.path}`,\n    }\n    setFileList([...fileList, fileData])\n  }\n\n  // 파일 업로드\n  const customReq = ({file, onError, onProgress, onSuccess}) => {\n    AWS.config.update({\n      region: process.env.REACT_APP_AWS_REGION,\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n    })\n\n    const S3 = new AWS.S3()\n    const fileName = file.name.replaceAll(' ', '')\n    const objParams = {\n      Bucket: returnBucketNameFile(filePath),\n      Key: fileName,\n      Body: file,\n      ContentType: file.type, // TODO: You should set content-type because AWS SDK will not automatically set file MIME\n    }\n\n    const upload = S3.putObject(objParams)\n      .on('httpUploadProgress', ({loaded, total}) => onProgress({percent: (loaded / total) * 100}))\n      .promise()\n    upload.then(\n      function (data) {\n        onSuccess(data.$response)\n      },\n      function (error) {\n        onError()\n        console.log(error.code)\n        console.log(error.message)\n      },\n    )\n  }\n\n  // 파일 삭제\n  const onDelete = item => {\n    AWS.config.update({\n      region: process.env.REACT_APP_AWS_REGION,\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n    })\n\n    const S3 = new AWS.S3()\n\n    const objParams = {\n      Bucket: `${process.env.REACT_APP_AWS_BUCKET_NAME}`,\n      Key: item.uid,\n    }\n\n    S3.deleteObject(objParams, (err, data) => {\n      if (err) {\n        setFileList(\n          fileList.map(file => {\n            if (file.uid === item.uid) {\n              return {...file, status: 'error'}\n            } else {\n              return file\n            }\n          }),\n        )\n      }\n      setFileList(fileList.filter(file => file.uid !== item.uid))\n    })\n  }\n\n  const props = {\n    name: 'file',\n    multiple: true,\n    disabled: disabled,\n    fileList: fileList,\n    customRequest(data) {\n      customReq(data)\n    },\n    onSuccess(data) {\n      onSuccess(data)\n    },\n    onRemove(data) {\n      onDelete(data)\n    },\n  }\n\n  return (\n    <>\n      <DivBox className={disabled ? 'disabled' : ''}>\n        <CFormLabel className=' col-form-label'>{label || ''}</CFormLabel>\n        <Upload.Dragger {...props} id={id}>\n          <p className='ant-upload-drag-icon'>\n            <InboxOutlined />\n          </p>\n          <p className='ant-upload-text'>업로드하려면 이 영역으로 파일을 클릭하거나 드래그하세요.</p>\n          <p className='ant-upload-hint'>추가설명</p>\n        </Upload.Dragger>\n      </DivBox>\n    </>\n  )\n}\n\nexport default ModalFilesInput\n\nconst DivBox = styled.div`\n  border-radius: 0.375rem;\n  &.disabled {\n    background: #d8dbe0;\n  }\n  & .ant-upload-disabled {\n    background: #d8dbe0;\n    border: 0.5px dashed #b1b7c1;\n    opacity: 1;\n  }\n  & > span {\n    display: flex;\n    flex-direction: column;\n  }\n`\n","import {CCol, CFormInput, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\nconst ModalInput = ({type, onChange, id, placeholder, value, label, readOnly, disabled, isRequired}) => {\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        <CFormInput\n          type={type || 'text'}\n          id={id}\n          placeholder={placeholder || ''}\n          value={type === 'file' ? undefined : value || ''}\n          onChange={onChange}\n          readOnly={readOnly}\n          disabled={disabled}\n        />\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalInput\n","import {CCol, CFormSelect, CFormLabel} from '@coreui/react'\nimport * as PorpTypes from 'prop-types'\n\nconst ModalSelect = ({\n  onChange,\n  size,\n  placeholder,\n  label,\n  value,\n  readOnly,\n  id,\n  disabled = false,\n  isRequired,\n  options,\n}) => {\n  const newOptions = options.map(item => (\n    <option key={item.key} value={item.key}>\n      {item.value}\n    </option>\n  ))\n\n  return (\n    <>\n      <CFormLabel htmlFor='staticEmail' className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol>\n        <CFormSelect value={value} disabled={disabled} id={id} size={size} onChange={onChange} readOnly={readOnly}>\n          <option>{placeholder}</option>\n          {newOptions}\n        </CFormSelect>\n      </CCol>\n    </>\n  )\n}\n\nModalSelect.propTypes = {\n  onChange: PorpTypes.func,\n  size: PorpTypes.string,\n  placeholder: PorpTypes.string,\n  label: PorpTypes.string,\n  value: PorpTypes.any,\n  readOnly: PorpTypes.bool,\n  id: PorpTypes.string,\n  disabled: PorpTypes.bool,\n  isRequired: PorpTypes.bool,\n  options: PorpTypes.any,\n}\n\nexport default ModalSelect\n","import {CCol, CFormTextarea} from '@coreui/react'\n\nconst ModalTextArrayInput = ({id, value, rows, label, onChange, text, readOnly, disabled}) => {\n  return (\n    <CCol>\n      <CFormTextarea\n        id={id || ''}\n        label={label || ''}\n        rows={rows || 10}\n        value={value || ''}\n        onChange={onChange}\n        text={text || ''}\n        readOnly={readOnly}\n        disabled={disabled}\n      />\n    </CCol>\n  )\n}\n\nexport default ModalTextArrayInput\n","// 자료실 카테고리 옵션\nexport const dataRoomCategory = [\n  {\n    key: '드라이버',\n    value: '드라이버',\n  },\n  {\n    key: '프로그램',\n    value: '프로그램',\n  },\n  {\n    key: '매뉴얼',\n    value: '매뉴얼',\n  },\n  {\n    key: '펌웨어',\n    value: '펌웨어',\n  },\n  {\n    key: '기술자료',\n    value: '기술자료',\n  },\n  {\n    key: '기타',\n    value: '기타',\n  },\n]\n","import {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport ModalTextArrayInput from '../../forms/inputForm/ModalTextArrayInput'\nimport ModalFilesInput from '../../forms/inputForm/ModalFilesInput'\nimport ModalSelect from '../../forms/inputForm/ModalSelect'\nimport {CButton, CForm, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow} from '@coreui/react'\nimport {dataRoomCategory} from '../../../utils/categoryOptions/officailMall/categoryOptions'\n\nconst DataRoomModal = ({\n  onChange,\n  item,\n  visible,\n  setVisible,\n  onUpdate,\n  onDelete,\n  fileList,\n  setFileList,\n  setIsUpdate,\n  isUpdate,\n  setIsReadOnly,\n  isReadOnly,\n}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const {category, dataRoomId, title, content, image, files, createdAt} = item\n\n  // modal Title 세팅\n  let modalTitle = '자료 추가'\n  if (isUpdate) modalTitle = '자료 수정'\n  if (isReadOnly) modalTitle = '자료 상세 내용'\n\n  useEffect(() => {\n    if (visible) {\n    }\n  }, [visible])\n\n  // 수정 버튼 클릭 함수\n  const clickUpdateBtn = () => {\n    setIsReadOnly(false)\n    setIsUpdate(true)\n  }\n\n  return (\n    <CModal size='lg' visible={visible} onClose={() => setVisible(false)}>\n      <CModalHeader>\n        <CModalTitle>{modalTitle}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <CRow className={'p-2'}>\n            {(isReadOnly || isUpdate) && (\n              <ModalInput\n                id={'no'}\n                placeholder={'No'}\n                label={'No'}\n                value={dataRoomId}\n                onChange={onChange}\n                readOnly\n                disabled\n              />\n            )}\n            <ModalSelect\n              options={dataRoomCategory}\n              onChange={onChange}\n              size='sm'\n              id='category'\n              value={category}\n              isRequired={true}\n              placeholder='선택해주세요'\n              label='카테고리'\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <CRow className={'p-2'}>\n            <ModalInput\n              id={'title'}\n              placeholder={'제목'}\n              label={'제목'}\n              value={title}\n              onChange={onChange}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <CRow className={'p-2'}>\n            {(isReadOnly || isUpdate) && (\n              <ModalInput\n                id={'createdAt'}\n                placeholder={'작성일'}\n                label={'작성일'}\n                value={createdAt}\n                readOnly\n                disabled\n              />\n            )}\n          </CRow>\n          <CRow className={'p-2'}>\n            <ModalTextArrayInput\n              id='content'\n              label={'본문'}\n              value={content}\n              onChange={onChange}\n              rows={9}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <CRow className={'p-2'}>\n            <ModalFilesInput\n              id={'fileList'}\n              fileList={fileList}\n              setFileList={setFileList}\n              files={files}\n              label={'첨부파일'}\n              filePath={'mall/dataroom'}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <br />\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        {!isReadOnly && !isUpdate && (\n          <CButton onClick={onUpdate} color='primary'>\n            추가\n          </CButton>\n        )}\n        {isUpdate && (\n          <CButton onClick={onUpdate} color='primary'>\n            저장\n          </CButton>\n        )}\n        {isReadOnly && (\n          <>\n            <CButton color={isReadOnly ? 'primary' : 'success'} onClick={clickUpdateBtn}>\n              수정\n            </CButton>\n            <CButton onClick={onDelete} color='danger'>\n              삭제\n            </CButton>\n          </>\n        )}\n        <CButton color='secondary' onClick={() => setVisible(false)}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default DataRoomModal\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport FaqDetailModal from '../../../components/Modal/officialMall/FaqDetailModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {dataRoomListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport {useNavigate} from 'react-router-dom'\nimport * as _ from 'lodash'\nimport DataRoomModal from '../../../components/Modal/officialMall/DataRoomModal'\nimport {sendFileUrlFormat} from '../../../utils/awsCustom'\n\nconst DataRoomList = () => {\n  const navigate = useNavigate()\n  const [isReadOnly, setIsReadOnly] = useState(false)\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n  const [fileList, setFileList] = useState([])\n\n  const categoryOptions = [\n    {\n      key: '드라이버',\n      value: '드라이버',\n    },\n    {\n      key: '프로그램',\n      value: '프로그램',\n    },\n    {\n      key: '매뉴얼',\n      value: '매뉴얼',\n    },\n    {\n      key: '펌웨어',\n      value: '펌웨어',\n    },\n    {\n      key: '기술자료',\n      value: '기술자료',\n    },\n    {\n      key: '기타',\n      value: '기타',\n    },\n  ]\n\n  // Load FAQ List\n  const onLoadMallDataRoomList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_DATAROOMS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n      } else {\n        setItems(res.result.dataRoomInfos)\n      }\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Load DataRoom Detail\n  const onLoadMallDataRoom = async dataRoomId => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_DATAROOM,\n        path: {dataRoomId},\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n\n      res.result.dataRoomId = dataRoomId\n      setSelectedItem(res.result)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Create DataRoom\n  const onCreateMallDataRoom = async item => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.POST,\n        url: EndPoint.POST_MALL_DATAROOMS,\n        data: {\n          category: item.category,\n          title: item.title,\n          content: item.content,\n          image: item.image,\n          files: item.files,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      alert(res?.message)\n      setSelectedItem(setInitItem)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Update DataRoom\n  const onUpdateFaq = async item => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_UPDATE_FAQ,\n        data: {\n          dataRoomId: item.dataRoomId,\n          category: item.category,\n          title: item.title,\n          content: item.content,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setSelectedItem(item)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Delete DataRoom\n  const onDeleteFaq = async dataRoomId => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_DELETE_FAQ,\n        path: {dataRoomId},\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n      }\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  useEffect(() => {\n    onLoadMallDataRoomList()\n  }, [])\n\n  const setInitItem = () => {\n    return {\n      title: '',\n      content: '',\n      category: '',\n      content: '',\n      image: '',\n      files: [],\n    }\n  }\n\n  // 자료 추가 Modal Open 함수\n  const handleShowFaqItemAddModal = () => {\n    setSelectedItem(setInitItem)\n    setFileList([])\n    setIsReadOnly(false)\n    setIsUpdate(false)\n    setShowModal(!showModal)\n  }\n  const handleShowDataRoomDetailModal = item => {\n    onLoadMallDataRoom(item.dataRoomId)\n    setIsReadOnly(true)\n    setIsUpdate(false)\n    setShowModal(!showModal)\n  }\n\n  /** Add Faq Modal*/\n  const handleFaqItemModalOnChange = e => {\n    const {id, value} = e.target\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n\n  const handleMultiFileUrl = array => {\n    console.log(array)\n    let urls = []\n    array.map(item => {\n      urls.push(item.url)\n    })\n    return urls\n  }\n\n  const handleDetailModalUpdate = async () => {\n    const {dataRoomId, title, image, content, category} = selectedItem\n    selectedItem.image =\n      'https://homepage-test-resource.s3.ap-northeast-2.amazonaws.com/admin/files/mall/dataroom/test-ge3e510db1_640.jpg'\n\n    selectedItem.files = handleMultiFileUrl(fileList)\n\n    // validation\n    if (!title) return alert('제목을 입력해주세요')\n    if (!category) return alert('카테고리를 선택해주세요')\n    if (!selectedItem.image) return alert('이미지를 등록해주세요')\n    //if (!selectedItem.files) return alert('자료를 등록해주세요')\n\n    if (window.confirm('저장 하시겠습니까?')) {\n      if (dataRoomId) {\n        // update\n        await onUpdateFaq(selectedItem)\n        setShowModal(true)\n        setIsReadOnly(true)\n        setIsUpdate(false)\n      } else {\n        // create\n        await onCreateMallDataRoom(selectedItem)\n        setShowModal(false)\n      }\n      await onLoadMallDataRoomList()\n    }\n  }\n\n  const handleDetailModalDelete = () => {\n    if (window.confirm('정말 삭제하시겠습니까?')) {\n      onDeleteFaq(selectedItem.dataRoomId).then(onLoadMallDataRoomList, setShowModal(false))\n    }\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='자료실 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardHeader>\n            <CForm className='row g-3'>\n              <CCol xs={1}>\n                <CButton color='primary' onClick={handleShowFaqItemAddModal}>\n                  추가\n                </CButton>\n              </CCol>\n            </CForm>\n          </CCardHeader>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowDataRoomDetailModal}\n              columns={dataRoomListColumns}\n              className={'dataRoomList'}\n              datePickerHidden={false}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <DataRoomModal\n        item={selectedItem}\n        onUpdate={handleDetailModalUpdate}\n        onDelete={handleDetailModalDelete}\n        onChange={handleFaqItemModalOnChange}\n        option={categoryOptions}\n        visible={showModal}\n        setVisible={setShowModal}\n        fileList={fileList}\n        setFileList={setFileList}\n        isReadOnly={isReadOnly}\n        setIsReadOnly={setIsReadOnly}\n        isUpdate={isUpdate}\n        setIsUpdate={setIsUpdate}\n      />\n    </CRow>\n  )\n}\n\nexport default DataRoomList\n","//url 리스트를 보낼 때 커스텀 해주는 함수\nexport const sendFileUrlFormat = array => {\n  return array.map(item => {\n    return item.url.split('.com/')[1]\n  })\n}\n\nexport const returnBucketName = imgPath => {\n  return `${process.env.REACT_APP_AWS_BUCKET_NAME}/admin/images/${imgPath}`\n}\n\nexport const antdImageFormat = path => {\n  return `https://${process.env.REACT_APP_AWS_BUCKET_NAME}.s3.${process.env.REACT_APP_AWS_REGION}.amazonaws.com/${path}`\n}\n\nexport const returnBucketNameFile = imgPath => {\n  return `${process.env.REACT_APP_AWS_BUCKET_NAME}/admin/files/${imgPath}`\n}\n","// 회원 리스트\nexport const userListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 탈퇴회원 리스트\nexport const resignUserListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'resignReason', label: '탈퇴사유', _props: {className: 'resignReason'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'updatedAt', label: '계정탈퇴일', sorter: false, filter: false, _props: {className: 'updatedAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 1:1 문의 리스트\nexport const inquiryListColumns = [\n  {key: 'inquiryId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '문의 유형', _props: {className: 'category'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'reply', label: '답변', sorter: false, filter: false, _props: {className: 'reply'}},\n]\n\n// FAQ 리스트\nexport const faqListColumns = [\n  {key: 'faqId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '분류', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n]\n\n// 자료실 리스트\nexport const dataRoomListColumns = [\n  {key: 'dataRoomId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '분류', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n\n// 주문 현황 관리\nexport const orderListColumns = [\n  {key: 'orderId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '분류', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n"],"names":["item","onChange","onUpdate","onDelete","option","visible","setVisible","isReadOnly","setIsReadOnly","isUpdate","setIsUpdate","modalTitle","size","onClose","className","id","placeholder","label","value","faqId","readOnly","disabled","category","options","isRequired","title","rows","content","onClick","color","InboxOutlined","props","ref","React","AntdIcon","_objectSpread","icon","InboxOutlinedSvg","displayName","files","fileList","setFileList","filePath","useEffect","length","map","path","index","key","uid","name","getFileNameFromURL","status","url","splitUrl","split","multiple","customRequest","data","file","onError","onProgress","onSuccess","AWS","region","process","accessKeyId","secretAccessKey","S3","fileName","replaceAll","objParams","Bucket","returnBucketNameFile","Key","Body","ContentType","type","putObject","on","loaded","total","percent","promise","then","$response","error","console","log","code","message","customReq","successData","httpRequest","request","body","endpoint","protocol","host","fileData","params","onRemove","deleteObject","err","filter","DivBox","styled","htmlFor","style","display","undefined","newOptions","text","dataRoomCategory","useNavigate","dataRoomId","image","createdAt","ModalInput","ModalSelect","ModalTextArrayInput","ModalFilesInput","navigate","useState","items","setItems","selectedItem","setSelectedItem","showModal","setShowModal","onLoadMallDataRoomList","ApiConfig","method","HttpMethod","EndPoint","res","isSuccess","isEmpty","result","alert","dataRoomInfos","onLoadMallDataRoom","onCreateMallDataRoom","setInitItem","onUpdateFaq","onDeleteFaq","handleMultiFileUrl","array","urls","push","handleDetailModalUpdate","window","confirm","PageHeader","xs","ListTemplate","columns","dataRoomListColumns","datePickerHidden","e","target","sendFileUrlFormat","returnBucketName","imgPath","antdImageFormat","userListColumns","sorter","_props","resignUserListColumns","inquiryListColumns","faqListColumns","orderListColumns"],"sourceRoot":""}