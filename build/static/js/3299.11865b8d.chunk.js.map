{"version":3,"file":"static/js/3299.11865b8d.chunk.js","mappings":"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","sources":["components/forms/inputForm/ModalQuillEditor.js","components/list/maintenance/AntDesignListForm.js","components/list/maintenance/NumberOfStoresList.js","components/list/maintenance/FlagshipSolutionList.js","components/list/maintenance/ManagementTarget.js","components/Modal/partnerCenter/order/MaintenancesDetailModal.js","pages/partnerCenter/order/MaintenancesList.js"],"sourcesContent":["import React, {useMemo, useRef, useState} from 'react'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\nimport {CCol, CFormLabel} from '@coreui/react'\nimport styled from 'styled-components'\n\nconst ModalQuillEditor = ({\n  id, // Tag ID\n  value, // useState\n  label, // Title\n  isRequired, // isRequired\n  readOnly = false,\n  setValue, // onChange function\n  maxLength, // 문자 길이 int ex) 400\n  editorHeight = 300,\n}) => {\n  const QuillRef = useRef()\n  const [textLengthCheck, setTextLengthCheck] = useState(false)\n\n  // 이미지를 업로드 하기 위한 함수\n  const imageHandler = () => {\n    // 파일을 업로드 하기 위한 input 태그 생성\n    const input = document.createElement('input')\n    const formData = new FormData()\n    let url = ''\n\n    input.setAttribute('type', 'file')\n    input.setAttribute('accept', 'image/*')\n    input.click()\n\n    // 파일이 input 태그에 담기면 실행 될 함수\n    input.onchange = async () => {\n      const file = input.files\n      console.log(file)\n      if (file !== null) {\n        formData.append('image', file[0])\n        try {\n          const res = (url = res.data.url)\n          // 커서의 위치를 알고 해당 위치에 이미지 태그를 넣어주는 코드\n          // 해당 DOM의 데이터가 필요하기에 useRef를 사용.\n          const range = QuillRef.current?.getEditor().getSelection()?.index\n          if (range !== null && range !== undefined) {\n            let quill = QuillRef.current?.getEditor()\n\n            quill?.setSelection(range, 1)\n\n            quill?.clipboard.dangerouslyPasteHTML(range, `<img src=${url} alt=\"이미지 태그가 삽입됩니다.\" />`)\n          }\n\n          return {...res, success: true}\n        } catch (error) {\n          return {...error.response, success: false}\n        }\n      }\n    }\n  }\n\n  const modules = useMemo(() => {\n    return {\n      toolbar: {\n        container: [\n          ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n          ['blockquote'],\n          [{list: 'ordered'}, {list: 'bullet'}], // 리스트\n          [{script: 'sub'}, {script: 'super'}], // superscript/subscript\n          [{indent: '-1'}, {indent: '+1'}], // Text 좌우 이동\n          [{direction: 'rtl'}], // Text 좌우 끝으로 이동\n          [{header: [1, 2, 3, 4, 5, 6, false]}], // Text 제목 크기\n          [{color: []}, {background: []}], // Text 색상\n          [{font: []}], // Text 폰트\n          [{align: []}], // Text 정렬\n          ['clean'], // Text 설정 초기화\n          //['image', 'video'],\n        ],\n        //handlers: {\n        //           image: imageHandler,\n        //         },\n      },\n    }\n  }, [])\n\n  const handleEditorOnChange = item => {\n    if (maxLength) {\n      const textReplace = item.replace(/<[^>]*>?| /g, '').length\n      if (maxLength >= textReplace) {\n        setValue(item)\n        setTextLengthCheck(false)\n      } else {\n        setTextLengthCheck(true)\n      }\n    } else if (!maxLength) {\n      setValue(item)\n    }\n  }\n\n  return (\n    <CCol style={{height: `${editorHeight}px`, marginBottom: '20px'}} className={'pb-5'}>\n      <CFormLabel htmlFor={`${id}Static`} className='col-form-label'>\n        <span className={isRequired && 'required'}>{label || ' * '}</span>\n        <MaxTextMsg className={'px-lg-2'} textLengthCheck={textLengthCheck}>\n          {maxLength ? `* ${maxLength}자 까지 입력 가능합니다.` : '  '}\n        </MaxTextMsg>\n      </CFormLabel>\n      <EditorStyle\n        id={id || ''}\n        ref={element => {\n          if (element !== null) {\n            QuillRef.current = element\n          }\n        }}\n        value={value}\n        defaultValue={value}\n        onChange={item => (!textLengthCheck ? handleEditorOnChange(item) : handleEditorOnChange(value))}\n        modules={modules}\n        readOnly={readOnly}\n        theme='snow'\n        placeholder='내용을 입력해주세요.'\n        style={{height: '100%'}}\n      />\n    </CCol>\n  )\n}\n\nexport default ModalQuillEditor\n\nconst EditorStyle = styled(ReactQuill)`\n  background-color: ${({readOnly}) => (readOnly ? '#d8dbe0' : 'transparent')};\n  border-radius: 0.375rem;\n  border: none;\n  padding-bottom: ${({readOnly}) => (readOnly ? '0' : '67px')};\n  .ql-container {\n    border-radius: ${({readOnly}) => (readOnly ? '0.375rem' : '0')};\n    border-bottom-left-radius: 0.375rem;\n    border-bottom-right-radius: 0.375rem;\n  }\n  .ql-editor {\n    border-radius: ${({readOnly}) => (readOnly ? '0.375rem' : '0')};\n  }\n  .ql-toolbar {\n    border-top-left-radius: 0.375rem;\n    border-top-right-radius: 0.375rem;\n    display: ${({readOnly}) => (readOnly ? 'none' : 'block')};\n  }\n`\nconst MaxTextMsg = styled.span`\n  font-size: 12px;\n  padding-left: 10px;\n  //color: ${({textLengthCheck}) => textLengthCheck && 'red'};\n`\n//border-top: ${({readOnly}) => (readOnly ? '1px solid #b1b7c1' : 'none')};\n","import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport {Table} from 'antd'\nimport {CFormLabel} from '@coreui/react'\nimport PropTypes from 'prop-types'\n\nconst AntDesignListForm = ({items, onClick, columns, className, label, listIndex, summary, children}) => {\n  const getListIndex = num => {\n    switch (+num) {\n      case 1:\n        return '①'\n      case 2:\n        return '②'\n      case 3:\n        return '③'\n      case 4:\n        return '④'\n      case 5:\n        return '⑤'\n      case 6:\n        return '⑥'\n      case 7:\n        return '⑦'\n      case 8:\n        return '⑧'\n      case 9:\n        return '⑨'\n      case 10:\n        return '⑩'\n      default:\n        return ''\n    }\n  }\n  return (\n    <>\n      <ListTitleForm id={'tsts'}>\n        <CFormLabel className='col-form-label'>\n          <span>{`${getListIndex(listIndex)} ${label}` || ''}</span>\n        </CFormLabel>\n      </ListTitleForm>\n      {children}\n      <AntTable\n        //onRow={(record, rowIndex) => {\n        //           return {\n        //             onClick: event => {\n        //               console.log(event, record, rowIndex)\n        //             }, // click row\n        //             onDoubleClick: event => {\n        //               console.log(event, record, rowIndex)\n        //             }, // double click row\n        //           }\n        //         }}\n        onCell={{\n          cat: item => {\n            console.log()\n          },\n        }}\n        columns={columns || []}\n        dataSource={items || []}\n        className={className}\n        pagination={false}\n        summary={summary}\n        bordered\n      />\n    </>\n  )\n}\nAntDesignListForm.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n  title: PropTypes.string,\n  listIndex: PropTypes.number,\n  summary: PropTypes.func,\n  children: PropTypes.element,\n}\nexport default AntDesignListForm\n\nconst AntTable = styled(Table)`\n  * {\n    border-radius: 0;\n  }\n  &.userList {\n    width: 100%;\n    & > div {\n    width:100%\n  }\n  & th {\n    min-width: auto;\n    background:#d6d2f8;\n  }\n  & th,\n  & td{\n    text-align: center;\n    padding:0.3rem;\n    & select {\n     border:none;\n      \n    }\n  }\n  \n  }\n  &.solutionList{\n  & td:nth-child(2),\n  & td:nth-child(5){\n  padding:0;\n    & select{\n      padding:0.8rem;\n    }\n  }\n  \n`\nconst ListTitleForm = styled(CFormLabel)`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: center;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  & span {\n    line-height: 1.5;\n    margin-right: 0.2rem;\n  }\n`\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {Table, Typography} from 'antd'\nimport AntDesignListForm from './AntDesignListForm'\nconst {Text} = Typography\n\nconst NumberOfStoresList = ({items, columns, className, label}) => {\n  const [listItems, setListItems] = useState([])\n  useEffect(() => {\n    setListItems(items)\n  }, [items])\n\n  return (\n    <>\n      <AntDesignListForm\n        listIndex={1}\n        label={label || ''}\n        columns={columns}\n        items={listItems}\n        className={className}\n        summary={pageData => {\n          let totalCat = 0\n          let totalPos = 0\n          let totalKiosk = 0\n          let totalSum = 0\n          pageData.forEach(({catcount, poscount, kioskcount, sum}) => {\n            totalCat += catcount\n            totalPos += poscount\n            totalKiosk += kioskcount\n            totalSum += sum\n          })\n          return (\n            <>\n              <Table.Summary.Row style={{background: '#E0FFFF'}}>\n                <Table.Summary.Cell index={0}>Total</Table.Summary.Cell>\n                <Table.Summary.Cell index={1}>\n                  <Text>{Number(totalCat)}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{Number(totalPos)}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{Number(totalKiosk)}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{Number(totalSum)}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{'  '}</Text>\n                </Table.Summary.Cell>\n              </Table.Summary.Row>\n            </>\n          )\n        }}\n      />\n    </>\n  )\n}\n\nNumberOfStoresList.propTypes = {\n  items: PropTypes.array,\n  columns: PropTypes.array,\n  label: PropTypes.string,\n  className: PropTypes.string,\n}\n\nexport default NumberOfStoresList\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport AntDesignListForm from './AntDesignListForm'\nimport {Table} from 'antd'\n\nconst FlagshipSolutionList = ({items, onClick, columns, className, label}) => {\n  const [listItems, setListItems] = useState([])\n  useEffect(() => {\n    setListItems(items)\n  }, [items])\n  return (\n    <>\n      <AntDesignListForm\n        columns={columns || []}\n        items={listItems || []}\n        className={className}\n        label={label || ''}\n        listIndex={2}\n        summary={() => {\n          return (\n            <>\n              <Table.Summary.Row>\n                <Table.Summary.Cell index={0}>기타</Table.Summary.Cell>\n                <Table.Summary.Cell index={1}></Table.Summary.Cell>\n                <Table.Summary.Cell index={2}></Table.Summary.Cell>\n                <Table.Summary.Cell index={3}>기타</Table.Summary.Cell>\n                <Table.Summary.Cell index={4}></Table.Summary.Cell>\n              </Table.Summary.Row>\n            </>\n          )\n        }}\n      />\n    </>\n  )\n}\n\nFlagshipSolutionList.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n}\n\nexport default FlagshipSolutionList\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  CCol,\n  CFormInput,\n  CFormLabel,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport styled from 'styled-components'\n\nconst ManagementTarget = ({items, onClick, columns, label}) => {\n  const [listItems, setListItems] = useState([])\n  useEffect(() => {\n    setListItems(items)\n  }, [items])\n\n  return (\n    <CCol>\n      <CFormLabel className='col-form-label'>\n        <span>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className={'searchInput pb-3'}>\n        <CFormInput type='text' placeholder='주력 H/W 모델명을 입력해 주세요' aria-label='Disabled input' />\n      </CCol>\n      <CCol>\n        <CustomCTable stripedColumns>\n          <CTableHead color='light'>\n            <CTableHeaderCell key={'a'}>구분</CTableHeaderCell>\n            <CTableHeaderCell key={'b'}>제조사/모델명</CTableHeaderCell>\n            <CTableHeaderCell key={'c'}>구분</CTableHeaderCell>\n            <CTableHeaderCell key={'d'}>제조사/모델명</CTableHeaderCell>\n          </CTableHead>\n          <CTableBody>\n            <CTableRow>\n              <CTableDataCell className={'rowTitle'}>POS</CTableDataCell>\n              <CTableDataCell>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n              </CTableDataCell>\n              <CTableDataCell className={'rowTitle'}>KIOSK</CTableDataCell>\n              <CTableDataCell>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n              </CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CustomCTable>\n      </CCol>\n    </CCol>\n  )\n}\n\nManagementTarget.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n}\n\nexport default ManagementTarget\n\nconst CustomCTable = styled(CTable)`\n  text-align: center;\n  & th {\n    padding: 0.5rem 0;\n  }\n  & .rowTitle {\n    display: table-cell;\n    vertical-align: middle;\n  }\n  & tbody td {\n    padding: 0;\n    & .col {\n    padding: 0.5rem;\n    &.col:not(:last-child) {\n      border-bottom: 1px solid #D8DBE0;\n    }\n  }\n`\nconst ListTitleForm = styled(CFormLabel)`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: center;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  & span {\n    font-size: 17px;\n    margin-right: 0.2rem;\n  }\n`\n","import {CRow} from '@coreui/react'\nimport ModalInput from '../../../forms/inputForm/ModalInput'\nimport DetailModalTemplate from '../DetailModalTemplate'\nimport NumberOfStoresList from '../../../list/maintenance/NumberOfStoresList'\nimport {\n  generalListApplicationColumns,\n  managementTargetColumns,\n  solutionListColumns,\n} from '../../../../utils/columns/partnerCenter/Columns'\nimport FlagshipSolutionList from '../../../list/maintenance/FlagshipSolutionList'\nimport ManagementTarget from '../../../list/maintenance/ManagementTarget'\nimport ModalQuillEditor from '../../../forms/inputForm/ModalQuillEditor'\nimport {useEffect, useState} from 'react'\n\nconst MaintenancesDetailModal = ({value, visible, setVisible}) => {\n  const {\n    id, // 리스트 id\n    maintenanceNum, // 발주 번호\n    certificateNum, // 사업자 번호\n    representativeName, // 대표자 명\n    createdAt, // 주문일자\n    mobilePhoneNum, // 휴대전화 번호\n    phoneNum, // 전화번호\n    email, // 이메일\n    address, // 사업장 주소\n    maintenanceCategory, // 유지보수 신청 유형 (원격 서비스 / 방문 서비스 A / 방문 서비스 B / 방문 서비스 C / 통합 서비스)\n    adminMaintenanceHardwareDTOs, // H/W 현황 리스트\n    adminMaintenanceSolutionDTOs, // 주력 솔루션 및 VAN사 리스트\n    adminMaintenanceStoreDTOs, // 유지보수 신청 가맹점 수\n    operationalProcesses, // 현장 운영중인 엄무 프로세스\n  } = value\n  const [editor, setEditor] = useState('')\n  return (\n    <DetailModalTemplate title={'유지보수 신청 상세'} visible={visible} setVisible={setVisible} notEditBtn>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'orderNum'}\n          placeholder={'발주 번호'}\n          label={'발주 번호'}\n          value={maintenanceNum}\n          readOnly\n          disabled\n        />\n        <ModalInput\n          id={'businessName'}\n          placeholder={'상호명'}\n          label={'상호명'}\n          //value={businessName}\n          readOnly\n          disabled\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'businessNumber'}\n          placeholder={'사업자 번호'}\n          label={'사업자 번호'}\n          value={certificateNum}\n          readOnly\n          disabled\n        />\n        <ModalInput\n          id={'representativeName'}\n          placeholder={'대표자 명'}\n          label={'대표자 명'}\n          value={representativeName}\n          readOnly\n          disabled\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'orderDate'}\n          placeholder={'주문 일자'}\n          label={'주문 일자'}\n          value={createdAt}\n          readOnly\n          disabled\n        />\n        <ModalInput\n          id={'phoneNumber'}\n          placeholder={'휴대전화 번호'}\n          label={'휴대전화 번호'}\n          value={mobilePhoneNum}\n          readOnly\n          disabled\n        />\n      </CRow>\n\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'phoneNum'}\n          placeholder={'사업장 전화번호'}\n          label={'사업장 전화번호'}\n          value={phoneNum}\n          readOnly\n          disabled\n        />\n        <ModalInput id={'email'} placeholder={'이메일'} label={'이메일'} value={email} readOnly disabled />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'businessAddress'}\n          placeholder={'사업장 주소'}\n          label={'사업장 주소'}\n          value={address}\n          readOnly\n          disabled\n        />\n        <ModalInput\n          id={'maintenanceCategory'}\n          placeholder={'유지보수 신청 유형'}\n          label={'유지보수 신청 유형'}\n          value={maintenanceCategory}\n          readOnly\n          disabled\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <NumberOfStoresList\n          label={'신청 가맹점 수'}\n          className={'userList'}\n          columns={generalListApplicationColumns}\n          items={adminMaintenanceStoreDTOs}\n          readOnly\n          disabled\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <FlagshipSolutionList\n          label={'주력 솔루션 및 VAN사'}\n          className={'userList solutionList'}\n          columns={solutionListColumns}\n          items={adminMaintenanceSolutionDTOs}\n          readOnly\n          disabled\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ManagementTarget\n          label={'③ 관리 대상 H/W 현황'}\n          columns={managementTargetColumns}\n          items={adminMaintenanceHardwareDTOs}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalQuillEditor\n          label={'④ 현장 운영중인 엄무 프로세스'}\n          value={operationalProcesses}\n          setValue={setEditor}\n          readOnly\n        />\n      </CRow>\n    </DetailModalTemplate>\n  )\n}\n\nexport default MaintenancesDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {maintenanceApplicationList} from '../../../utils/columns/partnerCenter/Columns'\nimport OrderDetailModal from '../../../components/Modal/partnerCenter/order/OrderDetailModal'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport MaintenancesDetailModal from '../../../components/Modal/partnerCenter/order/MaintenancesDetailModal'\n\nconst MaintenancesList = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [editCheck, setEditCheck] = useState({})\n\n  const [showModal, setShowModal] = useState(false)\n\n  // 발주신청 리스트 API\n  const getList = async () => {\n    try {\n      const {\n        data: {isSuccess, result, code, message},\n      } = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.PARTNER_MAINTENANCES,\n      })\n      if (!isSuccess || isEmpty(result)) {\n        return\n      }\n      if (code === 1000) {\n        setItems(result?.adminMaintenanceDTOs)\n      } else {\n        alert(message)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    getList()\n  }, [])\n\n  /** Open Modal*/\n  const handleShowMaterialDetailModal = async ({id}) => {\n    try {\n      const {\n        data: {isSuccess, result, code, message},\n      } = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: `${EndPoint.PARTNER_MAINTENANCES}/${id}`,\n      })\n      if (!isSuccess || isEmpty(result)) {\n        return alert(message)\n      }\n      if (code === 1000) {\n        setSelectedItem(result)\n        setEditCheck(result)\n      } else {\n        alert(message)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    setShowModal(!showModal)\n  }\n\n  const handleOrderModalOnChange = ({target: {id, value}}) => {\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n  const handleOrderListOnDelete = ({no}) => {\n    if (window.confirm('Delete ?')) {\n      setItems(items.filter(value => value.no !== no))\n    }\n  }\n  const handleOrderOnDelete = ({productId}) => {\n    if (window.confirm('Delete ?')) {\n      setSelectedItem({\n        ...selectedItem,\n        orderList: selectedItem.orderList.filter(value => value.productId !== productId),\n      })\n    }\n  }\n  return (\n    <CRow>\n      <PageHeader title='유지보수 신청 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowMaterialDetailModal}\n              columns={maintenanceApplicationList}\n              className={'userList'}\n              onDelete={handleOrderListOnDelete}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <MaintenancesDetailModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        onChange={handleOrderModalOnChange}\n        onDelete={handleOrderOnDelete}\n      />\n    </CRow>\n  )\n}\n\nexport default MaintenancesList\n"],"names":["id","value","label","isRequired","readOnly","setValue","maxLength","editorHeight","QuillRef","useRef","useState","textLengthCheck","setTextLengthCheck","modules","useMemo","toolbar","container","list","script","indent","direction","header","color","background","font","align","handleEditorOnChange","item","textReplace","replace","length","style","height","marginBottom","className","htmlFor","MaxTextMsg","EditorStyle","ref","element","current","defaultValue","onChange","theme","placeholder","styled","ReactQuill","items","columns","onClick","listIndex","summary","children","ListTitleForm","num","getListIndex","AntTable","onCell","cat","console","log","dataSource","pagination","bordered","Table","CFormLabel","Text","Typography","listItems","setListItems","useEffect","pageData","totalCat","totalPos","totalKiosk","totalSum","forEach","catcount","poscount","kioskcount","sum","index","Number","type","CustomCTable","stripedColumns","CTable","visible","setVisible","maintenanceNum","certificateNum","representativeName","createdAt","mobilePhoneNum","phoneNum","email","address","maintenanceCategory","adminMaintenanceHardwareDTOs","adminMaintenanceSolutionDTOs","adminMaintenanceStoreDTOs","operationalProcesses","setEditor","DetailModalTemplate","title","notEditBtn","ModalInput","disabled","generalListApplicationColumns","solutionListColumns","managementTargetColumns","ModalQuillEditor","setItems","selectedItem","setSelectedItem","setEditCheck","showModal","setShowModal","getList","ApiConfig","method","HttpMethod","url","EndPoint","data","isSuccess","result","code","message","isEmpty","adminMaintenanceDTOs","alert","handleShowMaterialDetailModal","PageHeader","xs","ListTemplate","maintenanceApplicationList","onDelete","no","window","confirm","filter","target","productId","orderList"],"sourceRoot":""}