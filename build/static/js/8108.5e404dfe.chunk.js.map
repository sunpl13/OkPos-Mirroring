{"version":3,"file":"static/js/8108.5e404dfe.chunk.js","mappings":"oMAoBA,IAjB4B,SAAHA,GAAsE,IAAjEC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MAAOC,EAAQL,EAARK,SAAUC,EAAIN,EAAJM,KAAMC,EAAQP,EAARO,SAAUC,EAAQR,EAARQ,SAC9E,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAC,UACHF,EAAAA,EAAAA,KAACG,EAAAA,GAAa,CACZX,GAAIA,GAAM,GACVG,MAAOA,GAAS,GAChBD,KAAMA,GAAQ,GACdD,MAAOA,GAAS,GAChBG,SAAUA,EACVC,KAAMA,GAAQ,GACdC,SAAUA,EACVC,SAAUA,KAIlB,C,mOCsBA,EAlCuB,SAAHR,GAAoB,IAAfa,EAAQb,EAARa,SACvBC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAiB5B,OAhBAI,EAAAA,EAAAA,YAAU,WACJP,IAAoB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,QAAS,GACjCF,EACEN,EAASS,KAAI,SAAAC,GACX,IAAMC,EAAc,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAME,MAAM,KAC5B,MAAO,CACLC,IAAKH,EACLI,KAAMH,EAAQA,EAAQH,OAAS,GAC/BO,OAAQ,OACRC,KAAKC,EAAAA,EAAAA,IAAgBP,GAEzB,IAGN,GAAG,CAACV,KAGFJ,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAC,SACkB,IAApBO,EAASG,OACRH,EAASI,KAAI,SAAAS,GAAI,OACfC,EAAAA,EAAAA,MAACC,EAAM,CAAAtB,SAAA,EACLF,EAAAA,EAAAA,KAACyB,EAAAA,EAAiB,KAClBzB,EAAAA,EAAAA,KAAA,KAAAE,SAAQ,OAAJoB,QAAI,IAAJA,OAAI,EAAJA,EAAMJ,SAFK,OAAJI,QAAI,IAAJA,OAAI,EAAJA,EAAML,IAGV,KAGXjB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAU,CAACC,KAAK,OAAOC,YAAY,+CAAY7B,UAAQ,KAIhE,EAIMyB,EAASK,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+b,qBCsDzB,EAxF2B,SAAHzC,GAWjB,IAVL0C,EAAM1C,EAAN0C,OACAC,EAAS3C,EAAT2C,UACAzC,EAAKF,EAALE,MACA0C,EAAO5C,EAAP4C,QACAC,EAAU7C,EAAV6C,WACAC,EAAQ9C,EAAR8C,SACAC,EAAM/C,EAAN+C,OACAC,EAAQhD,EAARgD,SACAC,EAAWjD,EAAXiD,YACAC,EAAOlD,EAAPkD,QAEOjD,EAA6FC,EAA7FD,GAAIkD,EAAyFjD,EAAzFiD,MAAOC,EAAkFlD,EAAlFkD,SAAUC,EAAwEnD,EAAxEmD,aAAcC,EAA0DpD,EAA1DoD,QAASC,EAAiDrD,EAAjDqD,gBAAiBC,EAAgCtD,EAAhCsD,aAAcC,EAAkBvD,EAAlBuD,eAClF3C,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B4C,EAAK1C,EAAA,GAAE2C,EAAQ3C,EAAA,GAKtB,OAJAI,EAAAA,EAAAA,YAAU,WACRuC,EAASH,EACX,GAAG,KAGDxB,EAAAA,EAAAA,MAAC4B,EAAAA,EAA2B,CAC1BhB,QAASA,EACTO,MAAO,yCACPN,WAAYA,EACZH,OAAQA,EACRI,SAAUA,EACVE,SAAqC,KAAb,OAAdS,QAAc,IAAdA,OAAc,EAAdA,EAAgBpC,SAAgB2B,EAC1CC,YAAaA,EACbY,SAAqC,KAAb,OAAdJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBpC,QAC1B6B,QAASA,EAAQvC,SAAA,EAEjBqB,EAAAA,EAAAA,MAAC8B,EAAAA,GAAI,CAACC,UAAW,MAAMpD,SAAA,EACrBF,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,CAAC/D,GAAI,KAAMoC,YAAa,4BAASjC,MAAO,4BAASF,MAAOD,EAAIM,UAAQ,EAACC,UAAQ,KACxFC,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,CAAC/D,GAAI,WAAYoC,YAAa,4BAASjC,MAAO,4BAASF,MAAOkD,EAAU7C,UAAQ,EAACC,UAAQ,QAEtGwB,EAAAA,EAAAA,MAAC8B,EAAAA,GAAI,CAACC,UAAW,MAAMpD,SAAA,EACrBF,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,CACT/D,GAAI,kBACJoC,YAAa,4BACbjC,MAAO,4BACPF,MAAOqD,EACPhD,UAAQ,EACRC,UAAQ,KAEVC,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,CACT/D,GAAI,cACJoC,YAAa,2BACbjC,MAAO,2BACPF,MAAOmD,EACP9C,UAAQ,EACRC,UAAQ,QAGZC,EAAAA,EAAAA,KAACqD,EAAAA,GAAI,CAACC,UAAW,MAAMpD,UACrBF,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,CAAC/D,GAAI,QAASoC,YAAa,4BAASjC,MAAO,4BAASF,MAAOiD,EAAO5C,UAAQ,EAACC,UAAQ,OAEhGC,EAAAA,EAAAA,KAACqD,EAAAA,GAAI,CAACC,UAAW,MAAMpD,UACrBF,EAAAA,EAAAA,KAACwD,EAAAA,EAAmB,CAAChE,GAAG,cAAcC,MAAOoD,EAAS/C,UAAU,EAAMC,UAAQ,EAACL,KAAM,EAAGC,MAAO,iCAEjG4B,EAAAA,EAAAA,MAAC8B,EAAAA,GAAI,CAACC,UAAW,MAAMpD,SAAA,EACrBF,EAAAA,EAAAA,KAACyD,EAAAA,GAAU,CAAAvD,SAAE,8BACbF,EAAAA,EAAAA,KAAC0D,EAAc,CACbtD,SAAU6C,EACVtD,MAAO,qBACPe,YAAawC,EACbpD,SAAUN,GAAM+C,EAChBxC,SAAUP,GAAM+C,EAChBoB,UAAQ,EACRC,cAAe,SAGnB5D,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACqD,EAAAA,GAAI,CAACC,UAAW,MAAMpD,UACrBF,EAAAA,EAAAA,KAAC6D,EAAAA,EAAgB,CACfrE,GAAG,UACHG,MAAO,4BACPF,MAAO6C,EACPwB,SAAU5B,EACVpC,SAAqC,KAAb,OAAdkD,QAAc,IAAdA,OAAc,EAAdA,EAAgBpC,SAAgB2B,EAC1CwB,UAAW,IACXC,YAAU,OAGdhE,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,WAGN,E,4CC6DA,EA3IoB,WAClB,IAAAK,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B4D,EAAK1D,EAAA,GAAE2D,EAAQ3D,EAAA,GACtB4D,GAAwC7D,EAAAA,EAAAA,UAAS,CAAC,GAAE8D,GAAA5D,EAAAA,EAAAA,GAAA2D,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkCjE,EAAAA,EAAAA,UAAS,IAAGkE,GAAAhE,EAAAA,EAAAA,GAAA+D,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAkCrE,EAAAA,EAAAA,WAAS,GAAMsE,GAAApE,EAAAA,EAAAA,GAAAmE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA4BzE,EAAAA,EAAAA,UAAS,IAAG0E,GAAAxE,EAAAA,EAAAA,GAAAuE,EAAA,GAAjCzC,EAAM0C,EAAA,GAAE9C,EAAS8C,EAAA,GACxBC,GAAgC3E,EAAAA,EAAAA,WAAS,GAAK4E,GAAA1E,EAAAA,EAAAA,GAAAyE,EAAA,GAAvC1C,EAAQ2C,EAAA,GAAE1C,EAAW0C,EAAA,GAGtBC,EAAO,eAAA5F,GAAA6F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,QACdC,EAAAA,EAAAA,IAAYC,EAAAA,EAASC,mBAClBC,MAAK,SAAAC,GACJ9B,EACK,OAAH8B,QAAG,IAAHA,OAAG,EAAHA,EAAKC,mBAAmBpF,KAAI,SAAAqF,GAC1B,OAAAC,EAAAA,EAAAA,GAAA,CAAQjF,KAAMgF,EAAEvD,SAAUyD,YAAaF,EAAEtD,aAAayD,QAAQ,KAAM,KAAQH,EAC9E,IAEJ,IACCI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,IAAC,wBAAAd,EAAAiB,OAAA,GAAAnB,EAAA,KAClC,kBAVY,OAAAhG,EAAAoH,MAAA,KAAAC,UAAA,MAYbjG,EAAAA,EAAAA,YAAU,WACRwE,GACF,GAAG,IAGH,IAAM0B,EAAe,eAAAC,GAAA1B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyB,EAAAC,GAAA,IAAAxH,EAAA,OAAA6F,EAAAA,EAAAA,KAAAG,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OAAQnG,EAAEwH,EAAFxH,GAC9BsF,GAAcD,IACdqC,EAAAA,EAAAA,IAAcrB,EAAAA,EAASC,kBAAmBtG,GACvCuG,MAAK,SAAAC,GACJ1B,EAAgB0B,GACmB,KAA5B,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKhD,eAAepC,UACtB8D,EAAgB,OAAHsB,QAAG,IAAHA,OAAG,EAAHA,EAAKhD,eAAe,IACjCd,EAAa,OAAH8D,QAAG,IAAHA,OAAG,EAAHA,EAAKhD,eAAe,GAAGH,SAErC,IACCyD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,IAAC,wBAAAU,EAAAP,OAAA,GAAAK,EAAA,KAClC,gBAXoBI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KA2BfQ,EAA0B,eAAAC,GAAAjC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgC,IAAA,IAAA9H,EAAA,OAAA6F,EAAAA,EAAAA,KAAAG,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,OAC1BnG,EAAMiF,EAANjF,GACHgI,OAAOC,QAAQ,oEACjBC,EAAAA,EAAAA,IAAY,GAADC,OAAI9B,EAAAA,EAASC,kBAAiB,UAAUtG,GAChDuG,MAAK,SAAAC,GAGJ,OAFAb,IACAL,GAAa,GACN8C,MAAM5B,EACf,IACCM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,IACjC,wBAAAgB,EAAAb,OAAA,GAAAY,EAAA,KACF,kBAX+B,OAAAD,EAAAV,MAAA,KAAAC,UAAA,KAmB1BiB,EAAwB,eAAAC,GAAA1C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyC,IAAA,IAAAvI,EAAAwI,EAAA,OAAA3C,EAAAA,EAAAA,KAAAG,MAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACtB,GAAFnG,EAAM6E,EAAN7E,GACkB,IAArBiF,EAAU7D,OAAY,CAAAqH,EAAAtC,KAAA,QACK,GAAvBqC,EAAmB,OAATvD,QAAS,IAATA,OAAS,EAATA,EAAWjF,IACvBgI,OAAOC,QAAQ,wEAAiB,CAADQ,EAAAtC,KAAA,WAC5BrD,EAAO,CAAD2F,EAAAtC,KAAA,eAAAsC,EAAAC,OAAA,SAASN,MAAM,8DAAe,QACzCO,EAAAA,EAAAA,IAAW,GAADR,OAAI9B,EAAAA,EAASC,kBAAiB,UAAUkC,EAAS,CACzDnF,QAASP,IAERyD,MAAK,SAAAC,GAGJ,OAFAb,IACAL,GAAa,GACN8C,MAAM5B,EACf,IACCM,OAAM,SAAA8B,GAAK,OAAI5B,QAAQC,IAAI2B,EAAM,IAAC,OAAAH,EAAAtC,KAAA,oBAE9B6B,OAAOC,QAAQ,wEAAiB,CAADQ,EAAAtC,KAAA,YACnCrD,EAAO,CAAD2F,EAAAtC,KAAA,gBAAAsC,EAAAC,OAAA,SAASN,MAAM,8DAAe,SACzCS,EAAAA,EAAAA,IAAY,GAADV,OAAI9B,EAAAA,EAASC,kBAAiB,KAAA6B,OAAInI,EAAE,UAAU,CACvDqD,QAASP,IACRyD,MAAK,SAAAC,GAGN,OAFAb,IACAL,GAAa,GACN8C,MAAM5B,EACf,IAAE,yBAAAiC,EAAAvB,OAAA,GAAAqB,EAAA,KAEL,kBA1B6B,OAAAD,EAAAnB,MAAA,KAAAC,UAAA,KAkC9B,OAPAjG,EAAAA,EAAAA,YAAU,WACHkE,IACH3C,EAAU,IACVwC,EAAa,IAEjB,GAAG,CAACG,KAGFtD,EAAAA,EAAAA,MAAC8B,EAAAA,GAAI,CAAAnD,SAAA,EACHF,EAAAA,EAAAA,KAACsI,EAAAA,EAAU,CAAC5F,MAAM,2CAClB1C,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACsI,GAAI,GAAGrI,UACXF,EAAAA,EAAAA,KAACwI,EAAAA,GAAK,CAAClF,UAAU,OAAMpD,UACrBF,EAAAA,EAAAA,KAACyI,EAAAA,GAAS,CAAAvI,UACRF,EAAAA,EAAAA,KAAC0I,EAAAA,EAAY,CACXzE,MAAOA,EACP0E,QAAS9B,EACT+B,QAASC,EAAAA,GACTvF,UAAW,WACXwF,kBAAkB,WAK1B9I,EAAAA,EAAAA,KAAC+I,EAAkB,CACjB5G,QAAS0C,EACTzC,WAAY0C,EACZrF,MAAO4E,EACPzE,SA3D6B,SAAAoJ,GACjC9G,EAAU8G,EACZ,EA0DM/G,OAAQ4F,EACRxF,SAAU+E,EACV9E,OAAQA,EACRJ,UAAWA,EACXK,SAAUA,EACVC,YAAaA,EACbC,QA9F2B,WAC/B,IAAOI,EAAW4B,EAAX5B,QACP,OAAIP,EAAO+D,QAAQ,cAAe,KAAOxD,IAAYP,EAC/CkF,OAAOC,QAAQ,gPACV3C,GAAa,GAEb,KAGFA,GAAa,EAExB,MAuFF,C,kFCvJA,EADwB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,4zBAAg0B,KAAQ,aAAc,MAAS,Y,WCM1/BrD,EAAoB,SAA2BwH,EAAOC,GACxD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,GAAS,CAAC,EAAGJ,EAAO,CACpEC,IAAKA,EACLI,KAAMC,IAEV,EAIA,MAA4BJ,EAAAA,WAAiB1H,E","sources":["components/forms/inputForm/ModalTextArrayInput.js","components/forms/inputForm/ModalFilesView.js","components/Modal/partnerCenter/inquiry/InquiryDetailModal.js","pages/partnerCenter/inquiry/InquiryList.js","../node_modules/@ant-design/icons-svg/es/asn/PaperClipOutlined.js","../node_modules/@ant-design/icons/es/icons/PaperClipOutlined.js"],"sourcesContent":["import {CCol, CFormTextarea} from '@coreui/react'\nimport React from 'react'\n\nconst ModalTextArrayInput = ({id, value, rows, label, onChange, text, readOnly, disabled}) => {\n  return (\n    <CCol>\n      <CFormTextarea\n        id={id || ''}\n        label={label || ''}\n        rows={rows || 10}\n        value={value || ''}\n        onChange={onChange}\n        text={text || ''}\n        readOnly={readOnly}\n        disabled={disabled}\n      />\n    </CCol>\n  )\n}\n\nexport default ModalTextArrayInput\n","import {PaperClipOutlined} from '@ant-design/icons'\nimport styled from 'styled-components'\nimport {CCol, CFormInput} from '@coreui/react'\nimport {useEffect, useState} from 'react'\nimport {antdImageFormat} from '../../../utils/awsCustom'\n\nconst ModalFilesView = ({fileItem}) => {\n  const [fileList, setFileList] = useState([])\n  useEffect(() => {\n    if (fileItem && fileItem?.length > 0) {\n      setFileList(\n        fileItem.map(path => {\n          const nameArr = path?.split('/')\n          return {\n            uid: path,\n            name: nameArr[nameArr.length - 1],\n            status: 'done',\n            url: antdImageFormat(path),\n          }\n        }),\n      )\n    }\n  }, [fileItem])\n\n  return (\n    <CCol>\n      {fileList.length !== 0 ? (\n        fileList.map(item => (\n          <DivBox key={item?.uid}>\n            <PaperClipOutlined />\n            <a>{item?.name}</a>\n          </DivBox>\n        ))\n      ) : (\n        <CFormInput type='text' placeholder='파일이 없습니다.' disabled />\n      )}\n    </CCol>\n  )\n}\n\nexport default ModalFilesView\n\nconst DivBox = styled.div`\n  display: flex;\n  align-items: center;\n  :hover {\n    background-color: rgba(0, 0, 0, 0.04);\n  }\n  & a {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    padding: 0 8px;\n    line-height: 1.5714285714285714;\n    flex: auto;\n    transition: all 0.3s;\n    color: #1677ff !important;\n    text-decoration: none;\n    background-color: transparent;\n    outline: none;\n    cursor: pointer;\n  }\n`\n","import {CFormLabel, CRow} from '@coreui/react'\nimport ModalInput from '../../../forms/inputForm/ModalInput'\nimport ModalQuillEditor from '../../../forms/inputForm/ModalQuillEditor'\nimport ModalFilesView from '../../../forms/inputForm/ModalFilesView'\nimport ModalTextArrayInput from '../../../forms/inputForm/ModalTextArrayInput'\nimport DetailModalEditModeTemplate from '../DetailModalEditModeTemplate'\nimport {useEffect, useState} from 'react'\n\nconst InquiryDetailModal = ({\n  upDate,\n  setEditor,\n  value,\n  visible,\n  setVisible,\n  onDelete,\n  editor,\n  editMode,\n  setEditMode,\n  onClose,\n}) => {\n  const {id, title, userName, userPhoneNum, content, inquiryCategory, inquiryFiles, inquiryReplies} = value\n  const [files, setFilse] = useState([])\n  useEffect(() => {\n    setFilse(inquiryFiles)\n  }, [])\n\n  return (\n    <DetailModalEditModeTemplate\n      visible={visible}\n      title={'문의 상세 보기'}\n      setVisible={setVisible}\n      upDate={upDate}\n      onDelete={onDelete}\n      editMode={inquiryReplies?.length !== 0 && editMode}\n      setEditMode={setEditMode}\n      addModal={inquiryReplies?.length === 0}\n      onClose={onClose}\n    >\n      <CRow className={'p-2'}>\n        <ModalInput id={'id'} placeholder={'문의 번호'} label={'문의 번호'} value={id} readOnly disabled />\n        <ModalInput id={'userName'} placeholder={'회원 이름'} label={'회원 이름'} value={userName} readOnly disabled />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'inquiryCategory'}\n          placeholder={'문의 유형'}\n          label={'문의 유형'}\n          value={inquiryCategory}\n          readOnly\n          disabled\n        />\n        <ModalInput\n          id={'phoneNumber'}\n          placeholder={'전화번호'}\n          label={'전화번호'}\n          value={userPhoneNum}\n          readOnly\n          disabled\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput id={'title'} placeholder={'문의 제목'} label={'문의 제목'} value={title} readOnly disabled />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalTextArrayInput id='userInquiry' value={content} readOnly={true} disabled rows={9} label={'문의 내용'} />\n      </CRow>\n      <CRow className={'p-2'}>\n        <CFormLabel>{'첨부파일'}</CFormLabel>\n        <ModalFilesView\n          fileItem={files}\n          label={'이미지'}\n          setFileList={setFilse}\n          readOnly={id && editMode}\n          disabled={id && editMode}\n          oneSheet\n          maxFileLength={10}\n        />\n      </CRow>\n      <br />\n      <CRow className={'p-2'}>\n        <ModalQuillEditor\n          id='content'\n          label={'문의 답변'}\n          value={editor}\n          setValue={setEditor}\n          readOnly={inquiryReplies?.length !== 0 && editMode}\n          maxLength={450}\n          isRequired\n        />\n      </CRow>\n      <br />\n      <br />\n    </DetailModalEditModeTemplate>\n  )\n}\n\nexport default InquiryDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport InquiryDetailModal from '../../../components/Modal/partnerCenter/inquiry/InquiryDetailModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {userInquiryListColumns} from '../../../utils/columns/partnerCenter/Columns'\nimport {EndPoint} from '../../../dataManager/apiMapper'\n\nimport {\n  createdInfo,\n  deletedInfo,\n  getDetailInfo,\n  getListData,\n  upDateInfo,\n} from '../../../components/function/partnerCenter/ApiModules'\n\nconst InquiryList = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [editCheck, setEditCheck] = useState('')\n  const [showModal, setShowModal] = useState(false)\n  const [editor, setEditor] = useState('')\n  const [editMode, setEditMode] = useState(true)\n\n  // 1:1 문의 리스트 API\n  const getList = async () => {\n    getListData(EndPoint.PARTNER_INQUIRIES)\n      .then(res => {\n        setItems(\n          res?.inquiryPartnerDTOs.map(v => {\n            return {name: v.userName, phoneNumber: v.userPhoneNum.replace(/-/g, ''), ...v}\n          }),\n        )\n      })\n      .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    getList()\n  }, [])\n\n  // Open Modal\n  const handleShowModal = async ({id}) => {\n    setShowModal(!showModal)\n    getDetailInfo(EndPoint.PARTNER_INQUIRIES, id)\n      .then(res => {\n        setSelectedItem(res)\n        if (res?.inquiryReplies.length !== 0) {\n          setEditCheck(res?.inquiryReplies[0])\n          setEditor(res?.inquiryReplies[0].content)\n        }\n      })\n      .catch(err => console.log(err))\n  }\n  // Close Modal\n  const handleDetailModalOnClose = () => {\n    const {content} = editCheck\n    if (editor.replace(/<[^>]*>?| /g, '') && content !== editor) {\n      if (window.confirm('정말 페이지에서 나가시겠습니까?.\\n\\n지금 페이지를 나가시면 변경사항이 저장되지 않습니다.')) {\n        return setShowModal(false)\n      } else {\n        return null\n      }\n    } else {\n      return setShowModal(false)\n    }\n  }\n\n  // 1:1 문의 삭제\n  const handleInquiryModalOnDelete = async () => {\n    const {id} = editCheck\n    if (window.confirm('정말 삭제하시겠습니까?')) {\n      deletedInfo(`${EndPoint.PARTNER_INQUIRIES}/reply`, id)\n        .then(res => {\n          getList()\n          setShowModal(false)\n          return alert(res)\n        })\n        .catch(err => console.log(err))\n    }\n  }\n\n  // Editor onChange\n  const handleInquiryModalOnChange = htmlTagValue => {\n    setEditor(htmlTagValue)\n  }\n\n  // 1:1 문이 업데이트\n  const handleInquiryModalUpdate = async () => {\n    const {id} = selectedItem\n    if (editCheck.length !== 0) {\n      const replyId = editCheck?.id\n      if (window.confirm('답변을 수정하시겠습니까?')) {\n        if (!editor) return alert('답변을 작성해 주세요.')\n        upDateInfo(`${EndPoint.PARTNER_INQUIRIES}/reply`, replyId, {\n          content: editor,\n        })\n          .then(res => {\n            getList()\n            setShowModal(false)\n            return alert(res)\n          })\n          .catch(error => console.log(error))\n      }\n    } else if (window.confirm('답변을 등록하시겠습니까?')) {\n      if (!editor) return alert('답변을 작성해 주세요.')\n      createdInfo(`${EndPoint.PARTNER_INQUIRIES}/${id}/reply`, {\n        content: editor,\n      }).then(res => {\n        getList()\n        setShowModal(false)\n        return alert(res)\n      })\n    }\n  }\n  useEffect(() => {\n    if (!showModal) {\n      setEditor('')\n      setEditCheck('')\n    }\n  }, [showModal])\n\n  return (\n    <CRow>\n      <PageHeader title='1 : 1 문의 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowModal}\n              columns={userInquiryListColumns}\n              className={'userList'}\n              datePickerHidden={false}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <InquiryDetailModal\n        visible={showModal}\n        setVisible={setShowModal}\n        value={selectedItem}\n        onChange={handleInquiryModalOnChange}\n        upDate={handleInquiryModalUpdate}\n        onDelete={handleInquiryModalOnDelete}\n        editor={editor}\n        setEditor={setEditor}\n        editMode={editMode}\n        setEditMode={setEditMode}\n        onClose={handleDetailModalOnClose}\n      />\n    </CRow>\n  )\n}\n\nexport default InquiryList\n","// This icon file is generated automatically.\nvar PaperClipOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M779.3 196.6c-94.2-94.2-247.6-94.2-341.7 0l-261 260.8c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l261-260.8c32.4-32.4 75.5-50.2 121.3-50.2s88.9 17.8 121.2 50.2c32.4 32.4 50.2 75.5 50.2 121.2 0 45.8-17.8 88.8-50.2 121.2l-266 265.9-43.1 43.1c-40.3 40.3-105.8 40.3-146.1 0-19.5-19.5-30.2-45.4-30.2-73s10.7-53.5 30.2-73l263.9-263.8c6.7-6.6 15.5-10.3 24.9-10.3h.1c9.4 0 18.1 3.7 24.7 10.3 6.7 6.7 10.3 15.5 10.3 24.9 0 9.3-3.7 18.1-10.3 24.7L372.4 653c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l215.6-215.6c19.9-19.9 30.8-46.3 30.8-74.4s-11-54.6-30.8-74.4c-41.1-41.1-107.9-41-149 0L463 364 224.8 602.1A172.22 172.22 0 00174 724.8c0 46.3 18.1 89.8 50.8 122.5 33.9 33.8 78.3 50.7 122.7 50.7 44.4 0 88.8-16.9 122.6-50.7l309.2-309C824.8 492.7 850 432 850 367.5c.1-64.6-25.1-125.3-70.7-170.9z\" } }] }, \"name\": \"paper-clip\", \"theme\": \"outlined\" };\nexport default PaperClipOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport PaperClipOutlinedSvg from \"@ant-design/icons-svg/es/asn/PaperClipOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar PaperClipOutlined = function PaperClipOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: PaperClipOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  PaperClipOutlined.displayName = 'PaperClipOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(PaperClipOutlined);"],"names":["_ref","id","value","rows","label","onChange","text","readOnly","disabled","_jsx","CCol","children","CFormTextarea","fileItem","_useState","useState","_useState2","_slicedToArray","fileList","setFileList","useEffect","length","map","path","nameArr","split","uid","name","status","url","antdImageFormat","item","_jsxs","DivBox","PaperClipOutlined","CFormInput","type","placeholder","styled","div","_templateObject","_taggedTemplateLiteral","upDate","setEditor","visible","setVisible","onDelete","editor","editMode","setEditMode","onClose","title","userName","userPhoneNum","content","inquiryCategory","inquiryFiles","inquiryReplies","files","setFilse","DetailModalEditModeTemplate","addModal","CRow","className","ModalInput","ModalTextArrayInput","CFormLabel","ModalFilesView","oneSheet","maxFileLength","ModalQuillEditor","setValue","maxLength","isRequired","items","setItems","_useState3","_useState4","selectedItem","setSelectedItem","_useState5","_useState6","editCheck","setEditCheck","_useState7","_useState8","showModal","setShowModal","_useState9","_useState10","_useState11","_useState12","getList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getListData","EndPoint","PARTNER_INQUIRIES","then","res","inquiryPartnerDTOs","v","_objectSpread","phoneNumber","replace","catch","err","console","log","stop","apply","arguments","handleShowModal","_ref3","_callee2","_ref2","_context2","getDetailInfo","_x","handleInquiryModalOnDelete","_ref4","_callee3","_context3","window","confirm","deletedInfo","concat","alert","handleInquiryModalUpdate","_ref5","_callee4","replyId","_context4","abrupt","upDateInfo","error","createdInfo","PageHeader","xs","CCard","CCardBody","ListTemplate","onClick","columns","userInquiryListColumns","datePickerHidden","InquiryDetailModal","htmlTagValue","props","ref","React","AntdIcon","_extends","icon","PaperClipOutlinedSvg"],"sourceRoot":""}