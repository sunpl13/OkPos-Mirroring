{"version":3,"file":"static/js/5884.01fa787a.chunk.js","mappings":"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","sources":["components/forms/ModalStatus.tsx","components/forms/downloadForm/BasicFileDownloadForm.js","components/forms/inputForm/ModalInput.js","components/Modal/officialMall/ResignUserModal.js","components/chart/MallDoughnutChartTemplate.js","components/chart/MallBarChartTemplate.js","pages/officialMall/users/ResignUserList.js","utils/columns/officialMall/Columns.js"],"sourcesContent":["import {CBadge, CCol, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\ninterface ModalInputProps {\n  type?: string\n  onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void\n  id: string\n  placeholder: string\n  value: string\n  label: string\n  readOnly?: boolean\n  disabled?: boolean\n  status?: boolean\n}\n\nconst ModalStatus = ({id, value, label}: ModalInputProps) => {\n  const getBadgeColor = (status: string) => {\n    switch (status) {\n      case 'ACTIVE':\n        return 'success'\n      case 'INACTIVE':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  // 상태값 Text get 함수\n  const getBadgeText = (status: string) => {\n    switch (status) {\n      case 'ACTIVE':\n        return '활성화'\n      case 'INACTIVE':\n        return '비활성화'\n      default:\n        return '기타'\n    }\n  }\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        {label || ' * '}\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        <CBadge color={getBadgeColor(value)}>{getBadgeText(value)}</CBadge>\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalStatus\n","import {CCol, CFormLabel} from '@coreui/react'\nimport {useEffect, useState} from 'react'\n\nconst BasicFileDownloadForm = ({id, value, label, isRequired}) => {\n  // Local state\n  const [fileName, setFileName] = useState('')\n\n  // Life Cycle\n  useEffect(() => {\n    if (value) {\n      const arSplitUrl = value.split('/') //   \"/\" 로 전체 url 을 나눈다\n      const nArLength = arSplitUrl.length\n      const arFileName = arSplitUrl[nArLength - 1] // 나누어진 배열의 맨 끝이 파일명이다\n      setFileName(arFileName)\n    }\n  }, [value])\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        {value ? (\n          <div className='col-form-label'>\n            <a href={value} download target='_blank' rel='noreferrer'>\n              {fileName}\n            </a>\n          </div>\n        ) : (\n          <div className='col-form-label'>등록된 파일이 없습니다.</div>\n        )}\n      </CCol>\n    </>\n  )\n}\n\nexport default BasicFileDownloadForm\n","import {CCol, CFormInput, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\nconst ModalInput = ({type, onChange, id, placeholder, value, label, readOnly, disabled, isRequired, xs}) => {\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' xs={xs} style={{display: 'flex'}}>\n        <CFormInput\n          type={type || 'text'}\n          id={id}\n          placeholder={placeholder || ''}\n          value={type === 'file' ? undefined : value || ''}\n          onChange={onChange}\n          readOnly={readOnly}\n          disabled={disabled}\n        />\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalInput\n","import {CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow} from '@coreui/react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport {useEffect, useState} from 'react'\nimport ModalStatus from '../../forms/ModalStatus'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport BasicFileDownloadForm from '../../forms/downloadForm/BasicFileDownloadForm'\n\nconst UserDetailModal = ({value, visible, setVisible}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [resignUser, setResignUser] = useState({\n    userId: 2,\n    name: '',\n    email: '',\n    createdAt: '',\n    updatedAt: '',\n    status: '',\n    phoneNumber: '',\n    resignReason: '',\n    businessName: '',\n    businessRegistration: '',\n    businessNumber: '',\n    businessAddress: '',\n  })\n\n  // API 통신 함수\n  const onloadMallResignUser = async value => {\n    const {userId} = value\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {userId},\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_RESIGNUSER,\n      })\n      if (!data?.data?.isSuccess || isEmpty(data?.data?.result)) {\n        console.log('onloadMallResignUser error')\n        if (data?.data?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(data?.data?.message)\n        }\n        return\n      }\n      setResignUser(data.data.result)\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    if (visible) {\n      onloadMallResignUser(value)\n    }\n  }, [visible])\n\n  const closeModal = () => {\n    setVisible(false)\n  }\n  return (\n    <CModal size='lg' visible={visible} onClose={closeModal}>\n      <CModalHeader>\n        <CModalTitle>탈퇴회원 상세정보</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput id={'id'} placeholder={'User Id'} label={'No'} value={value.userId} readOnly disabled />\n          <ModalInput id={'userName'} placeholder={'이름'} label={'이름'} value={resignUser.name} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput id={'email'} placeholder={'이메일'} label={'이메일'} value={resignUser.email} readOnly disabled />\n          <ModalInput\n            id={'createdAt'}\n            placeholder={'최초등록일'}\n            label={'최초등록일'}\n            value={resignUser.createdAt}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'phoneNumber'}\n            placeholder={'휴대전화번호'}\n            label={'휴대전화번호'}\n            value={resignUser.phoneNumber}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'businessName'}\n            placeholder={'상호명'}\n            label={'상호명'}\n            value={resignUser.businessName}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'resignReason'}\n            placeholder={'탈퇴사유'}\n            label={'탈퇴사유'}\n            value={resignUser.resignReason}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'updatedAt'}\n            placeholder={'계정탈퇴일'}\n            label={'계정탈퇴일'}\n            value={resignUser.updatedAt}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessNumber'}\n            placeholder={'사업자등록번호'}\n            label={'사업자등록번호'}\n            value={resignUser.businessNumber}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessAddress'}\n            placeholder={'사업장주소'}\n            label={'사업장주소'}\n            value={resignUser.businessAddress}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <BasicFileDownloadForm\n            id={'businessRegistration'}\n            placeholder={'사업자등록증'}\n            label={'사업자등록증'}\n            value={resignUser.businessRegistration}\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalStatus id={'userStatus'} placeholder={'상태'} label={'상태'} value={resignUser.status} />\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={closeModal}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserDetailModal\n","import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\nimport PropTypes, {object} from 'prop-types'\n\nconst MallDoughnutChartTemplate = ({title, labels, data}) => {\n  const dataSet = {\n    labels: labels,\n    datasets: [\n      {\n        label: title,\n        data: data,\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)', 'rgba(255, 159, 64)'],\n        hoverOffset: 4,\n      },\n    ],\n  }\n\n  const options = {\n    plugins: {\n      responsive: true,\n      hoverBorderWidth: 2,\n      legend: {\n        display: true,\n        position: 'right',\n        align: 'start',\n      },\n    },\n  }\n  return (\n    // <CChart\n    //   type='doughnut'\n    //   customTooltips={false}\n    //   labels={labels}\n    //   data={data}\n    //   options={{\n    //     responsive: true,\n    //     hoverBorderWidth: 2,\n    //     plugins: {\n    //       title: {\n    //         display: true,\n    //         text: title || '',\n    //         font: {\n    //           size: 24,\n    //         },\n    //       },\n    //     },\n    //     borderRadius: 10,\n    //     inflateAmount: 1,\n    //   }}\n    // />\n    <CChart type='doughnut' data={dataSet} customTooltips={false} options={options} />\n  )\n}\nexport default React.memo(MallDoughnutChartTemplate)\n","import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\nimport PropTypes, {object} from 'prop-types'\n\nconst MallBarChartTemplate = ({title, labels, data}) => {\n  const dataSet = {\n    labels: [' '],\n    datasets: [\n      {\n        label: '서비스 이용 불편',\n        data: [data[0]],\n        backgroundColor: 'rgb(255, 99, 132)',\n      },\n      {\n        label: '가격 불만족',\n        data: [data[1]],\n        backgroundColor: 'rgb(54, 162, 235)',\n      },\n      {\n        label: '제품 기능 불만족',\n        data: [data[2]],\n        backgroundColor: 'rgb(255, 205, 86)',\n      },\n      {\n        label: '기타(직접 입력)',\n        backgroundColor: 'rgba(255, 159, 64)',\n        data: [data[3]],\n      },\n    ],\n  }\n\n  const options = {\n    plugins: {\n      //responsive: true,\n      hoverBorderWidth: 2,\n      legend: {\n        display: true,\n        position: 'right',\n        align: 'start',\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  }\n  return (\n    // <CChart\n    //   type='doughnut'\n    //   customTooltips={false}\n    //   labels={labels}\n    //   data={data}\n    //   options={{\n    //     responsive: true,\n    //     hoverBorderWidth: 2,\n    //     plugins: {\n    //       title: {\n    //         display: true,\n    //         text: title || '',\n    //         font: {\n    //           size: 24,\n    //         },\n    //       },\n    //     },\n    //     borderRadius: 10,\n    //     inflateAmount: 1,\n    //   }}\n    // />\n    <CChart type='bar' data={dataSet} customTooltips={false} options={options} />\n  )\n}\n\nexport default React.memo(MallBarChartTemplate)\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport ResignUserModal from '../../../components/Modal/officialMall/ResignUserModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {resignUserListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport MallDoughnutChartTemplate from '../../../components/chart/MallDoughnutChartTemplate'\nimport MallBarChartTemplate from '../../../components/chart/MallBarChartTemplate'\n\nconst ResignUserList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [resignUserList, setResignUserList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n\n  const [showModal, setShowModal] = useState(false)\n  const [chartLabels, setChartLabels] = useState([\n    '서비스 이용 불편',\n    '가격 불만족',\n    '제품 기능 불만족',\n    '기타(직접 입력)',\n  ])\n  const [chartData, setChartData] = useState([])\n\n  const chartList = {\n    countResignReasonByService: {\n      value: '서비스 이용 불편',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      borderColor: 'rgb(255, 159, 64)',\n    },\n    countResignReasonByPrice: {\n      value: '가격 불만족',\n      backgroundColor: 'rgba(255, 159, 64, 0.2)',\n      borderColor: 'rgb(201, 203, 207)',\n    },\n    countResignReasonByItem: {\n      value: '제품 기능에 불만족',\n      backgroundColor: 'rgba(201, 203, 207, 0.2)',\n      borderColor: 'rgb(255, 205, 86)',\n    },\n    countResignReasonBySelf: {\n      value: '직접 입력',\n      backgroundColor: 'rgba(255, 205, 86, 0.2)',\n      borderColor: 'rgb(75, 192, 192)',\n    },\n  }\n\n  // API 통신 함수\n  const onLoadMallReginUserList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_RESIGNUSERS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('onLoadMallReginUserList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setResignUserList(res.result.resignUserInfos)\n      setChartData([\n        res.result.countResignReasonByService,\n        res.result.countResignReasonByPrice,\n        res.result.countResignReasonByItem,\n        res.result.countResignReasonBySelf || 0,\n      ])\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallReginUserList()\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowUserDetailModal = item => {\n    setSelectedItem(item)\n    setShowModal(!showModal)\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='탈퇴 회원 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <CRow>\n              <CCol xs={4}>\n                <CCardBody>\n                  <MallDoughnutChartTemplate title={'탈퇴 사유'} labels={chartLabels} data={chartData} />\n                </CCardBody>\n              </CCol>\n\n              <CCol xs={8}>\n                <CCardBody>\n                  <MallBarChartTemplate title={'탈퇴 사유'} labels={chartLabels} data={chartData} />\n                </CCardBody>\n              </CCol>\n            </CRow>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={resignUserList}\n              onClick={handleShowUserDetailModal}\n              columns={resignUserListColumns}\n              className={'userList'}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <ResignUserModal value={selectedItem} visible={showModal} setVisible={setShowModal} readOnly />\n    </CRow>\n  )\n}\nexport default ResignUserList\n","// 회원 리스트\nexport const userListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 탈퇴회원 리스트\nexport const resignUserListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'resignReason', label: '탈퇴사유', _props: {className: 'resignReason'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'updatedAt', label: '계정탈퇴일', sorter: false, filter: false, _props: {className: 'updatedAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 1:1 문의 리스트\nexport const inquiryListColumns = [\n  {key: 'inquiryId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '문의 유형', _props: {className: 'category'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'reply', label: '답변', sorter: false, filter: false, _props: {className: 'reply'}},\n]\n\n// FAQ 리스트\nexport const faqListColumns = [\n  {key: 'faqId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '카테고리', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n]\n\n// 자료실 리스트\nexport const dataRoomListColumns = [\n  {key: 'dataRoomId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '카테고리', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'createdAt', label: '작성일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n\n// 주문 현황 관리\nexport const orderListColumns = [\n  {key: 'orderId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'orderNumber', label: '주문번호', sorter: false, _props: {className: 'orderNumber'}},\n  {key: 'receiver', label: '수취인', _props: {className: 'receiver'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'category', label: '주문상태', _props: {className: 'category'}},\n  {key: 'totalPrice', label: '주문총액', _props: {className: 'totalPrice'}},\n  {key: 'createdAt', label: '주문일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n\n// 제품 관리\nexport const productListColumns = [\n  {key: 'itemName', label: '제품명', sorter: false, filter: false, _props: {className: 'itemName'}},\n  {key: 'orderItemPrice', sorter: false, filter: false, label: '제품가격', _props: {className: 'orderItemPrice'}},\n  {key: 'orderStatus', label: '제품상태', sorter: false, filter: false, _props: {className: 'orderStatus'}},\n  {key: 'invoiceNumber', sorter: false, filter: false, label: '송장번호', _props: {className: 'invoiceNumber'}},\n]\n\n// 배너 관리\nexport const bannerListColumns = [\n  {key: 'bannerId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'image', label: '이미지', _props: {className: 'image'}},\n  {key: 'title', label: '배너 타이틀', _props: {className: 'title'}},\n]\n"],"names":["id","value","label","htmlFor","className","style","display","color","status","getBadgeColor","getBadgeText","isRequired","useState","fileName","setFileName","useEffect","arSplitUrl","split","arFileName","length","href","download","target","rel","type","onChange","placeholder","readOnly","disabled","xs","undefined","visible","setVisible","navigate","useNavigate","userId","name","email","createdAt","updatedAt","phoneNumber","resignReason","businessName","businessRegistration","businessNumber","businessAddress","resignUser","setResignUser","onloadMallResignUser","ApiConfig","data","query","path","method","HttpMethod","url","EndPoint","isSuccess","isEmpty","result","console","log","code","alert","message","closeModal","size","onClose","ModalInput","BasicFileDownloadForm","ModalStatus","onClick","MallDoughnutChartTemplate","title","dataSet","labels","datasets","backgroundColor","hoverOffset","customTooltips","options","plugins","responsive","hoverBorderWidth","legend","position","align","React","MallBarChartTemplate","scales","y","beginAtZero","resignUserList","setResignUserList","selectedItem","setSelectedItem","showModal","setShowModal","chartLabels","chartData","setChartData","onLoadMallReginUserList","res","resignUserInfos","countResignReasonByService","countResignReasonByPrice","countResignReasonByItem","countResignReasonBySelf","PageHeader","ListTemplate","items","item","columns","resignUserListColumns","ResignUserModal","userListColumns","key","sorter","filter","_props","inquiryListColumns","faqListColumns","dataRoomListColumns","orderListColumns","productListColumns","bannerListColumns"],"sourceRoot":""}