{"version":3,"file":"static/js/1943.f8bec43d.chunk.js","mappings":"sYA6JA,EApJoB,SAAH,GAQV,IAPLA,EAAK,EAALA,MAEAC,GADO,EAAPC,QACO,EAAPD,SACAE,EAAS,EAATA,UAAU,EAAD,EACTC,iBAAAA,OAAgB,OAAO,EACvBC,EAAkB,EAAlBA,mBAIA,GAHe,EAAfC,iBAGkCC,EAAAA,EAAAA,UAAS,KAAG,eAAvCC,EAAS,KAAEC,EAAY,KAC9B,GAAsCF,EAAAA,EAAAA,YAAU,eAAzCG,EAAW,KAAEC,EAAc,KAClC,GAAkCJ,EAAAA,EAAAA,WAAS,GAAM,eAEjD,GAFgB,KAAc,MAEIA,EAAAA,EAAAA,UAAS,KAAG,eAAvCK,EAAS,KAAEC,EAAY,KAC9B,GAA8BN,EAAAA,EAAAA,UAAS,IAAG,eAAnCO,EAAO,KAAEC,EAAU,KAE1B,GAAwCR,EAAAA,EAAAA,WAAS,GAAM,eAAhDS,EAAY,KAAEC,EAAe,MAOpCC,EAAAA,EAAAA,YAAU,WACRT,EAAaT,EACf,GAAG,CAACA,KAEJkB,EAAAA,EAAAA,YAAU,WAEM,IAAD,EAATJ,EACc,QAAhB,EAAIN,EAAU,UAAE,OAAZ,EAAcW,UAChBR,EACEH,EAAUY,QACR,SAAAC,GAAK,OACHC,IAAOD,EAAMF,UAAW,kBAAkBI,OAAO,eAAiBX,GAClEU,IAAOD,EAAMF,UAAW,kBAAkBI,OAAO,eAAiBT,CAAO,KAK/EH,EACEH,EAAUY,QACR,SAAAC,GAAK,OACHC,IAAOD,EAAMG,UAAW,kBAAkBD,OAAO,eAAiBX,GAClEU,IAAOD,EAAMG,UAAW,kBAAkBD,OAAO,eAAiBT,CAAO,KAOjFH,EAAe,GAEnB,GAAG,CAACG,IAWJ,OACE,gCACGV,IACC,UAAC,KAAI,CAACD,UAAW,6CAA6C,WAC5D,SAAC,KAAO,CAACA,UAAU,UAAUsB,MAAM,UAAUC,KAAK,KAAI,oDAGtD,SAAC,KAAI,CAACC,GAAI,EAAE,UACV,SAACC,EAAA,EAAe,CAACzB,UAAU,UAAUU,aAAcA,EAAcE,WAAYA,UAInF,SAACc,EAAA,EAAW,CACV7B,MAAOU,GAAeF,EACtBP,QAASA,GAAW,KACpB6B,cAAY,EACZC,YAAU,EACVC,gBAAiB,CACfC,MAAO,IAETC,eAAgB,CACdC,GAAI,WAENC,eAAa,EACbC,WAjCqB,SAAAC,GACzBrB,EAAgBqB,GAChBjC,EAAmBiC,EACrB,EA+BMC,WAAY,CACVC,OAAO,EACPC,YAAY,EACZC,SAAS,EACTC,MAAO,SACPxC,UAAWA,GAEbyC,cAAe,CACbC,YAAa,SAACP,EAAMQ,GAAK,OACvB,yBACE,kBACEX,GAAE,UAAKW,GACPC,KAAK,eACLC,KAAK,QACLC,QAASX,EAAKY,cAAgBlC,EAAakC,YAC3CC,UAAQ,KAEP,EAEPC,YAAa,gBAAEA,EAAW,EAAXA,YAAW,OACxB,yBACE,SAAC,KAAM,CAAC1B,KAAK,KAAKD,OAAO4B,EAAAA,EAAAA,GAAkBD,GAAa,SACrDA,KAEA,EAEPE,cAAe,SAAAhB,GAAI,OACjB,wBAKGA,EAAKgB,eACH,EAEPC,eAAgB,gBAAEA,EAAc,EAAdA,eAAc,OAAM,eAAIpD,UAAU,iBAAgB,UAAEqD,EAAAA,EAAAA,IAAQD,IAAqB,EACnGE,WAAY,gBAAEA,EAAU,EAAVA,WAAU,OAAM,eAAItD,UAAU,aAAY,UAAEqD,EAAAA,EAAAA,IAAQC,IAAiB,EACnFtC,UAAW,gBAAEA,EAAS,EAATA,UAAS,OAAM,wBAAKG,IAAOH,EAAW,kBAAkBI,OAAO,iBAAqB,EACjGmC,QAAS,gBAAEA,EAAO,EAAPA,QAAO,OAAM,wBAAKpC,IAAOoC,EAAS,kBAAkBnC,OAAO,iBAAqB,GAE7FoC,aAAc,qDACdC,aAAc,OAItB,E,sBCsNA,EAjVmB,SAAH,GAAsC,IAAjCvC,EAAK,EAALA,MAAOwC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAE7BC,GAAWC,EAAAA,EAAAA,MAGjB,GAA0BzD,EAAAA,EAAAA,UAAS,CACjC0D,QAAS,EACTC,YAAa,GACbnB,KAAM,GACNoB,cAAe,GACfV,WAAY,EACZtC,UAAW,GACXuC,QAAS,GACTU,SAAU,GACVC,QAAS,GACTC,aAAc,GACdC,YAAa,GACbC,WAAY,GACZC,SAAU,KACV,eAdKC,EAAK,KAAEC,EAAQ,KAgBtB,GAAsCpE,EAAAA,EAAAA,UAAS,IAAG,eAA3C6C,EAAW,KAAEwB,EAAc,KAClC,GAA4BrE,EAAAA,EAAAA,UAAS,IAAG,eAAjCsE,EAAM,KAAEC,EAAS,KACxB,GAA8BvE,EAAAA,EAAAA,UAAS,IAAG,eAAnCwE,EAAO,KAAEC,EAAU,KAC1B,GAA8CzE,EAAAA,EAAAA,UAAS,IAAG,eAAnD0E,EAAe,KAAE5E,EAAkB,MAG1Ca,EAAAA,EAAAA,YAAU,WACJ2C,GACFc,EAAStD,EAEb,GAAG,CAACwC,IAEJ,IAAMqB,EAAa,WACjBN,EAAe,IACfvE,EAAmB,IACnByD,GAAW,EACb,EAIMqB,EAAmB,yCAAG,WAAOjC,EAAaE,GAAW,2GAE7BgC,EAAAA,EAAAA,QAAkB,CAC1CC,OAAQC,EAAAA,EAAAA,MACRC,IAAKC,EAAAA,EAAAA,yBACLC,KAAM,CACJvC,YAAaA,GAEfwC,MAAO,CACLtC,YAAaA,KAEf,OATS,GAST,SAEM,QAXKuC,EAAG,EAATC,YAWC,IAAHD,GAAAA,EAAKE,UAAU,CAAD,eAKhB,OAJiB,QAAX,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKG,MACP/B,EAAS,UAETgC,MAAS,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,SACZ,0BAIGC,EAAYvB,EAAMD,SAASwB,WAAU,SAAAC,GAAO,OAAIA,EAAQhD,cAAgBA,CAAW,KACrFiD,EAAezB,EAAMD,UACZwB,GAAW7C,YAAcA,EACtCuB,GAAS,SAAAD,GAAK,yBAASA,GAAK,IAAED,SAAU0B,GAAY,IAEpDJ,MAAS,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,SAAQ,kDAEnBD,MAAM,6HAA6B,0DAEtC,gBA/BwB,wCAkCnBK,EAAyB,yCAAG,WAAOlD,EAAaE,EAAayB,GAAM,2GAE3CO,EAAAA,EAAAA,QAAkB,CAC1CC,OAAQC,EAAAA,EAAAA,KACRC,IAAKC,EAAAA,EAAAA,wBACLC,KAAM,CACJvC,YAAaA,GAEf0C,KAAM,CACJxC,YAAaA,EACbyB,OAAQA,KAEV,OAVS,GAUT,SAEM,QAZKc,EAAG,EAATC,YAYC,IAAHD,GAAAA,EAAKE,UAAU,CAAD,eAKhB,OAJiB,QAAX,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKG,MACP/B,EAAS,UAETgC,MAAS,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,SACZ,0BAIGC,EAAYvB,EAAMD,SAASwB,WAAU,SAAAC,GAAO,OAAIA,EAAQhD,cAAgBA,CAAW,KACrFiD,EAAezB,EAAMD,UACZwB,GAAW7C,YAAcA,EACtCuB,GAAS,SAAAD,GAAK,yBAASA,GAAK,IAAED,SAAU0B,GAAY,IAEpDJ,MAAS,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,SAAQ,kDAEnBD,MAAM,6HAA6B,0DAEtC,gBAhC8B,0CAmCzBzF,EAAe,yCAAG,WAAO4C,EAAaI,GAAa,2GAE3B8B,EAAAA,EAAAA,QAAkB,CAC1CC,OAAQC,EAAAA,EAAAA,MACRC,IAAKC,EAAAA,EAAAA,0BACLC,KAAM,CACJvC,YAAaA,GAEf0C,KAAM,CACJtC,cAAeA,KAEjB,OATS,GAST,SAEM,QAXKqC,EAAG,EAATC,YAWC,IAAHD,GAAAA,EAAKE,UAAU,CAAD,eAKhB,OAJiB,QAAX,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKG,MACP/B,EAAS,UAETgC,MAAS,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,SACZ,0BAIGC,EAAYvB,EAAMD,SAASwB,WAAU,SAAAC,GAAO,OAAIA,EAAQhD,cAAgBA,CAAW,KACrFiD,EAAezB,EAAMD,UACZwB,GAAW3C,cAAgBA,EACxCqB,GAAS,SAAAD,GAAK,yBAASA,GAAK,IAAED,SAAU0B,GAAY,IACpD9F,EAAmB8F,EAAaF,IAEhCF,MAAS,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,SAAQ,kDAEnBD,MAAM,6HAA6B,0DAEtC,gBAhCoB,wCAmCfM,EAAiB,SAAAC,GACrB,IAAOjF,EAASiF,EAAEC,OAAXlF,MACPyD,EAAUzD,EACZ,EAkDA,OACE,UAAC,KAAM,CAACK,KAAK,KAAKmC,QAASA,EAAS2C,QAAStB,EAAW,WACtD,SAAC,KAAY,WACX,SAAC,KAAW,uDAEd,UAAC,KAAU,YACT,UAAC,KAAI,CAAC/E,UAAW,MAAM,WACrB,SAACsG,EAAA,EAAU,CAACtE,GAAI,UAAWuE,YAAa,UAAWC,MAAO,KAAMtF,MAAOqD,EAAMT,QAASd,UAAQ,EAACyD,UAAQ,KACvG,SAACH,EAAA,EAAU,CACTtE,GAAI,cACJuE,YAAa,GACbC,MAAO,2BACPtF,MAAOqD,EAAMR,YACbf,UAAQ,EACRyD,UAAQ,QAGZ,UAAC,KAAI,CAACzG,UAAW,MAAM,WACrB,SAACsG,EAAA,EAAU,CAACtE,GAAI,OAAQuE,YAAa,GAAIC,MAAO,qBAAOtF,MAAOqD,EAAM3B,KAAMI,UAAQ,EAACyD,UAAQ,KAC3F,SAACH,EAAA,EAAU,CAACtE,GAAI,WAAYuE,YAAa,GAAIC,MAAO,qBAAOtF,MAAOqD,EAAMN,SAAUjB,UAAQ,EAACyD,UAAQ,QAErG,UAAC,KAAI,CAACzG,UAAW,MAAM,WACrB,SAACsG,EAAA,EAAU,CACTtE,GAAI,eACJuE,YAAa,GACbC,MAAO,uCACPtF,MAAOqD,EAAMJ,aACbnB,UAAQ,EACRyD,UAAQ,KAEV,SAACH,EAAA,EAAU,CACTtE,GAAI,cACJuE,YAAa,GACbC,MAAO,uCACPtF,MAAOqD,EAAMH,YACbpB,UAAQ,EACRyD,UAAQ,QAGZ,UAAC,KAAI,CAACzG,UAAW,MAAM,WACrB,SAACsG,EAAA,EAAU,CACTtE,GAAI,aACJuE,YAAa,GACbC,MAAO,kCACPtF,MAAOqD,EAAMF,WACbrB,UAAQ,EACRyD,UAAQ,KAEV,SAACH,EAAA,EAAU,CAACtE,GAAI,YAAauE,YAAa,GAAIC,MAAO,qBAAOtF,MAAOqD,EAAMvD,UAAWgC,UAAQ,EAACyD,UAAQ,QAEvG,UAAC,KAAI,CAACzG,UAAW,MAAM,WACrB,SAACsG,EAAA,EAAU,CACTtE,GAAI,gBACJuE,YAAa,GACbC,MAAO,2BACPtF,MAAOqD,EAAMP,cACbhB,UAAQ,EACRyD,UAAQ,KAEV,SAACH,EAAA,EAAU,CAACtE,GAAI,UAAWuE,YAAa,GAAIC,MAAO,qBAAOtF,MAAOqD,EAAMhB,QAASP,UAAQ,EAACyD,UAAQ,QAEnG,SAAC,KAAI,CAACzG,UAAW,MAAM,UACrB,SAACsG,EAAA,EAAU,CACTtE,GAAI,aACJuE,YAAa,GACbC,MAAO,kCACPtF,OAAOmC,EAAAA,EAAAA,IAAQkB,EAAMjB,YACrBN,UAAQ,EACRyD,UAAQ,OAGZ,SAAC,KAAI,CAACzG,UAAW,MAAM,UACrB,SAACsG,EAAA,EAAU,CAACtE,GAAI,UAAWuE,YAAa,GAAIC,MAAO,eAAMtF,MAAOqD,EAAML,QAASlB,UAAQ,EAACyD,UAAQ,OAElG,mBACA,SAAC,EAAW,CACV5G,MAAO0E,EAAMD,SACbxE,QAAS4G,EAAAA,GACTC,mBAAmB,EACnB1G,kBAAkB,EAClBC,mBA3HsB,SAAAiC,GAC5BjC,EAAmBiC,EACrB,EA0HQhC,gBAAiBA,EACjBH,UAAW,cAEb,iBAAKA,UAAW,wCAAwC,WACtD,UAAC,KAAW,CAACkB,MAAO+B,EAAajD,UAAU,0BAA0BuB,KAAK,KAAKqF,SArI7D,SAAAT,GACxB,IAAOjF,EAASiF,EAAEC,OAAXlF,MACPuD,EAAevD,EACjB,EAkImH,WACzG,uEACA,mBAAQA,MAAM,4BAAO,wCACrB,mBAAQA,MAAM,4BAAO,wCACrB,mBAAQA,MAAM,kCAAQ,8CACtB,mBAAQA,MAAM,qBAAK,iCACnB,mBAAQA,MAAM,4BAAO,wCACrB,mBAAQA,MAAM,4BAAO,wCACrB,mBAAQA,MAAM,4BAAO,2CAEvB,SAAC,KAAO,CAAClB,UAAU,UAAUsB,MAAM,UAAUC,KAAK,KAAKxB,QAhIrC,WACxB,OAAKkD,EACA6B,EAAgB/B,aAEjB8D,OAAOC,QAAQ,wFACG,8BAAhB7D,GAA2C,8BAAhBA,EAC7BgD,EAA0BnB,EAAgB/B,YAAaE,EAAayB,GAEpEM,EAAoBF,EAAgB/B,YAAaE,IAGrDwB,EAAe,SACfE,EAAU,KAV+BiB,MAAM,wEADtBA,MAAM,uEAYjC,EAmH0F,oDAGlF,SAAC,KAAU,CACT5F,UAAU,2BACVuG,YAAY,wCACZhF,KAAK,KACLqF,SA7IY,SAAAT,GACpB,IAAOjF,EAASiF,EAAEC,OAAXlF,MACP2D,EAAW3D,EACb,KA4IQ,SAAC,KAAO,CAAClB,UAAU,UAAUsB,MAAM,UAAUC,KAAK,KAAKxB,QA1HpC,WACzB,OAAK6E,EACkB,KAAnBA,EAAQmC,OAAsBnB,MAAM,wFACnCd,EAAgB/B,iBAErB5C,EAAgB2E,EAAgB/B,YAAa6B,GAFJgB,MAAM,wEAF1BA,MAAM,uEAK7B,EAoH2F,uCAGnF,SAAC,KAAO,CAACtE,MAAM,UAAUC,KAAK,KAAKxB,QApHjB,WACxB,GAAmB,OAAf+E,QAAe,IAAfA,GAAAA,EAAiB3B,cAAe,CAClC,IAAOA,EAAiB2B,EAAjB3B,cACP0D,OAAOG,KAAK,6CAA+C7D,EAC7D,MACE0D,OAAOG,KAAK,+CAEhB,EA6GsE,yCAI/C,8BAAhB/D,IACC,SAAC,KAAa,CACZjB,GAAG,SACHuE,YAAa,wEACbU,KAAK,IACL/F,MAAOwD,EACPkC,SAAUV,IAGG,8BAAhBjD,IACC,SAAC,KAAa,CACZjB,GAAG,SACHuE,YAAa,wEACbU,KAAK,IACL/F,MAAOwD,EACPkC,SAAUV,QAIhB,SAAC,KAAY,WACX,SAAC,KAAO,CAAC5E,MAAM,YAAYvB,QAASgF,EAAW,8BAMvD,E,sBC1QA,EA9EkB,WAEhB,IAAMnB,GAAWC,EAAAA,EAAAA,MAGjB,GAAkCzD,EAAAA,EAAAA,UAAS,IAAG,eAAvC8G,EAAS,KAAEC,EAAY,KAC9B,GAAwC/G,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7CS,EAAY,KAAEC,EAAe,KACpC,GAAkCV,EAAAA,EAAAA,WAAS,GAAM,eAA1CgH,EAAS,KAAEC,EAAY,KAGxBC,EAAmB,yCAAG,WAAMrE,GAAW,uGAEfgC,EAAAA,EAAAA,QAAkB,CAC1CC,OAAQC,EAAAA,EAAAA,IACRC,IAAKC,EAAAA,EAAAA,gBACLE,MAAO,CACLtC,YAAaA,GAAe,MAE9B,OANS,GAMT,SAEM,QARKuC,EAAG,EAATC,YAQC,IAAHD,GAAAA,EAAKE,aAAa6B,EAAAA,EAAAA,IAAW,OAAH/B,QAAG,IAAHA,OAAG,EAAHA,EAAKgC,QAAO,gBAMxC,OALDC,QAAQC,IAAI,2BACM,QAAX,OAAHlC,QAAG,IAAHA,OAAG,EAAHA,EAAKG,MACP/B,EAAS,UAETgC,MAAS,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,SACZ,0BAGHsB,EAAa3B,EAAIgC,OAAOG,WAAU,kDAElCF,QAAQC,IAAI,EAAD,IACX9B,MAAM,6HAA6B,0DAEtC,gBAxBwB,uCA2BzB7E,EAAAA,EAAAA,YAAU,WACRuG,GACF,GAAG,IAUH,OACE,UAAC,KAAI,YACH,SAACM,EAAA,EAAU,CAACC,MAAM,+BAClB,SAAC,KAAI,CAACrG,GAAI,GAAG,UACX,SAAC,KAAK,CAACxB,UAAU,OAAM,UACrB,SAAC,KAAS,WACR,SAAC8H,EAAA,EAAc,CACbjI,MAAOqH,EACPnH,QAbsB,SAAAoC,GAChCrB,EAAgBqB,GAChBkF,GAAcD,EAChB,EAWYtH,QAASiI,EAAAA,GACT/H,UAAW,YACXsH,oBAAqBA,EACrBU,YAAU,EACVC,YAAU,WAKlB,SAAC,EAAU,CACT/G,MAAOL,EACP6C,QAAS0D,EACTzD,WAAY0D,EACZC,oBAAqBA,EACrBtE,UAAQ,MAIhB,C","sources":["components/list/mall/ProductList.js","components/Modal/officialMall/OrderModal.js","pages/officialMall/order/OrderList.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {CSmartTable} from '../../custom/smart-table/CSmartTable'\nimport PropTypes from 'prop-types'\nimport {CBadge, CButton, CCol, CFormInput, CRow} from '@coreui/react'\nimport RangeDatePicker from '../../common/RangeDatePicker'\nimport moment from 'moment'\nimport {isPrice} from '../../../utils/utility'\nimport {getMallBadgeColor} from '../../../utils/badge/officalMall/Badge'\n\nconst ProductList = ({\n  items, // 리스트 아이템\n  onClick, // 리스트 클릭 이벤트 ex) Modal\n  columns, // 리스트의 헤더\n  className, // 리스트의 클레스 네임\n  datePickerHidden = true, // 기간선택 데이터 피커 출력 유무\n  setSelectedProduct, // radioButton 함수\n  onUpdateInvoice, // 송장번호 등록\n}) => {\n  // Local state 선언\n  const [listItems, setListItems] = useState([])\n  const [filterItems, setFilterItems] = useState()\n  const [showModal, setShowModal] = useState(false)\n\n  const [startDate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n\n  const [selectedItem, setSelectedItem] = useState(false)\n\n  // 함수 선언\n  const modalOnClick = () => {\n    setShowModal(!showModal)\n  }\n\n  useEffect(() => {\n    setListItems(items)\n  }, [items])\n\n  useEffect(() => {\n    // data picker 에 선택된 값\n    if (endDate) {\n      if (listItems[0]?.orderDate) {\n        setFilterItems(\n          listItems.filter(\n            value =>\n              moment(value.orderDate, 'YYYYMMDDHHmmss').format('YYYY-MM-DD') >= startDate &&\n              moment(value.orderDate, 'YYYYMMDDHHmmss').format('YYYY-MM-DD') <= endDate,\n          ),\n        )\n      } else {\n        // default 는 createdAt 그 외 하고 싶은 값은 위에 작성\n        setFilterItems(\n          listItems.filter(\n            value =>\n              moment(value.createdAt, 'YYYYMMDDHHmmss').format('YYYY-MM-DD') >= startDate &&\n              moment(value.createdAt, 'YYYYMMDDHHmmss').format('YYYY-MM-DD') <= endDate,\n          ),\n        )\n      }\n\n      // 생성일로 필터\n    } else {\n      setFilterItems('')\n    }\n  }, [endDate])\n\n  const onClickRadioButton = item => {\n    setSelectedItem(item)\n    setSelectedProduct(item)\n  }\n\n  const onClickStop = e => {\n    e.stopPropagation()\n  }\n\n  return (\n    <>\n      {datePickerHidden && (\n        <CRow className={'d-md-flex justify-content-md-end pt-2 pb-2'}>\n          <CButton className='me-md-2' color='success' size='sm'>\n            주문상태 변경\n          </CButton>\n          <CCol xs={4}>\n            <RangeDatePicker className='me-md-2' setStartDate={setStartDate} setEndDate={setEndDate} />\n          </CCol>\n        </CRow>\n      )}\n      <CSmartTable\n        items={filterItems || listItems}\n        columns={columns || null}\n        columnSorter\n        pagination\n        paginationProps={{\n          limit: 10,\n        }}\n        tableHeadProps={{\n          id: 'smTable',\n        }}\n        clickableRows\n        onRowClick={onClickRadioButton}\n        tableProps={{\n          hover: true,\n          responsive: true,\n          striped: true,\n          align: 'middle',\n          className: className,\n        }}\n        scopedColumns={{\n          radioButton: (item, index) => (\n            <td>\n              <input\n                id={`${index}`}\n                name='select-radio'\n                type='radio'\n                checked={item.orderItemId === selectedItem.orderItemId}\n                readOnly\n              />\n            </td>\n          ),\n          orderStatus: ({orderStatus}) => (\n            <td>\n              <CBadge size='sm' color={getMallBadgeColor(orderStatus)}>\n                {orderStatus}\n              </CBadge>\n            </td>\n          ),\n          invoiceNumber: item => (\n            <td>\n              {/* <CFormInput id={`${index}`} className='me-md-2' size='sm' onClick={e => setSelectedProduct(e, item)} />\n              <CButton id={`${index}`} className='invoiceNumberBtn' color='warning' size='sm' onClick={onUpdateInvoice}>\n                등록\n              </CButton> */}\n              {item.invoiceNumber}\n            </td>\n          ),\n          orderItemPrice: ({orderItemPrice}) => <td className='orderItemPrice'>{isPrice(orderItemPrice)}</td>,\n          totalPrice: ({totalPrice}) => <td className='totalPrice'>{isPrice(totalPrice)}</td>,\n          orderDate: ({orderDate}) => <td>{moment(orderDate, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          payDate: ({payDate}) => <td>{moment(payDate, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n        }}\n        noItemsLabel={'데이터가 없습니다.'}\n        itemsPerPage={20}\n      />\n    </>\n  )\n}\n\nProductList.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n  selectedOptions: PropTypes.object,\n  datePickerHidden: PropTypes.bool,\n  itemPerPageHidden: PropTypes.bool,\n}\n\nexport default ProductList\n","import {\n  CButton,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport {useEffect, useState} from 'react'\nimport {isPrice} from '../../../utils/utility'\nimport {productListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ProductList from '../../list/mall/ProductList'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\n\nconst OrderModal = ({value, visible, setVisible}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [order, setOrder] = useState({\n    orderId: 0,\n    orderNumber: '',\n    name: '',\n    paymentMethod: '',\n    totalPrice: 0,\n    orderDate: '',\n    payDate: '',\n    receiver: '',\n    address: '',\n    normalNumber: '',\n    phoneNumber: '',\n    totalCount: '',\n    subInfos: [],\n  })\n\n  const [orderStatus, setOrderStatus] = useState('')\n  const [reason, setReason] = useState('')\n  const [invoice, setInvoice] = useState('')\n  const [selectedProduct, setSelectedProduct] = useState('')\n\n  // Life Cycle 선언\n  useEffect(() => {\n    if (visible) {\n      setOrder(value)\n    }\n  }, [visible])\n\n  const closeModal = () => {\n    setOrderStatus('')\n    setSelectedProduct('')\n    setVisible(false)\n  }\n\n  // 함수 선언\n  // Update OrderStatus\n  const onUpdateOrderStatus = async (orderItemId, orderStatus) => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_ORDERS_STATUS,\n        path: {\n          orderItemId: orderItemId,\n        },\n        query: {\n          orderStatus: orderStatus,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n\n      const findIndex = order.subInfos.findIndex(product => product.orderItemId === orderItemId)\n      let tempSubInfos = order.subInfos\n      tempSubInfos[findIndex].orderStatus = orderStatus\n      setOrder(order => ({...order, subInfos: tempSubInfos}))\n\n      alert(res?.message)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 제품 상태 변경 API\n  const onUpdateOrderStatusReason = async (orderItemId, orderStatus, reason) => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.POST,\n        url: EndPoint.POST_MALL_ORDERS_STATUS,\n        path: {\n          orderItemId: orderItemId,\n        },\n        data: {\n          orderStatus: orderStatus,\n          reason: reason,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n\n      const findIndex = order.subInfos.findIndex(product => product.orderItemId === orderItemId)\n      let tempSubInfos = order.subInfos\n      tempSubInfos[findIndex].orderStatus = orderStatus\n      setOrder(order => ({...order, subInfos: tempSubInfos}))\n\n      alert(res?.message)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 제품 송장번호 등록\n  const onUpdateInvoice = async (orderItemId, invoiceNumber) => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_ORDERS_INVOICE,\n        path: {\n          orderItemId: orderItemId,\n        },\n        data: {\n          invoiceNumber: invoiceNumber,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n\n      const findIndex = order.subInfos.findIndex(product => product.orderItemId === orderItemId)\n      let tempSubInfos = order.subInfos\n      tempSubInfos[findIndex].invoiceNumber = invoiceNumber\n      setOrder(order => ({...order, subInfos: tempSubInfos}))\n      setSelectedProduct(tempSubInfos[findIndex])\n\n      alert(res?.message)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 취소 사유 값 저장\n  const onChangeReason = e => {\n    const {value} = e.target\n    setReason(value)\n  }\n  // 주문 상태 값 저장\n  const orderStatusChange = e => {\n    const {value} = e.target\n    setOrderStatus(value)\n  }\n  // 주문 상품 row 저장\n  const handleSelectedProduct = item => {\n    setSelectedProduct(item)\n  }\n  // 주문 상태 값 저장\n  const invoiceChange = e => {\n    const {value} = e.target\n    setInvoice(value)\n  }\n\n  // 주문상태 변경 함수\n  const handleOrderStatus = () => {\n    if (!orderStatus) return alert('주문상태를 선택해주세요.')\n    if (!selectedProduct.orderItemId) return alert('주문상품을 선택해주세요.')\n\n    if (window.confirm('주문 상태를 변경 하시겠습니까?')) {\n      if (orderStatus === '취소 요청' || orderStatus === '교환 요청') {\n        onUpdateOrderStatusReason(selectedProduct.orderItemId, orderStatus, reason)\n      } else {\n        onUpdateOrderStatus(selectedProduct.orderItemId, orderStatus)\n      }\n    }\n    setOrderStatus('')\n    setReason('')\n  }\n  // 주문 상태 값 저장\n  const handleOrderInvoice = () => {\n    if (!invoice) return alert('송장번호를 입력해주세요.')\n    if (invoice.length !== 11) return alert('송장번호를 확인해주세요.(11자리)')\n    if (!selectedProduct.orderItemId) return alert('주문상품을 선택해주세요.')\n\n    onUpdateInvoice(selectedProduct.orderItemId, invoice)\n  }\n\n  // 송장조회\n  const handleInvoicCheck = () => {\n    if (selectedProduct?.invoiceNumber) {\n      const {invoiceNumber} = selectedProduct\n      window.open('https://www.ilogen.com/web/personal/trace/' + invoiceNumber)\n    } else {\n      window.open('https://www.ilogen.com/web/personal/tkSearch')\n    }\n  }\n\n  return (\n    <CModal size='xl' visible={visible} onClose={closeModal}>\n      <CModalHeader>\n        <CModalTitle>주문 상세정보</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput id={'orderId'} placeholder={'User Id'} label={'No'} value={order.orderId} readOnly disabled />\n          <ModalInput\n            id={'orderNumber'}\n            placeholder={''}\n            label={'주문번호'}\n            value={order.orderNumber}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput id={'name'} placeholder={''} label={'주문자'} value={order.name} readOnly disabled />\n          <ModalInput id={'receiver'} placeholder={''} label={'수취인'} value={order.receiver} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'normalNumber'}\n            placeholder={''}\n            label={'일반전화번호'}\n            value={order.normalNumber}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'phoneNumber'}\n            placeholder={''}\n            label={'휴대전화번호'}\n            value={order.phoneNumber}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'totalCount'}\n            placeholder={''}\n            label={'주문 총수량'}\n            value={order.totalCount}\n            readOnly\n            disabled\n          />\n          <ModalInput id={'orderDate'} placeholder={''} label={'주문일'} value={order.orderDate} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'paymentMethod'}\n            placeholder={''}\n            label={'결제수단'}\n            value={order.paymentMethod}\n            readOnly\n            disabled\n          />\n          <ModalInput id={'payDate'} placeholder={''} label={'결제일'} value={order.payDate} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'totalPrice'}\n            placeholder={''}\n            label={'총 결제금액'}\n            value={isPrice(order.totalPrice)}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput id={'address'} placeholder={''} label={'주소'} value={order.address} readOnly disabled />\n        </CRow>\n        <br />\n        <ProductList\n          items={order.subInfos}\n          columns={productListColumns}\n          searchInputHidden={false}\n          datePickerHidden={false}\n          setSelectedProduct={handleSelectedProduct}\n          onUpdateInvoice={onUpdateInvoice}\n          className={'subInfos'}\n        />\n        <div className={'pb-2 d-md-flex justify-content-md-end'}>\n          <CFormSelect value={orderStatus} className='me-md-2 orderStatusForm' size='sm' onChange={orderStatusChange}>\n            <option>주문상태 선택</option>\n            <option value='결제 대기'>결제 대기</option>\n            <option value='결제 완료'>결제 완료</option>\n            <option value='배송 준비중'>배송 준비중</option>\n            <option value='배송중'>배송중</option>\n            <option value='배송 완료'>배송 완료</option>\n            <option value='취소 요청'>취소 요청</option>\n            <option value='교환 요청'>교환 요청</option>\n          </CFormSelect>\n          <CButton className='me-md-2' color='success' size='sm' onClick={handleOrderStatus}>\n            주문상태 변경\n          </CButton>\n          <CFormInput\n            className='me-md-2 orderInvoiceForm'\n            placeholder='송장번호 입력'\n            size='sm'\n            onChange={invoiceChange}\n          />\n          <CButton className='me-md-2' color='warning' size='sm' onClick={handleOrderInvoice}>\n            송장등록\n          </CButton>\n          <CButton color='warning' size='sm' onClick={handleInvoicCheck}>\n            송장조회\n          </CButton>\n        </div>\n        {orderStatus === '취소 요청' && (\n          <CFormTextarea\n            id='reason'\n            placeholder={'취소 사유를 입력해 주세요'}\n            rows='3'\n            value={reason}\n            onChange={onChangeReason}\n          />\n        )}\n        {orderStatus === '교환 요청' && (\n          <CFormTextarea\n            id='reason'\n            placeholder={'교환 사유를 입력해 주세요'}\n            rows='3'\n            value={reason}\n            onChange={onChangeReason}\n          />\n        )}\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={closeModal}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default OrderModal\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCol, CFormLabel, CFormSelect, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport OrderModal from '../../../components/Modal/officialMall/OrderModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {orderListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport OrderTableList from '../../../components/list/mall/OrderTableList'\n\nconst OrderList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [orderList, setOrderList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n\n  // API 통신 함수\n  const onLoadMallorderList = async orderStatus => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_ORDERS,\n        query: {\n          orderStatus: orderStatus || '',\n        },\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('loadMallorderList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setOrderList(res.result.responses)\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallorderList()\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowUserDetailModal = item => {\n    setSelectedItem(item)\n    setShowModal(!showModal)\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='주문 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <OrderTableList\n              items={orderList}\n              onClick={handleShowUserDetailModal}\n              columns={orderListColumns}\n              className={'orderList'}\n              onLoadMallorderList={onLoadMallorderList}\n              datePicker\n              dataSearch\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <OrderModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        onLoadMallorderList={onLoadMallorderList}\n        readOnly\n      />\n    </CRow>\n  )\n}\n\nexport default OrderList\n"],"names":["items","columns","onClick","className","datePickerHidden","setSelectedProduct","onUpdateInvoice","useState","listItems","setListItems","filterItems","setFilterItems","startDate","setStartDate","endDate","setEndDate","selectedItem","setSelectedItem","useEffect","orderDate","filter","value","moment","format","createdAt","color","size","xs","RangeDatePicker","CSmartTable","columnSorter","pagination","paginationProps","limit","tableHeadProps","id","clickableRows","onRowClick","item","tableProps","hover","responsive","striped","align","scopedColumns","radioButton","index","name","type","checked","orderItemId","readOnly","orderStatus","getMallBadgeColor","invoiceNumber","orderItemPrice","isPrice","totalPrice","payDate","noItemsLabel","itemsPerPage","visible","setVisible","navigate","useNavigate","orderId","orderNumber","paymentMethod","receiver","address","normalNumber","phoneNumber","totalCount","subInfos","order","setOrder","setOrderStatus","reason","setReason","invoice","setInvoice","selectedProduct","closeModal","onUpdateOrderStatus","ApiConfig","method","HttpMethod","url","EndPoint","path","query","res","data","isSuccess","code","alert","message","findIndex","product","tempSubInfos","onUpdateOrderStatusReason","onChangeReason","e","target","onClose","ModalInput","placeholder","label","disabled","productListColumns","searchInputHidden","onChange","window","confirm","length","open","rows","orderList","setOrderList","showModal","setShowModal","onLoadMallorderList","isEmpty","result","console","log","responses","PageHeader","title","OrderTableList","orderListColumns","datePicker","dataSearch"],"sourceRoot":""}