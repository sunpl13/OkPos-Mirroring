{"version":3,"file":"static/js/805.3333394b.chunk.js","mappings":"uTA+EA,UArEiB,WACf,OAA0BA,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAwCF,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7CG,EAAY,KAAEC,EAAe,KACpC,GAAkCJ,EAAAA,EAAAA,WAAS,GAAM,eAA1CK,EAAS,KAAEC,EAAY,KAExBC,EAAQ,yCAAG,sHAEQC,EAAAA,EAAAA,QAAkB,CACrCC,OAAQC,EAAAA,EAAAA,IACRC,IAAI,GAAD,OAAKC,EAAAA,EAAAA,kBAA0B,SAAS,KAC3C,OAHS,GAGT,UAHKC,EAAI,EAAJA,MAIGC,aAAaC,EAAAA,EAAAA,IAAY,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,QAAO,iDAGzB,OAAX,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,MACRf,EAAoB,QAAZ,EAACW,EAAKG,cAAM,aAAX,EAAaE,0BAEtBC,MAAU,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,SACb,kDAEDC,QAAQC,IAAI,EAAD,IAAO,0DAErB,kBAjBa,oCAmBdC,EAAAA,EAAAA,YAAU,WACRhB,GACF,GAAG,IAGH,IAAMiB,EAAyB,yCAAG,8FACR,OADgBC,EAAE,EAAFA,GACxCnB,GAAcD,GAAU,kBAEDG,EAAAA,EAAAA,QAAkB,CACrCC,OAAQC,EAAAA,EAAAA,IACRC,IAAI,GAAD,OAAKC,EAAAA,EAAAA,kBAA0B,YAAIa,KACtC,OAHS,GAGT,UAHKZ,EAAI,EAAJA,MAIGC,aAAaC,EAAAA,EAAAA,IAAY,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,QAAO,iDAGzB,OAAX,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,MACRb,EAAgBS,EAAKG,QAErBG,MAAU,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,SACb,kDAEDC,QAAQC,IAAI,EAAD,IAAO,0DAErB,gBAlB8B,sCAoB/B,OACE,UAAC,KAAI,YACH,SAAC,IAAU,CAACI,MAAM,qCAClB,SAAC,KAAI,CAACC,GAAI,GAAG,UACX,SAAC,KAAK,CAACC,UAAU,OAAM,UACrB,SAAC,KAAS,WACR,SAAC,IAAY,CACX3B,MAAOA,EACP4B,QAASL,EACTM,QAASC,EAAAA,GACTH,UAAW,oBAKnB,SAAC,IAAe,CAACI,MAAO7B,EAAc8B,QAAS5B,EAAW6B,WAAY5B,EAAc6B,UAAQ,MAGlG,C","sources":["pages/partnerCenter/users/Userlist.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport UserDetailModal from '../../../components/Modal/partnerCenter/users/UserDetailModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {userListColumns} from '../../../utils/columns/partnerCenter/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\n\nconst Userlist = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n\n  const getUsers = async () => {\n    try {\n      const {data} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: `${EndPoint.GET_PARTNER_USERS}?page=${1}`,\n      })\n      if (!data.isSuccess || isEmpty(data?.result)) {\n        return\n      }\n      if (data?.code === 1000) {\n        setItems(data.result?.adminUserInfoPartnerDTOs)\n      } else {\n        alert(data?.message)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    getUsers()\n  }, [])\n\n  /** Open Modal*/\n  const handleShowUserDetailModal = async ({id}) => {\n    setShowModal(!showModal)\n    try {\n      const {data} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: `${EndPoint.GET_PARTNER_USERS}/${id}`,\n      })\n      if (!data.isSuccess || isEmpty(data?.result)) {\n        return\n      }\n      if (data?.code === 1000) {\n        setSelectedItem(data.result)\n      } else {\n        alert(data?.message)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='회원 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowUserDetailModal}\n              columns={userListColumns}\n              className={'userList'}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <UserDetailModal value={selectedItem} visible={showModal} setVisible={setShowModal} readOnly />\n    </CRow>\n  )\n}\n\nexport default Userlist\n"],"names":["useState","items","setItems","selectedItem","setSelectedItem","showModal","setShowModal","getUsers","ApiConfig","method","HttpMethod","url","EndPoint","data","isSuccess","isEmpty","result","code","adminUserInfoPartnerDTOs","alert","message","console","log","useEffect","handleShowUserDetailModal","id","title","xs","className","onClick","columns","userListColumns","value","visible","setVisible","readOnly"],"sourceRoot":""}