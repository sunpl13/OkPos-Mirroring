{"version":3,"file":"static/js/4066.45010531.chunk.js","mappings":"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","sources":["components/list/partnerCenter/ManagementTarget.js","components/list/partnerCenter/orderList.js","components/Modal/partnerCenter/order/MaintenancesDetailModal.js","pages/partnerCenter/order/MaintenancesList.js","utils/columns/partnerCenter/SelectCategoryOptions.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  CCol,\n  CFormInput,\n  CFormLabel,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport styled from 'styled-components'\n\nconst ManagementTarget = ({items, label}) => {\n  const [listItems, setListItems] = useState([])\n  useEffect(() => {\n    setListItems(items)\n    console.log(items)\n  }, [items])\n\n  return (\n    <CCol>\n      <CFormLabel className='col-form-label'>\n        <span>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className={'searchInput pb-3'}>\n        <CFormInput type='text' placeholder='주력 H/W 모델명을 입력해 주세요' aria-label='Disabled input' />\n      </CCol>\n      <TableContainer>\n        <CustomCTable>\n          <CTableHead id='head' color='light'>\n            <CTableRow>\n              <CTableHeaderCell style={{width: '15%'}} key={'a'}>\n                구분\n              </CTableHeaderCell>\n              <CTableHeaderCell key={'b'}>제조사/모델명</CTableHeaderCell>\n              <CTableHeaderCell style={{width: '15%'}} key={'c'}>\n                구분\n              </CTableHeaderCell>\n              <CTableHeaderCell key={'d'}>제조사/모델명</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            <CTableRow>\n              <CTableDataCell className={'rowTitle'}>POS</CTableDataCell>\n              <CTableDataCell>\n                {listItems?.length !== 0 ? (\n                  listItems?.map((value, index) => {\n                    if (value.category === 'POS') {\n                      return (\n                        <CCol key={index}>\n                          {value?.hardware} / {value?.modelName}\n                        </CCol>\n                      )\n                    }\n                    return null\n                  })\n                ) : (\n                  <CCol></CCol>\n                )}\n              </CTableDataCell>\n              <CTableDataCell className={'rowTitle'}>KIOSK</CTableDataCell>\n              <CTableDataCell>\n                {listItems?.length !== 0 ? (\n                  listItems?.map((value, index) => {\n                    if (value.category === 'KIOSK') {\n                      return (\n                        <CCol key={index}>\n                          {value?.hardware} / {value?.modelName}\n                        </CCol>\n                      )\n                    }\n                    return null\n                  })\n                ) : (\n                  <CCol></CCol>\n                )}\n              </CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CustomCTable>\n      </TableContainer>\n    </CCol>\n  )\n}\n\nManagementTarget.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n}\n\nexport default ManagementTarget\n\nconst CustomCTable = styled(CTable)`\n  text-align: center;\n  width: 100%;\n  & th {\n    padding: 0.5rem 0;\n  }\n  & .rowTitle {\n    display: table-cell;\n    vertical-align: middle;\n    background: #ebedef;\n  }\n  & thead#head {\n    background: #ebedef;\n  }\n  & tbody td {\n    padding: 0.5rem;\n    & .col {\n      padding: 0.5rem;\n    }\n  }\n`\nconst TableContainer = styled(CCol)`\n  overflow-x: auto;\n`\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {CSmartTable} from '../../custom/smart-table/CSmartTable'\nimport {CFormLabel, CFormSelect} from '@coreui/react'\nimport styled from 'styled-components'\nimport {\n  orderCategorySelectedOptions,\n  orderVanSelectedOptions,\n} from '../../../utils/columns/partnerCenter/SelectCategoryOptions'\n\nconst OrderList = ({\n  className,\n  items, // 리스트 아이템\n  onClick, // 리스트 클릭 이벤트 ex) Modal\n  columns, // 리스트의 헤더\n  selectedOptions, // 리스트의 selectBox 옵션\n  func, //보낼 함수\n  title, // 리스트 제목\n  vanOnChange,\n  readOnly,\n}) => {\n  // Local state 선언\n  const [listItems, setListItems] = useState([])\n\n  useEffect(() => {\n    setListItems(items)\n  }, [items])\n\n  return (\n    <>\n      <CFormLabel>\n        <CFormLabel className='col-form-label'>\n          <span>{title || ''}</span>\n        </CFormLabel>\n      </CFormLabel>\n      <CSmartTable\n        items={listItems || []}\n        columns={columns || null}\n        paginationProps={{\n          limit: 10,\n        }}\n        onRowClick={onClick}\n        tableProps={{\n          responsive: true,\n          align: 'middle',\n          className: className,\n          id: 'orderTable',\n        }}\n        tableHeadProps={{\n          id: 'orderTable',\n        }}\n        scopedColumns={{\n          catcount: ({catcount}) => <td>{catcount || '0'}</td>,\n          poscount: ({poscount}) => <td>{poscount || '0'}</td>,\n          kioskcount: ({kioskcount}) => <td>{kioskcount || '0'}</td>,\n          sum: ({sum}) => <td>{sum || '0'}</td>,\n          note: ({note}) => <td>{note || ''}</td>,\n          category: item => (\n            <td>\n              <OrderSelected\n                id={'category'}\n                value={item.category}\n                options={orderCategorySelectedOptions}\n                onChange={event => vanOnChange(item, event)}\n                readOnly={readOnly}\n                disabled={readOnly}\n              />\n            </td>\n          ),\n          name: ({name}) => <td>{name}</td>,\n          van: item => (\n            <td>\n              <OrderSelected\n                id={'van'}\n                value={item?.van}\n                options={orderVanSelectedOptions}\n                onChange={event => vanOnChange(item, event)}\n                readOnly={readOnly}\n                disabled={readOnly}\n              />\n            </td>\n          ),\n        }}\n      />\n    </>\n  )\n}\n\nOrderList.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n  selectedOptions: PropTypes.object,\n  datePickerHidden: PropTypes.bool,\n  itemPerPageHidden: PropTypes.bool,\n}\n\nexport default OrderList\n\nconst OrderSelected = styled(CFormSelect)`\n  border: none;\n`\n","import {CRow} from '@coreui/react'\nimport ModalInput from '../../../forms/inputForm/ModalInput'\nimport {\n  generalListApplicationColumns,\n  managementTargetColumns,\n  solutionListColumns,\n} from '../../../../utils/columns/partnerCenter/Columns'\nimport ManagementTarget from '../../../list/partnerCenter/ManagementTarget'\nimport ModalQuillEditor from '../../../forms/inputForm/ModalQuillEditor'\nimport {useEffect, useState} from 'react'\nimport OrderList from '../../../list/partnerCenter/orderList'\nimport DetailModalEditModeTemplate from '../DetailModalEditModeTemplate'\nimport {deletedInfo} from '../../../function/partnerCenter/ApiModules'\nimport {EndPoint} from '../../../../dataManager/apiMapper'\n\nconst MaintenancesDetailModal = ({value, visible, setVisible, editMode, setEditMode, onClose, getList}) => {\n  const {\n    id, // 리스트 id\n    maintenanceNum, // 발주 번호\n    certificateNum, // 사업자 번호\n    representativeName, // 대표자 명\n    businessName, // 상호명\n    createdAt, // 주문일자\n    mobilePhoneNum, // 휴대전화 번호\n    phoneNum, // 전화번호\n    email, // 이메일\n    address, // 사업장 주소\n    maintenanceCategory, // 유지보수 신청 유형 (원격 서비스 / 방문 서비스 A / 방문 서비스 B / 방문 서비스 C / 통합 서비스)\n    adminMaintenanceHardwareDTOs, // H/W 현황 리스트\n    adminMaintenanceSolutionDTOs, // 주력 솔루션 및 VAN사 리스트\n    adminMaintenanceStoreDTOs, // 유지보수 신청 가맹점 수\n    operationalProcesses, // 현장 운영중인 엄무 프로세스\n  } = value\n  const [editor, setEditor] = useState('')\n  const [solutionList, setSolutionList] = useState([])\n  const [totalItems, setTotalItems] = useState({\n    region: '전체 합계',\n    catcount: 0,\n    poscount: 0,\n    kioskcount: 0,\n    sum: 0,\n    note: '',\n  })\n  const [vanItems, setVanItems] = useState({\n    id: '기타',\n    category: '',\n    name: '',\n    van: '',\n  })\n  const upDate = () => {\n    if (window.confirm('유지보수 신청을 수정 하시겟습니까?')) {\n      if (\n        solutionList?.map(item => {\n          return !(!item?.category || !item?.van)\n        })\n      )\n        return alert('주력 솔루션 및 VAN사 를 선택해 주세요')\n      const json = JSON.stringify(\n        solutionList?.map(item => {\n          return {\n            id: item?.id,\n            category: item?.category,\n            van: item?.van,\n          }\n        }),\n      )\n      deletedInfo(EndPoint.PARTNER_MAINTENANCES, id, json)\n        .then(res => {\n          setEditMode(!editMode)\n          getList()\n          return alert(res)\n        })\n        .catch(err => console.log(err))\n    }\n  }\n\n  const vanOnChange = (item, {target: {id, value}}) => {\n    setSolutionList(van =>\n      van.map(state => {\n        if (state.id === item.id) {\n          return {\n            ...state,\n            [id]: value,\n          }\n        } else {\n          return state\n        }\n      }),\n    )\n  }\n  useEffect(() => {\n    setSolutionList(adminMaintenanceSolutionDTOs || [])\n    setTotalItems({region: '전체 합계', catcount: 0, poscount: 0, kioskcount: 0, sum: 0, note: ''})\n    if (adminMaintenanceStoreDTOs?.length !== 0 && visible) {\n      adminMaintenanceStoreDTOs?.map(value => {\n        setTotalItems(item => ({\n          region: '전체 합계',\n          catcount: (item.catcount += +value?.catcount),\n          poscount: (item.poscount += +value?.poscount),\n          kioskcount: (item.kioskcount += +value?.kioskcount),\n          sum: (item.sum += +value?.sum),\n          note: '',\n        }))\n        return value\n      })\n    } else if (!visible) {\n    }\n  }, [visible, adminMaintenanceStoreDTOs])\n\n  return (\n    <DetailModalEditModeTemplate\n      title={'유지보수 신청 상세'}\n      visible={visible}\n      setVisible={setVisible}\n      editMode={editMode}\n      setEditMode={setEditMode}\n      upDate={upDate}\n      onClose={onClose}\n    >\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'orderNum'}\n          placeholder={'발주 번호'}\n          label={'발주 번호'}\n          value={maintenanceNum}\n          readOnly\n          disabled\n        />\n        <ModalInput\n          id={'businessName'}\n          placeholder={'상호명'}\n          label={'상호명'}\n          value={businessName}\n          readOnly\n          disabled\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'businessNumber'}\n          placeholder={'사업자 번호'}\n          label={'사업자 번호'}\n          value={certificateNum}\n          readOnly\n          disabled\n        />\n        <ModalInput\n          id={'representativeName'}\n          placeholder={'대표자 명'}\n          label={'대표자 명'}\n          value={representativeName}\n          readOnly\n          disabled\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'orderDate'}\n          placeholder={'주문 일자'}\n          label={'주문 일자'}\n          value={createdAt}\n          readOnly\n          disabled\n        />\n        <ModalInput\n          id={'phoneNumber'}\n          placeholder={'휴대전화 번호'}\n          label={'휴대전화 번호'}\n          value={mobilePhoneNum}\n          readOnly\n          disabled\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'phoneNum'}\n          placeholder={'사업장 전화번호'}\n          label={'사업장 전화번호'}\n          value={phoneNum}\n          readOnly\n          disabled\n        />\n        <ModalInput id={'email'} placeholder={'이메일'} label={'이메일'} value={email} readOnly disabled />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'businessAddress'}\n          placeholder={'사업장 주소'}\n          label={'사업장 주소'}\n          value={address}\n          readOnly\n          disabled\n        />\n        <ModalInput\n          id={'maintenanceCategory'}\n          placeholder={'유지보수 신청 유형'}\n          label={'유지보수 신청 유형'}\n          value={maintenanceCategory}\n          readOnly\n          disabled\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <OrderList\n          title={'① 신청 가맹점 수'}\n          items={[...(adminMaintenanceStoreDTOs || []), totalItems] || []}\n          columns={generalListApplicationColumns}\n          className={'orderList'}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <OrderList\n          title={'② 주력 솔루션 및 VAN사'}\n          className={'orderVanList'}\n          items={[...solutionList, vanItems] || []}\n          columns={solutionListColumns}\n          vanOnChange={vanOnChange}\n          readOnly={editMode}\n          disabled={editMode}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ManagementTarget\n          label={'③ 관리 대상 H/W 현황'}\n          columns={managementTargetColumns}\n          items={adminMaintenanceHardwareDTOs}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalQuillEditor\n          label={'④ 현장 운영중인 엄무 프로세스'}\n          value={operationalProcesses}\n          setValue={setEditor}\n          readOnly\n        />\n      </CRow>\n    </DetailModalEditModeTemplate>\n  )\n}\n\nexport default MaintenancesDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {maintenanceApplicationList} from '../../../utils/columns/partnerCenter/Columns'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport MaintenancesDetailModal from '../../../components/Modal/partnerCenter/order/MaintenancesDetailModal'\nimport {getDetailInfo, getListData} from '../../../components/function/partnerCenter/ApiModules'\n\nconst MaintenancesList = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [editCheck, setEditCheck] = useState({})\n  const [editMode, setEditMode] = useState(true)\n  const [showModal, setShowModal] = useState(false)\n\n  // 발주신청 리스트 API\n  const getList = async () => {\n    getListData(EndPoint.PARTNER_MAINTENANCES)\n      .then(res => {\n        setItems(res?.adminMaintenanceDTOs)\n      })\n      .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    getList()\n  }, [])\n\n  // Open Modal\n  const handleShowMaterialDetailModal = async ({id}) => {\n    getDetailInfo(EndPoint.PARTNER_MAINTENANCES, id)\n      .then(res => {\n        setSelectedItem(res)\n        setEditCheck(res)\n      })\n      .catch(err => console.log(err))\n    setShowModal(!showModal)\n  }\n  // Close Modal\n  const handleDetailModalOnClose = () => {\n    if (window.confirm('정말 페이지에서 나가시겠습니까?.\\n\\n지금 페이지를 나가시면 변경사항이 저장되지 않습니다.')) {\n      return setShowModal(false)\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='유지보수 신청 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowMaterialDetailModal}\n              columns={maintenanceApplicationList}\n              className={'userList'}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <MaintenancesDetailModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        editMode={editMode}\n        setEditMode={setEditMode}\n        onClose={handleDetailModalOnClose}\n        getList={getList}\n      />\n    </CRow>\n  )\n}\n\nexport default MaintenancesList\n","exports.noticeOptions = [\n  {key: '프로그램', value: '프로그램'}, // PROGRAM\n  {key: '드라이버', value: '드라이버'}, // DRIVER\n  {key: '매뉴얼', value: '매뉴얼'}, // MANUAL\n  {key: '펌웨어', value: '펌웨어'}, // FIRMWARE\n  {key: '기술 자료', value: '기술 자료'}, // TECHNIC_ARTICLE\n  {key: '기타', value: '기타'}, // ETC\n]\n\nexports.orderCategorySelectedOptions = [\n  {label: '선택', value: ' '},\n  {label: '외식업', value: '외식업'},\n  {label: '유통업', value: '유통업'},\n  {label: '기타', value: '기타'},\n]\nexports.orderVanSelectedOptions = [\n  {label: '선택', value: ' '},\n  {label: 'NICE', value: 'NICE'},\n  {label: 'KIS', value: 'KIS'},\n  {label: 'JTNET', value: 'JTNET'},\n  {label: 'KICC', value: 'KICC'},\n  {label: 'KSNET', value: 'KSNET'},\n  {label: 'KCP', value: 'KCP'},\n  {label: 'KOCES', value: 'KOCES'},\n  {label: 'SMARTRO', value: 'SMARTRO'},\n  {label: 'FDK', value: 'FDK'},\n  {label: 'DAOUDATA', value: 'DAOUDATA'},\n  {label: 'KFTC', value: 'KFTC'},\n]\n"],"names":["items","label","useState","listItems","setListItems","useEffect","console","log","className","type","placeholder","TableContainer","CustomCTable","id","color","style","width","length","map","value","index","category","hardware","modelName","styled","CTable","CCol","onClick","columns","title","selectedOptions","func","vanOnChange","readOnly","CSmartTable","paginationProps","limit","onRowClick","tableProps","responsive","align","tableHeadProps","scopedColumns","catcount","poscount","kioskcount","sum","note","item","OrderSelected","options","orderCategorySelectedOptions","onChange","event","disabled","name","van","orderVanSelectedOptions","CFormSelect","visible","setVisible","editMode","setEditMode","onClose","getList","maintenanceNum","certificateNum","representativeName","businessName","createdAt","mobilePhoneNum","phoneNum","email","address","maintenanceCategory","adminMaintenanceHardwareDTOs","adminMaintenanceSolutionDTOs","adminMaintenanceStoreDTOs","operationalProcesses","setEditor","solutionList","setSolutionList","region","totalItems","setTotalItems","vanItems","DetailModalEditModeTemplate","upDate","window","confirm","alert","json","JSON","stringify","deletedInfo","EndPoint","then","res","catch","err","ModalInput","generalListApplicationColumns","solutionListColumns","target","state","managementTargetColumns","ModalQuillEditor","setValue","setItems","selectedItem","setSelectedItem","setEditCheck","showModal","setShowModal","getListData","adminMaintenanceDTOs","handleShowMaterialDetailModal","getDetailInfo","PageHeader","xs","ListTemplate","maintenanceApplicationList","exports","key"],"sourceRoot":""}