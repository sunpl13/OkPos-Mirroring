{"version":3,"file":"static/js/9191.73b0dac2.chunk.js","mappings":"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","sources":["components/forms/ModalStatus.tsx","components/forms/downloadForm/BasicFileDownloadForm.js","components/forms/inputForm/ModalInput.js","components/Modal/officialMall/UserModal.js","pages/officialMall/users/UserList.js","utils/columns/officialMall/Columns.js"],"sourcesContent":["import {CBadge, CCol, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\ninterface ModalInputProps {\n  type?: string\n  onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void\n  id: string\n  placeholder: string\n  value: string\n  label: string\n  readOnly?: boolean\n  disabled?: boolean\n  status?: boolean\n}\n\nconst ModalStatus = ({id, value, label}: ModalInputProps) => {\n  const getBadgeColor = (status: string) => {\n    switch (status) {\n      case 'ACTIVE':\n        return 'success'\n      case 'INACTIVE':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  // 상태값 Text get 함수\n  const getBadgeText = (status: string) => {\n    switch (status) {\n      case 'ACTIVE':\n        return '활성화'\n      case 'INACTIVE':\n        return '비활성화'\n      default:\n        return '기타'\n    }\n  }\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        {label || ' * '}\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        <CBadge color={getBadgeColor(value)}>{getBadgeText(value)}</CBadge>\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalStatus\n","import {CCol, CFormLabel} from '@coreui/react'\nimport {useEffect, useState} from 'react'\n\nconst BasicFileDownloadForm = ({id, value, label, isRequired}) => {\n  // Local state\n  const [fileName, setFileName] = useState('')\n\n  // Life Cycle\n  useEffect(() => {\n    if (value) {\n      const arSplitUrl = value.split('/') //   \"/\" 로 전체 url 을 나눈다\n      const nArLength = arSplitUrl.length\n      const arFileName = arSplitUrl[nArLength - 1] // 나누어진 배열의 맨 끝이 파일명이다\n      setFileName(arFileName)\n    }\n  }, [value])\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        {value ? (\n          <div className='col-form-label'>\n            <a href={value} download target='_blank' rel='noreferrer'>\n              {fileName}\n            </a>\n          </div>\n        ) : (\n          <div className='col-form-label'>등록된 파일이 없습니다.</div>\n        )}\n      </CCol>\n    </>\n  )\n}\n\nexport default BasicFileDownloadForm\n","import {CCol, CFormInput, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\nconst ModalInput = ({type, onChange, id, placeholder, value, label, readOnly, disabled, isRequired, xs}) => {\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' xs={xs} style={{display: 'flex'}}>\n        <CFormInput\n          type={type || 'text'}\n          id={id}\n          placeholder={placeholder || ''}\n          value={type === 'file' ? undefined : value || ''}\n          onChange={onChange}\n          readOnly={readOnly}\n          disabled={disabled}\n        />\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalInput\n","import {CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow} from '@coreui/react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport {useEffect, useState} from 'react'\nimport ModalStatus from '../../forms/ModalStatus'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport BasicFileDownloadForm from '../../forms/downloadForm/BasicFileDownloadForm'\nimport {isEmpty} from '../../../utils/utility'\n\nconst UserDetailModal = ({value, visible, setVisible, onChange}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [user, setUser] = useState({\n    userId: 0,\n    name: '',\n    email: '',\n    createdAt: '',\n    status: '',\n    phoneNumber: '',\n    businessName: '',\n    businessRegistration: '',\n    businessNumber: '',\n    businessAddress: '',\n  })\n\n  // API 통신 함수\n  const onloadMallUser = async value => {\n    const {userId} = value\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {userId},\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_USER,\n      })\n      if (!data?.data?.isSuccess || isEmpty(data?.data?.result)) {\n        console.log('onloadMallUser error')\n        if (data?.data?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(data?.data?.message)\n        }\n        return\n      }\n      setUser(data.data.result)\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    if (visible) {\n      onloadMallUser(value)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible])\n\n  const closeModal = () => {\n    setVisible(false)\n  }\n  return (\n    <CModal size='lg' visible={visible} onClose={closeModal}>\n      <CModalHeader>\n        <CModalTitle>회원 상세정보</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'id'}\n            placeholder={'User Id'}\n            label={'No'}\n            value={value.no}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'userName'}\n            placeholder={''}\n            label={'이름'}\n            value={user.name}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'email'}\n            placeholder={'이메일'}\n            label={'이메일'}\n            value={user.email}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'createdAt'}\n            placeholder={'최초등록일'}\n            label={'최초등록일'}\n            value={user.createdAt}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'phoneNumber'}\n            placeholder={'휴대전화번호'}\n            label={'휴대전화번호'}\n            value={user.phoneNumber}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'businessName'}\n            placeholder={'상호명'}\n            label={'상호명'}\n            value={user.businessName}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessNumber'}\n            placeholder={'사업자등록번호'}\n            label={'사업자등록번호'}\n            value={user.businessNumber}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessAddress'}\n            placeholder={'사업장주소'}\n            label={'사업장주소'}\n            value={user.businessAddress}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <BasicFileDownloadForm\n            id={'businessRegistration'}\n            placeholder={'사업자등록증'}\n            label={'사업자등록증'}\n            value={user.businessRegistration || ''}\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalStatus id={'userStatus'} placeholder={'상태'} label={'상태'} value={user.status} />\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={closeModal}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport UserModal from '../../../components/Modal/officialMall/UserModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {userListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\n\nconst UserList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [userList, setUserList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n\n  // API 통신 함수\n  const onLoadMallUserList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_USERS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('loadMallUserList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n\n      setUserList(\n        res.result.userInfos.map((item, index) => {\n          return {...item, no: res.result.userInfos.length - index}\n        }),\n      )\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallUserList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowUserDetailModal = item => {\n    setSelectedItem(item)\n    setShowModal(!showModal)\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='회원 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={userList}\n              onClick={handleShowUserDetailModal}\n              columns={userListColumns}\n              className={'userList'}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <UserModal value={selectedItem} visible={showModal} setVisible={setShowModal} readOnly />\n    </CRow>\n  )\n}\n\nexport default UserList\n","import {CFormSelect} from '@coreui/react' // 회원 리스트\nexport const userListColumns = [\n  {key: 'no', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 탈퇴회원 리스트\nexport const resignUserListColumns = [\n  {key: 'no', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'resignReason', label: '탈퇴사유', _props: {className: 'resignReason'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'updatedAt', label: '계정탈퇴일', sorter: false, filter: false, _props: {className: 'updatedAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 1:1 문의 리스트\nexport const inquiryListColumns = [\n  {key: 'no', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '카테고리', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'reply', label: '답변', sorter: false, filter: false, _props: {className: 'reply'}},\n]\n\n// FAQ 리스트\nexport const faqListColumns = [\n  {key: 'no', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '카테고리', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n]\n\n// 자료실 리스트\nexport const dataRoomListColumns = [\n  {key: 'no', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '카테고리', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'createdAt', label: '작성일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n\n// 주문 현황 관리\nexport const orderListColumns = [\n  {key: 'no', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'orderNumber', label: '주문번호', sorter: false, _props: {className: 'orderNumber'}},\n  {key: 'receiver', label: '수취인', sorter: false, _props: {className: 'receiver'}},\n  {key: 'phoneNumber', label: '휴대전화번호', sorter: false, _props: {className: 'phoneNumber'}},\n  {key: 'totalPrice', label: '주문총액', filter: false, _props: {className: 'totalPrice'}},\n  {key: 'orderDate', label: '주문일', sorter: false, filter: false, _props: {className: 'orderDate'}},\n]\n\n// 제품 관리\nexport const productListColumns = [\n  {key: 'radioButton', label: '', sorter: false, filter: false, _props: {className: 'radioButton'}},\n  {key: 'itemName', label: '제품명', sorter: false, filter: false, _props: {className: 'itemName'}},\n  {key: 'orderItemCount', sorter: false, filter: false, label: '제품수량', _props: {className: 'orderItemCount'}},\n  {key: 'orderItemPrice', sorter: false, filter: false, label: '제품가격', _props: {className: 'orderItemPrice'}},\n  {key: 'orderStatus', label: '제품상태', sorter: false, filter: false, _props: {className: 'orderStatus'}},\n  {key: 'invoiceNumber', sorter: false, filter: false, label: '송장번호', _props: {className: 'invoiceNumber'}},\n]\n\n// 취소 현황 관리\nexport const cancelListColumns = [\n  {key: 'no', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'orderNumber', label: '주문번호', sorter: false, _props: {className: 'orderNumber'}},\n  {key: 'itemName', label: '제품명', sorter: false, _props: {className: 'itemName'}},\n  {key: 'receiver', label: '수취인', sorter: false, _props: {className: 'receiver'}},\n  {key: 'cancelPrice', label: '취소금액', filter: false, _props: {className: 'cancelPrice'}},\n  {key: 'cancelDate', label: '취소 요청일', sorter: false, filter: false, _props: {className: 'cancelDate'}},\n  {\n    key: 'orderStatus',\n    label: '주문상태',\n    sorter: false,\n    filter: () => {\n      return (\n        <CFormSelect size='sm'>\n          <option>주문상태 선택</option>\n          <option value='결제 대기'>결제 대기</option>\n          <option value='결제 완료'>결제 완료</option>\n          <option value='배송 준비중'>배송 준비중</option>\n          <option value='배송중'>배송중</option>\n          <option value='배송 완료'>배송 완료</option>\n          <option value='취소 처리중'>취소 처리중</option>\n          <option value='취소 완료'>취소 완료</option>\n        </CFormSelect>\n      )\n    },\n    _props: {className: 'orderStatus'},\n  },\n]\n// 취소 현황 관리\nexport const exchangeListColumns = [\n  {key: 'no', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'orderNumber', label: '주문번호', sorter: false, _props: {className: 'orderNumber'}},\n  {key: 'itemName', label: '제품명', sorter: false, _props: {className: 'itemName'}},\n  {key: 'receiver', label: '수취인', sorter: false, _props: {className: 'receiver'}},\n  {key: 'exchangePrice', label: '교환금액', filter: false, _props: {className: 'exchangePrice'}},\n  {key: 'exchangeDate', label: '교환 요청일', sorter: false, filter: false, _props: {className: 'exchangeDate'}},\n  {\n    key: 'orderStatus',\n    label: '주문상태',\n    sorter: false,\n    _props: {className: 'orderStatus'},\n  },\n]\n\n// 배너 관리\nexport const bannerListColumns = [\n  {key: 'no', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'title', label: '배너 타이틀', sorter: false, _props: {className: 'title'}},\n  {key: 'image', label: '이미지', sorter: false, filter: false, _props: {className: 'image'}},\n]\n"],"names":["id","value","label","htmlFor","className","style","display","color","status","getBadgeColor","getBadgeText","isRequired","useState","fileName","setFileName","useEffect","arSplitUrl","split","arFileName","length","href","download","target","rel","type","onChange","placeholder","readOnly","disabled","xs","undefined","visible","setVisible","navigate","useNavigate","userId","name","email","createdAt","phoneNumber","businessName","businessRegistration","businessNumber","businessAddress","user","setUser","onloadMallUser","ApiConfig","data","query","path","method","HttpMethod","url","EndPoint","isSuccess","isEmpty","result","console","log","code","alert","message","closeModal","size","onClose","ModalInput","no","BasicFileDownloadForm","ModalStatus","onClick","userList","setUserList","selectedItem","setSelectedItem","showModal","setShowModal","onLoadMallUserList","res","userInfos","map","item","index","PageHeader","title","ListTemplate","items","columns","userListColumns","UserModal","key","sorter","filter","_props","resignUserListColumns","inquiryListColumns","faqListColumns","dataRoomListColumns","orderListColumns","productListColumns","cancelListColumns","exchangeListColumns","bannerListColumns"],"sourceRoot":""}