{"version":3,"file":"static/js/6801.783531f5.chunk.js","mappings":"6UA8IA,UApIkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAwCF,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7CG,EAAY,KAAEC,EAAe,KACpC,GAAkCJ,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAvCK,EAAS,KAAEC,EAAY,KAE9B,GAAkCN,EAAAA,EAAAA,WAAS,GAAM,eAA1CO,EAAS,KAAEC,EAAY,KAUxBC,EAAa,yCAAG,sHAEGC,EAAAA,EAAAA,QAAkB,CACrCC,OAAQC,EAAAA,EAAAA,IACRC,IAAI,GAAD,OAAKC,EAAAA,EAAAA,mBAA2B,SAAS,KAC5C,OACe,GADf,SAHKC,EAAI,EAAJA,KAIPC,QAAQC,IAAIF,GACPA,EAAKG,aAAaC,EAAAA,EAAAA,IAAY,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,QAAO,iDAGzB,OAAX,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMM,MACRnB,EAAoB,QAAZ,EAACa,EAAKK,cAAM,aAAX,EAAaE,uBAEtBC,MAAU,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMS,SACb,kDAEDR,QAAQC,IAAI,EAAD,IAAO,0DAErB,kBAlBkB,oCAoBnBQ,EAAAA,EAAAA,YAAU,WACRhB,GACF,GAAG,IAmEH,OACE,UAAC,KAAI,YACH,SAAC,IAAU,CAACiB,MAAM,kDAClB,SAAC,KAAI,CAACC,GAAI,GAAG,UACX,SAAC,KAAK,CAACC,UAAU,OAAM,UACrB,SAAC,KAAS,WACR,SAAC,IAAY,CACX3B,MAAOA,EACP4B,QAxG0B,SAAAC,GACpC1B,EAAgB0B,GAChBxB,EAAawB,GACbtB,GAAcD,EAEhB,EAoGYwB,QAASC,EAAAA,GACTJ,UAAW,WACXK,SAxBoB,SAAH,GAAc,IAATC,EAAE,EAAFA,GAC5BC,OAAOC,QAAQ,aACjBlC,EAASD,EAAMoC,QAAO,SAAAC,GAAK,OAAIA,EAAMJ,KAAOA,CAAE,IAElD,WAyBI,SAAC,IAAgB,CACfI,MAAOnC,EACPoC,QAAShC,EACTiC,WAAYhC,EACZiC,SAvC2B,SAAH,GAA+B,IAAD,IAAzBC,OAASC,EAAE,EAAFA,GAAIL,EAAK,EAALA,MAC9ClC,GAAgB,kBACXD,GAAY,cACdwC,EAAKL,IAEV,EAmCMM,OAtF0B,WAC9B,IACEV,EAWE/B,EAXF+B,GACAW,EAUE1C,EAVF0C,aACAC,EASE3C,EATF2C,mBACAC,EAQE5C,EARF4C,eACAC,EAOE7C,EAPF6C,MACAC,EAME9C,EANF8C,YACAC,EAKE/C,EALF+C,gBACAC,EAIEhD,EAJFgD,gBACAC,EAGEjD,EAHFiD,QACApB,EAEE7B,EAFF6B,UACAqB,EACElD,EADFkD,gBAEF,GACEhD,EAAUwC,eAAiBA,GAC3BxC,EAAUyC,qBAAuBA,GACjCzC,EAAU0C,iBAAmBA,GAC7B1C,EAAU2C,QAAUA,GACpB3C,EAAU4C,cAAgBA,GAC1B5C,EAAU6C,kBAAoBA,GAC9B7C,EAAU8C,kBAAoBA,GAC9B9C,EAAU2B,YAAcA,GACxB3B,EAAU+C,UAAYA,GACtB/C,EAAUgD,kBAAoBA,GAE9B,GAAIlB,OAAOC,QAAQ,UAAW,CAC5B,IAAKU,EAAoB,OAAOvB,MAAM,2BACtC,IAAKsB,EAAc,OAAOtB,MAAM,oBAChC,IAAKuB,EAAoB,OAAOvB,MAAM,0BACtC,IAAKwB,EAAgB,OAAOxB,MAAM,sBAClC,IAAKyB,EAAO,OAAOzB,MAAM,aACzB,IAAK0B,EAAa,OAAO1B,MAAM,mBAC/B,IAAK2B,EAAiB,OAAO3B,MAAM,uBACnC,IAAK4B,EAAiB,OAAO5B,MAAM,uBACnC,IAAK6B,EAAS,OAAO7B,MAAM,eAC3B,GAAyB,IAArBS,EAAUsB,OAAc,OAAO/B,MAAM,iBACzC,IAAK8B,EAAiB,OAAO9B,MAAM,uBACnCrB,EAASD,EAAMsD,KAAI,SAAAjB,GAAK,OAAKA,EAAMJ,KAAOA,EAAK/B,EAAemC,CAAK,KACnE9B,GAAa,EACf,OAEAA,GAAa,EAEjB,EA2CMyB,SA9BsB,SAAH,GAAqB,IAAhBuB,EAAS,EAATA,UACxBrB,OAAOC,QAAQ,aACjBhC,GAAgB,kBACXD,GAAY,IACf6B,UAAW7B,EAAa6B,UAAUK,QAAO,SAAAC,GAAK,OAAIA,EAAMkB,YAAcA,CAAS,MAGrF,MA2BF,C","sources":["pages/partnerCenter/order/OrderList.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {orderList} from '../../../utils/columns/partnerCenter/Columns'\nimport OrderDetailModal from '../../../components/Modal/partnerCenter/order/OrderDetailModal'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\n\nconst OrderList = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [editCheck, setEditCheck] = useState({})\n\n  const [showModal, setShowModal] = useState(false)\n\n  /** Open Modal*/\n  const handleShowMaterialDetailModal = item => {\n    setSelectedItem(item)\n    setEditCheck(item)\n    setShowModal(!showModal)\n    //GET_PARTNER_ORDERS\n  }\n  // 발주신청 리스트 API\n  const getOrdersList = async () => {\n    try {\n      const {data} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: `${EndPoint.GET_PARTNER_ORDERS}?page=${1}`,\n      })\n      console.log(data)\n      if (!data.isSuccess || isEmpty(data?.result)) {\n        return\n      }\n      if (data?.code === 1000) {\n        setItems(data.result?.adminOrderPartnerDTOs)\n      } else {\n        alert(data?.message)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    getOrdersList()\n  }, [])\n\n  const handleDetailModalUpDate = () => {\n    const {\n      no,\n      businessName /** 상호명 */,\n      representativeName /** 대표자명*/,\n      businessNumber /** 사업자 번호 */,\n      email /** 이메일 */,\n      phoneNumber /** 휴대포 번호 */,\n      homePhoneNumber /** 사업장 전화번호*/,\n      businessAddress /** 사업장 주소*/,\n      receive /** 수령 방법 */,\n      orderList /** 발주 리스트  */,\n      taxInvoiceEmail /** 세금 고지서 수령 이메일 */,\n    } = selectedItem\n    if (\n      editCheck.businessName !== businessName ||\n      editCheck.representativeName !== representativeName ||\n      editCheck.businessNumber !== businessNumber ||\n      editCheck.email !== email ||\n      editCheck.phoneNumber !== phoneNumber ||\n      editCheck.homePhoneNumber !== homePhoneNumber ||\n      editCheck.businessAddress !== businessAddress ||\n      editCheck.orderList !== orderList ||\n      editCheck.receive !== receive ||\n      editCheck.taxInvoiceEmail !== taxInvoiceEmail\n    ) {\n      if (window.confirm('Edit ?')) {\n        if (!representativeName) return alert('Not Representative Name')\n        if (!businessName) return alert('Not businessName')\n        if (!representativeName) return alert('Not representativeName')\n        if (!businessNumber) return alert('Not businessNumber')\n        if (!email) return alert('Not email')\n        if (!phoneNumber) return alert('Not phoneNumber')\n        if (!homePhoneNumber) return alert('Not homePhoneNumber')\n        if (!businessAddress) return alert('Not businessAddress')\n        if (!receive) return alert('Not receive')\n        if (orderList.length === 0) return alert('Not orderList')\n        if (!taxInvoiceEmail) return alert('Not taxInvoiceEmail')\n        setItems(items.map(value => (value.no === no ? selectedItem : value)))\n        setShowModal(false)\n      }\n    } else {\n      setShowModal(false)\n    }\n  }\n\n  const handleOrderModalOnChange = ({target: {id, value}}) => {\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n  const handleOrderListOnDelete = ({no}) => {\n    if (window.confirm('Delete ?')) {\n      setItems(items.filter(value => value.no !== no))\n    }\n  }\n  const handleOrderOnDelete = ({productId}) => {\n    if (window.confirm('Delete ?')) {\n      setSelectedItem({\n        ...selectedItem,\n        orderList: selectedItem.orderList.filter(value => value.productId !== productId),\n      })\n    }\n  }\n  return (\n    <CRow>\n      <PageHeader title='발주 신청 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowMaterialDetailModal}\n              columns={orderList}\n              className={'userList'}\n              onDelete={handleOrderListOnDelete}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <OrderDetailModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        onChange={handleOrderModalOnChange}\n        upDate={handleDetailModalUpDate}\n        onDelete={handleOrderOnDelete}\n      />\n    </CRow>\n  )\n}\n\nexport default OrderList\n"],"names":["useState","items","setItems","selectedItem","setSelectedItem","editCheck","setEditCheck","showModal","setShowModal","getOrdersList","ApiConfig","method","HttpMethod","url","EndPoint","data","console","log","isSuccess","isEmpty","result","code","adminOrderPartnerDTOs","alert","message","useEffect","title","xs","className","onClick","item","columns","orderList","onDelete","no","window","confirm","filter","value","visible","setVisible","onChange","target","id","upDate","businessName","representativeName","businessNumber","email","phoneNumber","homePhoneNumber","businessAddress","receive","taxInvoiceEmail","length","map","productId"],"sourceRoot":""}