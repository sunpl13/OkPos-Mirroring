{"version":3,"file":"static/js/2245.f644177c.chunk.js","mappings":"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","sources":["components/Modal/officialMall/CancelModal.js","pages/officialMall/order/CancelList.js"],"sourcesContent":["import {\n  CButton,\n  CFormSelect,\n  CFormTextarea,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport {useEffect, useState} from 'react'\nimport {isPrice} from '../../../utils/utility'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\n\nconst CancelModal = ({value, visible, setVisible, cancelList, setCanelList, onLoadMallCancelList}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [order, setOrder] = useState({\n    orderId: 0,\n    orderNumber: '',\n    name: '',\n    paymentMethod: '',\n    totalPrice: 0,\n    cancelPrice: 0,\n    orderDate: '',\n    payDate: '',\n    cancelDate: '',\n    receiver: '',\n    address: '',\n    normalNumber: '',\n    phoneNumber: '',\n    totalCount: '',\n    subInfos: [],\n  })\n\n  const [orderStatus, setOrderStatus] = useState('')\n\n  // Life Cycle 선언\n  useEffect(() => {\n    if (visible) {\n      setOrder(value)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible])\n\n  const closeModal = () => {\n    setOrderStatus('')\n    setVisible(false)\n  }\n\n  // 함수 선언\n  // Update OrderStatus\n  const onUpdateOrderStatus = async (orderCancelId, orderStatus) => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_CANCEL_ORDERS_STATUS,\n        path: {\n          orderCancelId: orderCancelId,\n        },\n        query: {\n          orderStatus: orderStatus,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n\n      setOrder(order => ({...order, orderStatus: orderStatus}))\n\n      const findIndex = cancelList.findIndex(product => product.orderCancelId === orderCancelId)\n      cancelList[findIndex].orderStatus = orderStatus\n      setCanelList(cancelList => [...cancelList])\n      await onLoadMallCancelList()\n      alert(res?.message)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 주문 상태 값 저장\n  const orderStatusChange = e => {\n    const {value} = e.target\n    setOrderStatus(value)\n  }\n\n  // 주문상태 변경 함수\n  const handleOrderStatus = () => {\n    if (!orderStatus) return alert('주문상태를 선택해주세요.')\n\n    onUpdateOrderStatus(order.orderCancelId, orderStatus)\n    setOrderStatus('')\n  }\n\n  // 송장조회\n  const handleInvoicCheck = () => {\n    if (order?.invoiceNumber) {\n      const {invoiceNumber} = order\n      window.open('https://www.ilogen.com/web/personal/trace/' + invoiceNumber)\n    } else {\n      window.open('https://www.ilogen.com/web/personal/tkSearch')\n    }\n  }\n\n  return (\n    <CModal size='lg' visible={visible} onClose={closeModal}>\n      <CModalHeader>\n        <CModalTitle>취소 상세정보</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'orderCancelId'}\n            placeholder={'orderCancelId'}\n            label={'No'}\n            value={order.no}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'orderNumber'}\n            placeholder={''}\n            label={'주문번호'}\n            value={order.orderNumber}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'itemName'}\n            placeholder={'제품명'}\n            label={'제품명'}\n            value={order.itemName}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput id={'sender'} placeholder={''} label={'보내는이'} value={order.sender} readOnly disabled />\n          <ModalInput id={'receiver'} placeholder={''} label={'수취인'} value={order.receiver} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'orderItemCount'}\n            placeholder={''}\n            label={'주문제품수량'}\n            value={order.orderItemCount}\n            readOnly\n            disabled\n          />\n          <ModalInput id={'orderDate'} placeholder={''} label={'주문일'} value={order.orderDate} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'paymentMethod'}\n            placeholder={''}\n            label={'결제수단'}\n            value={order.paymentMethod}\n            readOnly\n            disabled\n          />\n          <ModalInput id={'payDate'} placeholder={''} label={'결제일'} value={order.payDate} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'orderStatus'}\n            placeholder={''}\n            label={'주문상태'}\n            value={order.orderStatus}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'cancelDate'}\n            placeholder={''}\n            label={'취소 요청일'}\n            value={order.cancelDate}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'cancelPrice'}\n            placeholder={''}\n            label={'취소금액'}\n            value={isPrice(order.cancelPrice)}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'totalPrice'}\n            placeholder={''}\n            label={'총 결제금액'}\n            value={isPrice(order.totalPrice)}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'invoiceNumber'}\n            placeholder={'송장번호'}\n            label={'송장번호'}\n            value={order.invoiceNumber}\n            readOnly\n            disabled\n          />\n          <CButton className='me-md-3 invoiceSearchBtn' color='warning' size='sm' onClick={handleInvoicCheck}>\n            송장조회\n          </CButton>\n        </CRow>\n        <CRow className={'p-2'}>\n          <CFormTextarea\n            id='cancelReason'\n            placeholder={'취소 사유'}\n            label='취소사유'\n            rows='3'\n            value={order.cancelReason}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <div className={'pb-2 d-md-flex justify-content-md-end'}>\n          <CFormSelect value={orderStatus} className='me-md-2 orderStatusForm' size='sm' onChange={orderStatusChange}>\n            <option>주문상태 선택</option>\n            <option value='결제 대기'>결제 대기</option>\n            <option value='결제 완료'>결제 완료</option>\n            <option value='배송 준비중'>배송 준비중</option>\n            <option value='배송중'>배송중</option>\n            <option value='배송 완료'>배송 완료</option>\n            <option value='취소 처리중'>취소 처리중</option>\n            <option value='취소 완료'>취소 완료</option>\n          </CFormSelect>\n          <CButton className='me-md-2' color='success' size='sm' onClick={handleOrderStatus}>\n            주문상태 변경\n          </CButton>\n        </div>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={closeModal}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default CancelModal\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {cancelListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport OrderTableList from '../../../components/list/mall/OrderTableList'\nimport CancelModal from '../../../components/Modal/officialMall/CancelModal'\n\nconst CancelList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [cancelList, setCanelList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n\n  // API 통신 함수\n  const onLoadMallCancelList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_CANCEL_ORDERS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('loadMallCancelList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setCanelList(\n        res.result.responses.map((item, index) => {\n          return {...item, no: res.result.responses.length - index}\n        }),\n      )\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallCancelList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowUserDetailModal = item => {\n    setSelectedItem(item)\n    setShowModal(!showModal)\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='취소 요청 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <OrderTableList\n              items={cancelList}\n              onClick={handleShowUserDetailModal}\n              columns={cancelListColumns}\n              className={'cancelList'}\n              datePicker\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CancelModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        cancelList={cancelList}\n        setCanelList={setCanelList}\n        onLoadMallCancelList={onLoadMallCancelList}\n        readOnly\n      />\n    </CRow>\n  )\n}\n\nexport default CancelList\n"],"names":["value","visible","setVisible","cancelList","setCanelList","onLoadMallCancelList","navigate","useNavigate","useState","orderId","orderNumber","name","paymentMethod","totalPrice","cancelPrice","orderDate","payDate","cancelDate","receiver","address","normalNumber","phoneNumber","totalCount","subInfos","order","setOrder","orderStatus","setOrderStatus","useEffect","closeModal","onUpdateOrderStatus","orderCancelId","ApiConfig","method","HttpMethod","url","EndPoint","path","query","res","data","isSuccess","code","alert","message","findIndex","product","size","onClose","className","ModalInput","id","placeholder","label","no","readOnly","disabled","itemName","sender","orderItemCount","isPrice","invoiceNumber","color","onClick","window","open","rows","cancelReason","onChange","e","target","selectedItem","setSelectedItem","showModal","setShowModal","isEmpty","result","console","log","responses","map","item","index","length","PageHeader","title","xs","OrderTableList","items","columns","cancelListColumns","datePicker"],"sourceRoot":""}