{"version":3,"file":"static/js/2988.2b82fd7e.chunk.js","mappings":"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","sources":["components/chart/BarChartTemplate.js","components/chart/DoughnutChartTemplate.js","pages/partnerCenter/users/InActiveUserList.js"],"sourcesContent":["import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\nimport PropTypes, {object} from 'prop-types'\n\nconst BarChartTemplate = ({title, labels, data}) => {\n  const dataSet = {\n    labels: [' '],\n    datasets: [\n      {\n        label: '서비스 이용 불편',\n        data: [data[0]],\n        backgroundColor: 'rgb(255, 99, 132)',\n      },\n      {\n        label: '가격 불만족',\n        data: [data[1]],\n        backgroundColor: 'rgb(54, 162, 235)',\n      },\n      {\n        label: '제품 기능 불만족',\n        data: [data[2]],\n        backgroundColor: 'rgb(255, 205, 86)',\n      },\n      {\n        label: '기타(직접 입력)',\n        backgroundColor: 'rgba(255, 159, 64)',\n        data: [data[3]],\n      },\n    ],\n  }\n\n  const options = {\n    plugins: {\n      //responsive: true,\n      hoverBorderWidth: 2,\n      legend: {\n        display: true,\n        position: 'right',\n        align: 'start',\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  }\n  return (\n    // <CChart\n    //   type='doughnut'\n    //   customTooltips={false}\n    //   labels={labels}\n    //   data={data}\n    //   options={{\n    //     responsive: true,\n    //     hoverBorderWidth: 2,\n    //     plugins: {\n    //       title: {\n    //         display: true,\n    //         text: title || '',\n    //         font: {\n    //           size: 24,\n    //         },\n    //       },\n    //     },\n    //     borderRadius: 10,\n    //     inflateAmount: 1,\n    //   }}\n    // />\n    <CChart type='bar' data={dataSet} customTooltips={false} options={options} />\n  )\n}\n\nexport default React.memo(BarChartTemplate)\n","import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\n\nconst DoughnutChartTemplate = ({title, labels, data}) => {\n  const dataSet = {\n    labels: labels,\n    datasets: [\n      {\n        label: title,\n        data: data,\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)', 'rgba(255, 159, 64)'],\n        hoverOffset: 4,\n      },\n    ],\n  }\n\n  const options = {\n    plugins: {\n      responsive: true,\n      hoverBorderWidth: 2,\n      legend: {\n        display: true,\n        position: 'right',\n        align: 'start',\n      },\n    },\n  }\n  return (\n    // <CChart\n    //   type='doughnut'\n    //   customTooltips={false}\n    //   labels={labels}\n    //   data={data}\n    //   options={{\n    //     responsive: true,\n    //     hoverBorderWidth: 2,\n    //     plugins: {\n    //       title: {\n    //         display: true,\n    //         text: title || '',\n    //         font: {\n    //           size: 24,\n    //         },\n    //       },\n    //     },\n    //     borderRadius: 10,\n    //     inflateAmount: 1,\n    //   }}\n    // />\n    <CChart type='doughnut' data={dataSet} customTooltips={false} options={options} />\n  )\n}\nexport default React.memo(DoughnutChartTemplate)\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport UserDetailModal from '../../../components/Modal/partnerCenter/users/UserDetailModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {withdrawalUsersColumns} from '../../../utils/columns/partnerCenter/Columns'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {getDetailInfo, getListData} from '../../../components/function/partnerCenter/ApiModules'\nimport MallDoughnutChartTemplate from '../../../components/chart/DoughnutChartTemplate'\nimport MallBarChartTemplate from '../../../components/chart/BarChartTemplate'\n\nconst InActiveUserList = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState([])\n  const [showModal, setShowModal] = useState(false)\n  const [chartData, setChartData] = useState([])\n  const [chartLabels, setChartLabels] = useState([\n    '서비스 이용 불편',\n    '가격 불만족',\n    '제품 기능 불만족',\n    '기타(직접 입력)',\n  ])\n\n  const datePickerOptions = [\n    {key: 'createdAt', value: '최초 등록일'},\n    {key: 'deletedAt', value: '계정 탈퇴일'},\n  ]\n\n  // 탈퇴회원 API\n  const getList = async () => {\n    getListData(EndPoint.PARTNER_INACTIVE_USERS)\n      .then(res => {\n        setItems(\n          res?.inActiveUserInfoPartnerDTOs.map(v => {\n            return {name: v.userName, phoneNumber: v.phoneNum.replace(/-/g, ''), ...v}\n          }),\n        )\n        const {inActiveUserWithdrawalCategoryStatistics} = res\n        setChartData([\n          inActiveUserWithdrawalCategoryStatistics.inconvenienceOfService,\n          inActiveUserWithdrawalCategoryStatistics?.disSatisfiedWithPrice,\n          inActiveUserWithdrawalCategoryStatistics?.disSatisfiedWithProductFeature,\n          inActiveUserWithdrawalCategoryStatistics?.directInput,\n        ])\n      })\n      .catch(err => console.log(err))\n  }\n  useEffect(() => {\n    getList()\n  }, [])\n\n  /** Open Modal*/\n  const handleShowUserDetailModal = async ({id}) => {\n    getDetailInfo(EndPoint.PARTNER_INACTIVE_USERS, id)\n      .then(res => {\n        setSelectedItem(res)\n        setShowModal(!showModal)\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='탈퇴 회원 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <CRow>\n              <CCol xs={4}>\n                <CCardBody>\n                  <MallDoughnutChartTemplate title={'탈퇴 사유'} labels={chartLabels} data={chartData} />\n                </CCardBody>\n              </CCol>\n              <CCol xs={8}>\n                <CCardBody>\n                  <MallBarChartTemplate title={'탈퇴 사유'} labels={chartLabels} data={chartData} />\n                </CCardBody>\n              </CCol>\n            </CRow>\n            <div>서비스 이용 불편 : {chartData[0]}</div>\n            <div> 가격 불만족 : {chartData[1]}</div>\n            <div> 제품 기능 불만족 : {chartData[2]}</div>\n            <div>기타(직접 입력) : {chartData[3]}</div>\n          </CCardBody>\n        </CCard>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowUserDetailModal}\n              columns={withdrawalUsersColumns}\n              className={'userList'}\n              datePickerOptions={datePickerOptions}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <UserDetailModal value={selectedItem} visible={showModal} setVisible={setShowModal} readOnly />\n    </CRow>\n  )\n}\nexport default InActiveUserList\n"],"names":["BarChartTemplate","title","labels","data","dataSet","datasets","label","backgroundColor","type","customTooltips","options","plugins","hoverBorderWidth","legend","display","position","align","scales","y","beginAtZero","React","DoughnutChartTemplate","hoverOffset","responsive","useState","items","setItems","selectedItem","setSelectedItem","showModal","setShowModal","chartData","setChartData","chartLabels","getList","getListData","EndPoint","then","res","inActiveUserInfoPartnerDTOs","map","v","name","userName","phoneNumber","phoneNum","replace","inActiveUserWithdrawalCategoryStatistics","inconvenienceOfService","disSatisfiedWithPrice","disSatisfiedWithProductFeature","directInput","catch","err","console","log","useEffect","handleShowUserDetailModal","id","getDetailInfo","xs","className","onClick","columns","withdrawalUsersColumns","datePickerOptions","key","value","visible","setVisible","readOnly"],"sourceRoot":""}