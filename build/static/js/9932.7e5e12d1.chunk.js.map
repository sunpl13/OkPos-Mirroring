{"version":3,"file":"static/js/9932.7e5e12d1.chunk.js","mappings":"8MAmCA,IAhCoC,SAAH,GAA2E,IAAtEA,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAAYC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAC5F,GAAgCC,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAQ5B,OACE,UAAC,KAAM,CAACC,KAAK,KAAKV,QAASA,EAASW,QAAS,kBAAMP,GAAQ,EAAC,WAC1D,SAAC,KAAY,WACX,SAAC,KAAW,UAAEH,GAAS,iBAEzB,SAAC,KAAU,UAAEC,IAAY,4CACzB,UAAC,KAAY,YACX,SAAC,KAAO,CAACU,QAAS,kBAbtBH,GAAaD,QACTA,GACFJ,IAWgD,EAAES,MAAOL,EAAW,UAAY,UAAU,SACrFF,GAAW,kBAEbD,IACC,SAAC,KAAO,CAACO,QAAS,kBAAMP,GAAU,EAAEQ,MAAO,SAAS,2BAItD,SAAC,KAAO,CAACA,MAAM,YAAYD,QAAS,kBAAMT,GAAW,EAAM,EAAC,+BAMpE,C,2GC8BA,IA1D8B,SAAH,GAAqD,IAAhDW,EAAE,EAAFA,GAAiBC,GAAF,EAAXC,YAAkB,EAALD,OAAOE,EAAK,EAALA,MAAOC,EAAU,EAAVA,WA2B7D,OACE,iCACE,SAAC,KAAU,CAACC,QAAO,UAAKL,EAAE,UAAUM,UAAU,0BAAyB,UACrE,iBAAMA,UAAWF,EAAa,WAAa,GAAG,SAAED,GAAS,WAE3D,SAAC,KAAI,WACG,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOM,QAAS,EACfN,EAAMO,KAAI,SAACC,EAAMC,GACf,IAAMC,EAAWF,EAAKG,MAAM,KAEtBC,EAAWF,EADMA,EAASJ,OACW,GAC3C,OACE,gBAAiBD,UAAU,iBAAgB,UACzC,UAACQ,EAAS,CACRC,KAAK,OAELC,MAAMC,EAAAA,EAAAA,IAAgBR,GACtBX,QAAS,kBA3CJ,SAACoB,EAAKL,GACzBK,GAAMD,EAAAA,EAAAA,IAAgBC,GAEtBC,MAAMD,EAAK,CAACE,OAAQ,QACjBC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,MACb,IACCF,MAAK,SAAAE,GACJ,IAAML,EAAMM,OAAOC,IAAIC,gBAAgBH,GACjCI,EAAIC,SAASC,cAAc,KACjCF,EAAEX,KAAOE,EACTS,EAAEG,SAAWjB,EACbe,SAASG,KAAKC,YAAYL,GAC1BA,EAAEM,QACFC,YAAW,SAAAC,GACTX,OAAOC,IAAIW,gBAAgBlB,EAC7B,GAAG,KACHS,EAAEU,QACJ,IACCC,OAAM,SAAAC,GACLC,QAAQC,MAAM,QAASF,EACzB,GACJ,CAqB+BG,CAAajC,EAAMI,EAAS,EAAC,UAE3CH,EAAQ,EAAC,KAAIG,IAJTH,IAHCA,EAWd,KAEA,gBAAKJ,UAAU,iBAAgB,iFAKzC,EAGA,IAAMQ,EAAY6B,EAAAA,GAAAA,KAAW,+T,oHC/D7B,EADoB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uhBAA2hB,KAAQ,QAAS,MAAS,Y,WCK5sBC,EAAgB,SAAuBC,EAAOC,GAChD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,CAAC,EAAGJ,GAAQ,CAAC,EAAG,CAC5FC,IAAKA,EACLI,KAAMC,IAEV,EACAP,EAAcQ,YAAc,gBAC5B,I,EAAA,EAA4BL,EAAAA,WAAiBH,G,sFCuG7C,EA3GwB,SAAH,GAAmF,IAA9E3C,EAAK,EAALA,MAAOE,EAAK,EAALA,MAAOH,EAAE,EAAFA,GAAIqD,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAAUpD,EAAU,EAAVA,YAErFqD,EAAAA,EAAAA,YAAU,WACJxD,GAASA,EAAMM,OAAS,GAC1BgD,EACEtD,EAAMO,KAAI,SAACC,EAAMC,GAAK,MAAM,CAC1BgD,IAAKhD,EACLiD,IAAKjD,EACLkD,KAAMnD,EAAKoD,UAAYpD,EAAKoD,UAAYC,UAAUrD,EAAKG,MAAM,KAAKH,EAAKG,MAAM,KAAKL,OAAS,IAC3FwD,OAAQ,OACR7C,IAAKT,EAAKA,MAAOQ,EAAAA,EAAAA,IAAgBR,EAAKA,OAAQQ,EAAAA,EAAAA,IAAgBR,GAC/D,IAGP,GAAG,CAACR,IAEJ,IA4DM4C,EAAQ,CACZe,KAAM,OACNI,UAAU,EACVX,SAAUA,EACVC,SAAUA,EACVW,cAAa,SAACC,IAzCE,SAAH,GAAgD,IAA3CzD,EAAI,EAAJA,KAAM0D,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAC7CC,IAAAA,OAAAA,OAAkB,CAChBC,OAAQC,iBACRC,YAAaD,uBACbE,gBAAiBF,6CAGnB,IAAMG,EAAK,IAAIL,IAAAA,IACTzD,EAAWJ,EAAKmD,KAAKgB,WAAW,IAAK,IACrCC,EAAY,CAChBC,QAAQC,EAAAA,EAAAA,IAAqBvB,GAC7BwB,IAAKnE,EACLoE,KAAMxE,EACNyE,YAAazE,EAAK0E,MAGLR,EAAGS,UAAUP,GACzBQ,GAAG,sBAAsB,gBAAEC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAK,OAAMnB,EAAW,CAACoB,QAAUF,EAASC,EAAS,KAAK,IAC3FE,UACIpE,MACL,SAAU6C,GACRG,EAAUH,EAAKwB,UACjB,IACA,SAAUjD,GACR0B,IACA3B,QAAQmD,IAAIlD,EAAMmD,MAClBpD,QAAQmD,IAAIlD,EAAMoD,QACpB,GAEJ,CAaIC,CAAU5B,EACZ,EACAG,UAAS,SAACH,IA3DM,SAAA6B,GAChB,IAAMC,EAAcD,EAAYE,QAAQD,YAClCvF,EAAOuF,EAAYjE,KACzB,EAAyBiE,EAAYE,SAA9BC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAEXC,EAAW,CACf1C,IAAKoC,EAAYE,QAAQK,OAAOtB,IAChCpB,KAAMnD,EAAKmD,KACXG,OAAQ,OACR7C,IAAI,GAAD,OAAKiF,EAAQ,aAAKC,GAAI,OAAGJ,EAAYO,OAE1ChD,EAAY,GAAD,eAAKD,GAAQ,CAAE+C,IAC5B,CAgDIhC,CAAUH,EACZ,EACAsC,SAAQ,SAACtC,GAfM,IAAAuC,IAgBJvC,EAfXX,EAAYD,EAASoD,QAAO,SAAAjG,GAAI,OAAIA,EAAKkD,MAAQ8C,EAAK9C,GAAG,IAgBzD,GAGF,OACE,+BACE,UAACgD,EAAM,CAACrG,UAAW+C,EAAS,WAC1B,SAAC,KAAU,CAAC/C,UAAWF,EAAa,WAAa,GAAG,SAAED,GAAS,MAC/D,UAAC,aAAc,kBAAK0C,GAAK,IAAE7C,GAAIA,EAAG,WAChC,cAAGM,UAAU,uBAAsB,UACjC,SAAC,EAAa,OAEhB,cAAGA,UAAU,kBAAiB,kLAKxC,EAIMqG,EAAShE,EAAAA,GAAAA,IAAU,qR,mMC9GnBiE,EAAY,SAAAnG,GAAI,OACpB,IAAIoG,SAAQ,SAACC,EAASC,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAczG,GACrBuG,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,OAAO,EAC5CJ,EAAOK,QAAU,SAAA5E,GAAK,OAAIsE,EAAOtE,EAAM,CACzC,GAAE,EAoIJ,IAlIwB,SAAH,GAAyF,IAApF6E,EAAM,EAANA,OAAQtH,EAAE,EAAFA,GAAIG,EAAK,EAALA,MAAOmD,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAagE,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAAS,EAAD,EAAEC,SAAAA,OAAQ,OAAQ,EACrG,GAAsChI,EAAAA,EAAAA,WAAS,GAAM,eAAjCiI,GAAF,KAAgB,MAClC,GAAwCjI,EAAAA,EAAAA,UAAS,IAAG,eAA7CkI,EAAY,KAAEC,EAAe,KACpC,GAAwCnI,EAAAA,EAAAA,UAAS,IAAG,eAA7CoI,EAAY,KAAEC,EAAe,MAEpCrE,EAAAA,EAAAA,YAAU,WACJ6D,GAAUA,EAAO/G,OAAS,GAC5BgD,EACE+D,EAAO9G,KAAI,SAAA+F,GAAI,MAAK,CAClB5C,IAAK4C,EACL3C,KAAME,UAAUyC,EAAK3F,MAAM,KAAK2F,EAAK3F,MAAM,KAAKL,OAAS,IACzDwD,OAAQ,OACR7C,KAAKD,EAAAA,EAAAA,IAAgBsF,GACtB,IAGP,GAAG,CAACe,EAAQ/D,IAEZ,IAIMwE,EAAa,yCAAG,WAAMtH,GAAI,yEACzBA,EAAKS,KAAQT,EAAKuH,QAAO,gCACPpB,EAAUnG,EAAKwH,eAAc,OAAlDxH,EAAKuH,QAAO,cAGdJ,EAAgBnH,EAAKS,KAAOT,EAAKuH,SACjCN,GAAe,GACfI,EAAgBrH,EAAKmD,MAAQnD,EAAKS,IAAIgH,UAAUzH,EAAKS,IAAIiH,YAAY,KAAO,IAAG,2CAChF,gBARkB,sCAgEbC,GACJ,4BACE,SAAC,IAAY,KACb,gBAAKC,MAAO,CAACC,UAAW,GAAG,uBAG/B,OACE,iCACE,SAAC,KAAU,CAACjI,QAAO,UAAKL,EAAE,UAAUM,UAAU,0BAAyB,UACrE,0BAAOH,GAAS,WAElB,SAAC,IAAM,CACLoI,SAAS,eACTjF,SAAUA,EACVkF,UAAWT,EACX1D,UAAW,SAAAH,GAAI,OArEH,SAAA6B,GAChB,IAAMC,EAAcD,EAAYE,QAAQD,YAClCvF,EAAOuF,EAAYjE,KACzB,EAAyBiE,EAAYE,SAA9BC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAEXC,EAAW,CACf1C,IAAKoC,EAAYE,QAAQK,OAAOtB,IAChCpB,KAAMnD,EAAKmD,KACXG,OAAQ,OACR7C,IAAI,GAAD,OAAKiF,EAAQ,aAAKC,GAAI,OAAGJ,EAAYO,OAG1ChD,EAAY,GAAD,eAAKD,GAAQ,CAAE+C,IAC5B,CAwDyBhC,CAAUH,EAAK,EAClCsC,SAAU,SAAAtC,GAAI,OAnBHuC,EAmBgBvC,OAlB/BX,EAAYD,EAASoD,QAAO,SAAAjG,GAAI,OAAIA,EAAKkD,MAAQ8C,EAAK9C,GAAG,KAD1C,IAAA8C,CAmBqB,EAChCxC,cAAe,SAAAwE,GAAO,OAxDV,SAAH,GAAgD,IAA3ChI,EAAI,EAAJA,KAAM0D,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAC7C,GAAIoD,GAAgC,IAApBnE,EAAS/C,OACvBmI,MAAM,gGADR,CAIApE,IAAAA,OAAAA,OAAkB,CAChBC,OAAQC,iBACRC,YAAaD,uBACbE,gBAAiBF,6CAGnB,IAAMG,EAAK,IAAIL,IAAAA,IACTzD,EAAWJ,EAAKmD,KAAKgB,WAAW,IAAK,IAErCC,EAAY,CAChBC,QAAQ6D,EAAAA,EAAAA,IAAiBpB,GACzBvC,IAAKnE,EACLoE,KAAMxE,EACNyE,YAAazE,EAAK0E,MAGLR,EAAGS,UAAUP,GACzBQ,GAAG,sBAAsB,gBAAEC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAK,OAAMnB,EAAW,CAACoB,QAAUF,EAASC,EAAS,KAAK,IAC3FE,UACIpE,MACL,SAAU6C,GACRG,EAAUH,EAAKwB,UACjB,IACA,SAAUjD,GACR0B,IACA3B,QAAQmD,IAAIlD,EAAMmD,MAClBpD,QAAQmD,IAAIlD,EAAMoD,QACpB,GA5BF,CA8BF,CAsBgCC,CAAU2C,EAAQ,EAC5CpF,SAAUmE,EAAS,UAEV,OAARlE,QAAQ,IAARA,OAAQ,EAARA,EAAU/C,SAAU,EAAI,KAAO6H,IAGjCT,IACC,UAAC,KAAI,YACH,SAAC,KAAU,CAACrH,UAAU,iBAAgB,UACpC,0BAAOuH,GAAgB,QAEzB,SAACe,EAAe,CAACtI,UAAW,kBAAkB,UAC5C,SAAC,KAAM,CACLuI,SAAO,EACPC,IAAI,UACJhJ,QAAS,WAnGnB8H,EAAgB,GAmG2B,EACjCmB,IAAKpB,EACLqB,MAAO,IACPC,OAAQ,aAOtB,EAIA,IAAML,GAAkBjG,EAAAA,EAAAA,IAAOuG,EAAAA,GAAPvG,CAAY,iK,iKCtDpC,IAxFyB,SAAH,GAOf,IANL3C,EAAE,EAAFA,GACAmJ,EAAK,EAALA,MACAhJ,EAAK,EAALA,MACAC,EAAU,EAAVA,WAAW,EAAD,EACVoH,SAAAA,OAAQ,OAAQ,EAChB4B,EAAQ,EAARA,SAEMC,GAAWC,EAAAA,EAAAA,UAGXC,EAAe,WAEnB,IAAMC,EAAQ5H,SAASC,cAAc,SAC/B4H,EAAW,IAAIC,SACjBxI,EAAM,GAEVsI,EAAMG,aAAa,OAAQ,QAC3BH,EAAMG,aAAa,SAAU,WAC7BH,EAAMvH,QAGNuH,EAAMI,UAAQ,uBAAG,qGAEE,GADXnJ,EAAO+I,EAAMvJ,MACnBuC,QAAQmD,IAAIlF,GACC,OAATA,EAAa,iBAaZ,OAZHgJ,EAASI,OAAO,QAASpJ,EAAK,IAAG,SAEzBa,EAAOJ,EAAMI,EAAI4C,KAAKhD,IAId,QADR4I,EAAwB,QAAnB,EAAGT,EAASU,eAAO,OAA4B,QAA5B,EAAhB,EAAkBC,YAAYC,sBAAc,WAA5B,EAAhB,EAA8CvJ,aAC5BwJ,IAAVJ,IAGf,QAFDK,EAAwB,QAAnB,EAAGd,EAASU,eAAO,aAAhB,EAAkBC,mBAEzB,IAALG,GAAAA,EAAOC,aAAaN,EAAO,GAEtB,OAALK,QAAK,IAALA,GAAAA,EAAOE,UAAUC,qBAAqBR,EAAM,YAAD,OAAc5I,EAAG,qFAC7D,qCAEUI,GAAG,IAAEiJ,SAAS,KAAI,8EAElB,KAAMC,UAAQ,IAAED,SAAS,KAAK,yDAIjD,EAEME,GAAUC,EAAAA,EAAAA,UAAQ,WACtB,MAAO,CACLC,QAAS,CACPC,UAAW,CACT,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CAAC,CAAChL,KAAM,CAAC,SAAS,EAAO,QAAS,SAAU,CAACG,MAAO,KACpD,CAAC,CAAC8K,KAAM,WAAY,CAACA,KAAM,UAAW,CAACC,OAAQ,MAAO,CAACA,OAAQ,MAAO,CAACC,MAAO,KAC9E,CAAC,QAAS,UAEZC,SAAU,CACRC,MAAO1B,IAIf,GAAG,IAEH,OACE,UAAC,KAAI,CAAClB,MAAO,CAACY,OAAQ,SAAU3I,UAAW,OAAO,WAChD,SAAC,KAAU,CAACD,QAAO,UAAKL,EAAE,UAAUM,UAAU,0BAAyB,UACrE,iBAAMA,UAAWF,GAAc,WAAW,SAAED,GAAS,WAEvD,SAAC+K,EAAW,CACVlL,GAAIA,GAAM,GACV8C,IAAK,SAAAqI,GACa,OAAZA,IACF9B,EAASU,QAAUoB,EAEvB,EACAhC,MAAOA,EACPiC,SAAUhC,EACVqB,QAASA,EACTjD,SAAUA,EACV6D,MAAM,OACNnL,YAAY,2DACZmI,MAAO,CAACY,OAAQ,YAIxB,EAIA,IAAMiC,GAAcvI,EAAAA,EAAAA,IAAO2I,IAAP3I,CAAkB,6FAChB,YAAU,SAAR6E,SAA0B,UAAY,aAAa,IAG5D,YAAU,SAARA,SAA0B,OAAS,OAAO,G,+DClD3D,IA/CoB,SAAH,GAYV,IAXL4D,EAAQ,EAARA,SACAxL,EAAI,EAAJA,KACAM,EAAW,EAAXA,YACAC,EAAK,EAALA,MACAgJ,EAAK,EAALA,MACA3B,EAAQ,EAARA,SACAxH,EAAE,EAAFA,GACAuL,EAAE,EAAFA,GAAG,EAAD,EACFlI,SAAAA,OAAQ,OAAQ,EAChBjD,EAAU,EAAVA,WAGMoL,EAFC,EAAPC,QAE2BjL,KAAI,SAAAiG,GAAI,OACjC,mBAAuB0C,MAAO1C,EAAK/C,IAAI,SACpC+C,EAAK0C,OADK1C,EAAK/C,IAET,IAGX,OACE,iCACE,SAAC,KAAU,CAACrD,QAAQ,cAAcC,UAAU,0BAAyB,UACnE,iBAAMA,UAAWF,EAAa,WAAa,GAAG,SAAED,GAAS,WAE3D,SAAC,KAAI,CAACoL,GAAIA,EAAG,UACX,UAAC,KAAW,CAACpC,MAAOA,EAAO9F,SAAUA,EAAUrD,GAAIA,EAAIJ,KAAMA,EAAMwL,SAAUA,EAAU5D,SAAUA,EAAS,WACxG,4BAAStH,IACRsL,SAKX,C,0ECfA,IAjB4B,SAAH,GAAsE,IAAjExL,EAAE,EAAFA,GAAImJ,EAAK,EAALA,MAAOuC,EAAI,EAAJA,KAAMvL,EAAK,EAALA,MAAOiL,EAAQ,EAARA,SAAUO,EAAI,EAAJA,KAAMnE,EAAQ,EAARA,SAAUnE,EAAQ,EAARA,SAC9E,OACE,SAAC,KAAI,WACH,SAAC,KAAa,CACZrD,GAAIA,GAAM,GACVG,MAAOA,GAAS,GAChBuL,KAAMA,GAAQ,GACdvC,MAAOA,GAAS,GAChBiC,SAAUA,EACVO,KAAMA,GAAQ,GACdnE,SAAUA,EACVnE,SAAUA,KAIlB,C,uJCfauI,EAAa,CACxBC,IAAK,MACLC,KAAM,OACNC,IAAK,MACLC,MAAO,SAIYC,EAAS,wCAmD3B,OAnD2B,oCAC5B,YAAkD,IAAlC/H,EAAI,EAAJA,KAAMgI,EAAK,EAALA,MAAO3F,EAAI,EAAJA,KAAMnF,EAAM,EAANA,OAAQF,EAAG,EAAHA,IACzC,IACE,IAAIiL,EAAAA,EAAAA,IAAQ/K,KAAW+K,EAAAA,EAAAA,IAAQjL,GAE7B,YADAwH,MAAM,uEAUR,GAAInC,EACF,cAA2B6F,OAAOC,QAAQ9F,GAAK,eAAE,CAA5C,sBAAO7C,EAAG,KAAEyF,EAAK,KACpBjI,EAAMA,EAAIoL,QAAQ,IAAD,OAAK5I,GAAOyF,EAC/B,EAGGgD,EAAAA,EAAAA,IAAQD,KACXhL,GACE,IACAkL,OAAOG,KAAKL,GACT1L,KAAI,SAAAkD,GAAG,OAAIA,EAAM,IAAMwI,EAAMxI,EAAI,IACjC8I,KAAK,MAGZ,IAAMC,EAAU,CACdC,OAAQ,mBACR,eAAgB,mBAChB,iBAAkBlL,OAAOmL,eAAeC,QAAQ,QAGlD,OAAQxL,GACN,KAAKwK,EAAWC,IACd,OAAOgB,EAAAA,GAAAA,IAAU3L,EAAK,CAACuL,QAASA,IAClC,KAAKb,EAAWE,KACd,OAAOe,EAAAA,GAAAA,KAAW3L,EAAKgD,EAAM,CAACuI,QAASA,IACzC,KAAKb,EAAWI,MACd,OAAOa,EAAAA,GAAAA,MAAY3L,EAAKgD,EAAM,CAACuI,QAASA,IAC1C,KAAKb,EAAWG,IACd,OAAOc,EAAAA,GAAAA,IAAU3L,EAAKgD,EAAM,CAACuI,QAASA,IAQ5C,CAFE,MAAOhK,GACPiG,MAAMjG,EAAMoD,QACd,CACF,KAAC,EAnD2B,E,yFCXxBiH,EAAMtI,uBAECuI,EAAW,CAEtBC,uBAAuB,GAAD,OAAKF,EAAG,gCAC9BG,WAAW,GAAD,OAAKH,EAAG,gBAClBI,sBAAsB,GAAD,OAAKJ,EAAG,qBAC7BK,YAAY,GAAD,OAAKL,EAAG,sBACnBM,WAAW,GAAD,OAAKN,EAAG,sBAClBO,OAAO,GAAD,OAAKP,EAAG,iBACdQ,aAAa,GAAD,OAAKR,EAAG,kBACpBS,qBAAqB,GAAD,OAAKT,EAAG,0BAC5BU,OAAO,GAAD,OAAKV,EAAG,iBACdW,UAAU,GAAD,OAAKX,EAAG,4BACjBY,YAAY,GAAD,OAAKZ,EAAG,iBACnBa,eAAe,GAAD,OAAKb,EAAG,yBAGtBc,kBAAkB,GAAD,OAAKd,EAAG,wBACzBe,2BAA2B,GAAD,OAAKf,EAAG,iCAClCgB,sBAAsB,GAAD,OAAKhB,EAAG,4BAC7BiB,oBAAoB,GAAD,OAAKjB,EAAG,0BAC3BkB,4BAA4B,GAAD,OAAKlB,EAAG,0CACnCmB,sBAAsB,GAAD,OAAKnB,EAAG,4BAC7BoB,mBAAmB,GAAD,OAAKpB,EAAG,yBAC1BqB,yBAAyB,GAAD,OAAKrB,EAAG,+BAChCsB,sBAAsB,GAAD,OAAKtB,EAAG,uCAG7BuB,eAAe,GAAD,OAAKvB,EAAG,qBACtBwB,cAAc,GAAD,OAAKxB,EAAG,6BACrByB,qBAAqB,GAAD,OAAKzB,EAAG,4BAC5B0B,oBAAoB,GAAD,OAAK1B,EAAG,oCAE3B2B,mBAAmB,GAAD,OAAK3B,EAAG,yBAC1B4B,iBAAiB,GAAD,OAAK5B,EAAG,oCACxB6B,wBAAwB,GAAD,OAAK7B,EAAG,8BAC/B8B,gCAAgC,GAAD,OAAK9B,EAAG,8BACvC+B,0BAA0B,GAAD,OAAK/B,EAAG,oCAEjCgC,cAAc,GAAD,OAAKhC,EAAG,oBACrBiC,aAAa,GAAD,OAAKjC,EAAG,2BACpBkC,cAAc,GAAD,OAAKlC,EAAG,oBACrBmC,sBAAsB,GAAD,OAAKnC,EAAG,oBAC7BoC,sBAAsB,GAAD,OAAKpC,EAAG,2BAE7BqC,mBAAmB,GAAD,OAAKrC,EAAG,yBAC1BsC,kBAAkB,GAAD,OAAKtC,EAAG,qCACzBuC,mBAAmB,GAAD,OAAKvC,EAAG,yBAC1BwC,2BAA2B,GAAD,OAAKxC,EAAG,yBAClCyC,2BAA2B,GAAD,OAAKzC,EAAG,qCAElC0C,iBAAiB,GAAD,OAAK1C,EAAG,uBACxB2C,gBAAgB,GAAD,OAAK3C,EAAG,iCACvB4C,iBAAiB,GAAD,OAAK5C,EAAG,uBACxB6C,yBAAyB,GAAD,OAAK7C,EAAG,uBAChC8C,yBAAyB,GAAD,OAAK9C,EAAG,iCAEhC+C,gBAAgB,GAAD,OAAK/C,EAAG,sBACvBgD,uBAAuB,GAAD,OAAKhD,EAAG,6BAC9BiD,yBAAyB,GAAD,OAAKjD,EAAG,+BAGhCkD,cAAc,GAAD,OAAKlD,EAAG,gBAIlB,eACAC,EAASC,uBAAyB,CAAC,IAAC,SAGpCD,EAASsB,eAAiB,CAAC,IAAC,SAC5BtB,EAASuB,cAAgB,CAAC,IAAC,SAC3BvB,EAASwB,qBAAuB,CAAC,IAAC,SAClCxB,EAASyB,oBAAsB,CAAC,IAAC,SACjCzB,EAAS0B,mBAAqB,CAAC,IAAC,SAChC1B,EAAS2B,iBAAmB,CAAC,IAAC,SAC9B3B,EAAS+B,cAAgB,CAAC,IAAC,SAC3B/B,EAASgC,aAAe,CAAC,IAAC,SAC1BhC,EAASoC,mBAAqB,CAAC,IAAC,SAChCpC,EAASqC,kBAAoB,CAAC,IAAC,SAC/BrC,EAASyC,iBAAmB,CAAC,IAAC,SAC9BzC,EAAS0C,gBAAkB,CAAC,IAAC,SAC7B1C,EAAS8C,gBAAkB,CAAC,IAAC,SAC7B9C,EAAS+C,uBAAyB,CAAC,IAAC,SACpC/C,EAASgD,yBAA2B,CAAC,IAAC,SAGtChD,EAASa,kBAAoB,CAAC,IAAC,SAC/Bb,EAASc,2BAA6B,CAAC,IAAC,SACxCd,EAASe,sBAAwB,CAAC,IAAC,SACnCf,EAASgB,oBAAsB,CAAC,IAAC,SACjChB,EAASiB,4BAA8B,CAAC,IAAC,SACzCjB,EAASmB,mBAAqB,CAAC,IAAC,SAChCnB,EAASoB,yBAA2B,CAAC,IAAC,SACtCpB,EAASqB,sBAAwB,CAAC,GAEjC,eACDrB,EAASE,WAAa,CAAC,IAAC,SACxBF,EAASiD,cAAgB,CAAC,IAAC,SAG3BjD,EAAS4B,wBAA0B,CAAC,IAAC,SACrC5B,EAASiC,cAAgB,CAAC,IAAC,SAC3BjC,EAASsC,mBAAqB,CAAC,IAAC,SAChCtC,EAAS2C,iBAAmB,CAAC,GAE3B,eAEF3C,EAAS6B,gCAAkC,CAAC,IAAC,SAC7C7B,EAAS8B,0BAA4B,CAAC,IAAC,SACvC9B,EAASkC,sBAAwB,CAAC,IAAC,SACnClC,EAASmC,sBAAwB,CAAC,IAAC,SACnCnC,EAASuC,2BAA6B,CAAC,IAAC,SACxCvC,EAASwC,2BAA6B,CAAC,IAAC,SACxCxC,EAAS4C,yBAA2B,CAAC,IAAC,SACtC5C,EAAS6C,yBAA2B,CAAC,E,4QCpD1C,EAtD0B,SAAH,GAAqF,IAAhFzG,EAAK,EAALA,MAAOjK,EAAO,EAAPA,QAASG,EAAU,EAAVA,WAAY+L,EAAQ,EAARA,SAAU9L,EAAM,EAANA,OAAQ2Q,EAAS,EAATA,UAAWC,EAAM,EAANA,OAAQ3Q,EAAQ,EAARA,SACpFJ,EAAuDgK,EAAvDhK,MAAgBgR,GAAuChH,EAAhDiH,QAAgDjH,EAAvCgH,aAAaE,EAA0BlH,EAA1BkH,aAAcC,EAAYnH,EAAZmH,SAOlD,OACE,UAACC,EAAA,EAA2B,CAC1BrR,QAASA,EACTC,MAAO,2BACPE,WAAYA,EACZC,OAAQA,EACRE,QAAS,eACTD,SAAUA,EAAS,WAEnB,UAAC,KAAI,CAACe,UAAW,MAAM,WACrB,SAAC,IAAU,CACTN,GAAI,QACJE,YAAa,wCACbC,MAAO,wCACPgJ,MAAOhK,GAAS,GAChBiM,SAAUA,KAEZ,SAAC,IAAW,CACVpL,GAAI,WACJE,YAAa,uEACbC,MAAO,2BACPsL,QA1Bc,CACpB,CAAC/H,IAAK,SAAUyF,MAAO,gBACvB,CAACzF,IAAK,SAAUyF,MAAO,uBAyBjBA,MAAOmH,GAAY,GACnBlF,SAAUA,QAGd,SAAC,KAAI,CAAC9K,UAAW,MAAM,UACrB,SAAC,IAAe,CACdN,GAAI,QACJmF,KAAM,OACNjF,YAAa,4BACbC,MAAO,4BACPgJ,MAAOgH,EACP/E,SAAUA,OAGd,SAAC,KAAI,CAAC9K,UAAW,MAAM,UACrB,SAAC,IAAe,CAACN,GAAG,QAAQG,MAAM,kCAASgJ,MAAOkH,EAAcjF,SAAUA,OAE5E,SAAC,KAAI,CAAC9K,UAAW,MAAM,UACrB,SAACkQ,EAAA,EAAgB,CAACxQ,GAAG,UAAUG,MAAO,4BAASgJ,MAAO+G,EAAQ9G,SAAU6G,QAIhF,E,4CCyJA,EA5MmB,WACjB,OAA0BxQ,EAAAA,EAAAA,YAAU,eAA7BgR,EAAK,KAAEC,EAAQ,KACtB,GAAwCjR,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7CkR,EAAY,KAAEC,EAAe,KACpC,GAAkCnR,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAvCoR,EAAS,KAAEC,EAAY,KAC9B,GAA4BrR,EAAAA,EAAAA,UAAS,IAAG,eAAjCyQ,EAAM,KAAED,EAAS,KACxB,GAAkCxQ,EAAAA,EAAAA,WAAS,GAAM,eAA1CsR,EAAS,KAAEC,EAAY,KAGxBC,EAAa,yCAAG,oHAEGhF,EAAAA,EAAAA,QAAkB,CACrC7K,OAAQwK,EAAAA,EAAAA,IACR1K,IAAI,GAAD,OAAK6L,EAAAA,EAAAA,oBAA4B,SAAS,KAC7C,OACe,GADf,SAHK7I,EAAI,EAAJA,KAIP1B,QAAQmD,IAAIzB,GACPA,EAAKgN,aAAa/E,EAAAA,EAAAA,IAAY,OAAJjI,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,QAAO,iDAGzB,OAAX,OAAJlD,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,OAER8C,MAAU,OAAJxE,QAAI,IAAJA,OAAI,EAAJA,EAAM2B,SAEd6K,EAASxM,EAAKkD,OAAO+J,wBAAuB,kDAE5C3O,QAAQmD,IAAI,EAAD,IAAO,0DAErB,kBAlBkB,oCAmBnBlC,EAAAA,EAAAA,YAAU,WACRwN,GACF,GAAG,IAGH,IAAMG,EAAe,yCAAG,8FACE,GADMpR,EAAE,EAAFA,GAC9BgR,GAAcD,IACV/Q,EAAG,CAAD,yCAEmBiM,EAAAA,EAAAA,QAAkB,CACrC7K,OAAQwK,EAAAA,EAAAA,IACR1K,IAAI,GAAD,OAAK6L,EAAAA,EAAAA,oBAA4B,YAAI/M,KACxC,OACe,GADf,SAHKkE,EAAI,EAAJA,KAIP1B,QAAQmD,IAAIzB,GACPA,EAAKgN,aAAa/E,EAAAA,EAAAA,IAAY,OAAJjI,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,QAAO,mDAGzB,OAAX,OAAJlD,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,OACRpD,QAAQmD,IAAIzB,GACZ0M,EAAgB1M,EAAKkD,QACrB0J,EAAa5M,EAAKkD,QAClB6I,EAAU/L,EAAKkD,OAAOgJ,UAEtB1H,MAAU,OAAJxE,QAAI,IAAJA,OAAI,EAAJA,EAAM2B,SACb,kDAEDrD,QAAQmD,IAAI,EAAD,IAAO,gCAGpBiL,EAAgB,CACdzR,MAAO,GACPmR,SAAU,GACVF,QAAS,GACTiB,UAAW,GACXlB,YAAa,GACbE,aAAc,KAEhBS,EAAa,CACX3R,MAAO,GACPmR,SAAU,GACVF,QAAS,GACTiB,UAAW,GACXlB,YAAa,GACbE,aAAc,KAEhBJ,EAAU,IAAG,0DAEhB,gBA1CoB,sCAwGfqB,EAA4B,yCAAG,2FAC1B,GAAIX,EAAN3Q,IACHwB,OAAO+P,QAAQ,iGAAsB,CAAD,yCAEftF,EAAAA,EAAAA,QAAkB,CACrC7K,OAAQwK,EAAAA,EAAAA,SAER,OACe,GADf,SAHK1H,EAAI,EAAJA,KAIP1B,QAAQmD,IAAIzB,GACPA,EAAKgN,aAAa/E,EAAAA,EAAAA,IAAY,OAAJjI,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,QAAO,mDAGzB,OAAX,OAAJlD,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,OACR8C,MAAMxE,EAAK2B,SACXrE,OAAOgQ,UAEP9I,MAAU,OAAJxE,QAAI,IAAJA,OAAI,EAAJA,EAAM2B,SACb,kDAEDrD,QAAQmD,IAAI,EAAD,IAAO,0DAGvB,kBAtBiC,mCA6BlC,OANAlC,EAAAA,EAAAA,YAAU,WACHsN,GACHd,EAAU,GAEd,GAAG,CAACc,KAGF,UAAC,KAAI,YACH,SAACU,EAAA,EAAU,CAACtS,MAAM,iDAClB,SAAC,KAAI,CAACoM,GAAI,GAAG,UACX,UAAC,KAAK,CAACjL,UAAU,OAAM,WACrB,SAAC,KAAW,WACV,SAAC,KAAK,CAACA,UAAU,UAAS,UACxB,SAAC,KAAI,CAACiL,GAAI,EAAE,UACV,SAAC,KAAO,CAACxL,MAAM,UAAUD,QAAS,kBAAMsR,GAAiB,EAAC,iCAMhE,SAAC,KAAS,WACR,SAACM,EAAA,EAAY,CACXjB,MAAOA,EACP3Q,QAASsR,EACTO,QAASC,EAAAA,GACTtR,UAAW,WACXf,SAAU+R,YAKlB,SAAC,EAAiB,CAChBpS,QAAS6R,EACT1R,WAAY2R,EACZ7H,MAAOwH,EACPvF,SAtH4B,SAAH,GAA+B,IAAD,IAAzByG,OAAS7R,EAAE,EAAFA,GAAImJ,EAAK,EAALA,MAC/CyH,GAAgB,kBACXD,GAAY,cACd3Q,EAAKmJ,IAEV,EAkHM7J,OAhHgC,SAAAwS,GACpC,IAAO9R,EAA6B2Q,EAA7B3Q,GAAIb,EAAyBwR,EAAzBxR,MAAOiR,EAAkBO,EAAlBP,QAASnQ,EAAS0Q,EAAT1Q,MAG3B,GAFAuC,QAAQmD,IAAIgL,GACZnO,QAAQmD,IAAIkL,GACRA,EAAU1R,QAAUA,GAAS0R,EAAUT,UAAYA,GAAWS,EAAU5Q,QAAUA,EACpF,GAAIuB,OAAO+P,QAAQ,oFAAoB,CACrC,IAAKpS,EAAO,OAAOuJ,MAAM,aACzB,IAAKzI,EAAO,OAAOyI,MAAM,YACzB,IAAK0H,EAAS,OAAO1H,MAAM,eAC3BgI,EAASD,EAAMjQ,KAAI,SAAA2I,GAAK,OAAKA,EAAMnJ,KAAOA,EAAK2Q,EAAexH,CAAK,KACnE6H,GAAa,EACf,MACEA,GAAa,QAELc,GACVd,GAAa,EAEjB,EAgGMd,OAAQA,EACRD,UAAWA,EACX1Q,SAAU+R,MAIlB,C,8FCnNA,EADmB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAC,EAAG,SAAY,CAAC,CAAE,IAAO,QAAS,MAAS,CAAC,KAAQ,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,8DAAiE,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gEAAoE,KAAQ,OAAQ,MAAS,Y,WCKpaS,EAAe,SAAsBlP,EAAOC,GAC9C,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,CAAC,EAAGJ,GAAQ,CAAC,EAAG,CAC5FC,IAAKA,EACLI,KAAM8O,IAEV,EACAD,EAAa3O,YAAc,eAC3B,MAA4BL,EAAAA,WAAiBgP,E","sources":["components/Modal/partnerCenter/DetailModalEditModeTemplate.js","components/forms/downloadForm/MultiFileDownloadForm.js","../node_modules/@ant-design/icons-svg/es/asn/InboxOutlined.js","../node_modules/@ant-design/icons/es/icons/InboxOutlined.js","components/forms/inputForm/ModalFilesInput.js","components/forms/inputForm/ModalImageInput.js","components/forms/inputForm/ModalQuillEditor.js","components/forms/inputForm/ModalSelect.js","components/forms/inputForm/ModalTextArrayInput.js","dataManager/apiConfig.js","dataManager/apiMapper.js","components/Modal/partnerCenter/notice/NoticeDetailModal.js","pages/partnerCenter/notice/NoticeList.js","../node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js"],"sourcesContent":["import {CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle} from '@coreui/react'\nimport {useState} from 'react'\n\nconst DetailModalEditModeTemplate = ({visible, title, children, setVisible, upDate, onDelete, btnText}) => {\n  const [editMode, setEditMode] = useState(false)\n  const handleEditModeToggle = () => {\n    setEditMode(!editMode)\n    if (editMode) {\n      upDate()\n    }\n  }\n\n  return (\n    <CModal size='lg' visible={visible} onClose={() => upDate()}>\n      <CModalHeader>\n        <CModalTitle>{title || 'Not Title'}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>{children || <h1>Not Children</h1>}</CModalBody>\n      <CModalFooter>\n        <CButton onClick={() => handleEditModeToggle()} color={editMode ? 'success' : 'primary'}>\n          {btnText || 'Not Btn Title'}\n        </CButton>\n        {onDelete && (\n          <CButton onClick={() => onDelete()} color={'danger'}>\n            삭제\n          </CButton>\n        )}\n        <CButton color='secondary' onClick={() => setVisible(false)}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default DetailModalEditModeTemplate\n","import {CCol, CFormLabel} from '@coreui/react'\nimport {map} from 'lodash'\nimport styled from 'styled-components'\nimport {antdImageFormat} from '../../../utils/awsCustom'\n\nconst MultiFileDownloadForm = ({id, placeholder, files, label, isRequired}) => {\n  const downloadFile = (url, fileName) => {\n    url = antdImageFormat(url)\n\n    fetch(url, {method: 'GET'})\n      .then(res => {\n        return res.blob()\n      })\n      .then(blob => {\n        const url = window.URL.createObjectURL(blob)\n        const a = document.createElement('a')\n        a.href = url\n        a.download = fileName\n        document.body.appendChild(a)\n        a.click()\n        setTimeout(_ => {\n          window.URL.revokeObjectURL(url)\n        }, 60000)\n        a.remove()\n      })\n      .catch(err => {\n        console.error('err: ', err)\n      })\n  }\n\n  //onClick={() => downloadFile(file, fileName)}\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol>\n        {files?.length > 0 ? (\n          files.map((file, index) => {\n            const splitUrl = file.split('/') //   \"/\" 로 전체 url 을 나눈다\n            const splitUrlLength = splitUrl.length\n            const fileName = splitUrl[splitUrlLength - 1] // 나누어진 배열의 맨 끝이 파일명이다\n            return (\n              <div key={index} className='col-form-label'>\n                <SpanStyle\n                  role='link'\n                  key={index}\n                  href={antdImageFormat(file)}\n                  onClick={() => downloadFile(file, fileName)}\n                >\n                  {index + 1}. {fileName}\n                </SpanStyle>\n              </div>\n            )\n          })\n        ) : (\n          <div className='col-form-label'>등록된 파일이 없습니다.</div>\n        )}\n      </CCol>\n    </>\n  )\n}\nexport default MultiFileDownloadForm\n\nconst SpanStyle = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  padding: 0 8px;\n  line-height: 1.5714285714285714;\n  flex: auto;\n  transition: all 0.3s;\n  color: #1677ff !important;\n  text-decoration: none;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n`\n","// This icon file is generated automatically.\nvar InboxOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M885.2 446.3l-.2-.8-112.2-285.1c-5-16.1-19.9-27.2-36.8-27.2H281.2c-17 0-32.1 11.3-36.9 27.6L139.4 443l-.3.7-.2.8c-1.3 4.9-1.7 9.9-1 14.8-.1 1.6-.2 3.2-.2 4.8V830a60.9 60.9 0 0060.8 60.8h627.2c33.5 0 60.8-27.3 60.9-60.8V464.1c0-1.3 0-2.6-.1-3.7.4-4.9 0-9.6-1.3-14.1zm-295.8-43l-.3 15.7c-.8 44.9-31.8 75.1-77.1 75.1-22.1 0-41.1-7.1-54.8-20.6S436 441.2 435.6 419l-.3-15.7H229.5L309 210h399.2l81.7 193.3H589.4zm-375 76.8h157.3c24.3 57.1 76 90.8 140.4 90.8 33.7 0 65-9.4 90.3-27.2 22.2-15.6 39.5-37.4 50.7-63.6h156.5V814H214.4V480.1z\" } }] }, \"name\": \"inbox\", \"theme\": \"outlined\" };\nexport default InboxOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport InboxOutlinedSvg from \"@ant-design/icons-svg/es/asn/InboxOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar InboxOutlined = function InboxOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: InboxOutlinedSvg\n  }));\n};\nInboxOutlined.displayName = 'InboxOutlined';\nexport default /*#__PURE__*/React.forwardRef(InboxOutlined);","import {InboxOutlined} from '@ant-design/icons'\nimport {Upload} from 'antd'\nimport styled from 'styled-components'\nimport {CFormLabel} from '@coreui/react'\nimport AWS from 'aws-sdk'\nimport {useEffect} from 'react'\nimport {antdImageFormat, returnBucketNameFile} from '../../../utils/awsCustom'\nimport MultiFileDownloadForm from '../downloadForm/MultiFileDownloadForm'\n\nconst ModalFilesInput = ({files, label, id, disabled, fileList, setFileList, filePath, isRequired}) => {\n  // files = 조회를 통해 가져온 데이터가 있는 경우\n  useEffect(() => {\n    if (files && files.length > 0) {\n      setFileList(\n        files.map((file, index) => ({\n          key: index,\n          uid: index,\n          name: file.fileTitle ? file.fileTitle : decodeURI(file.split('/')[file.split('/').length - 1]),\n          status: 'done',\n          url: file.file ? antdImageFormat(file.file) : antdImageFormat(file),\n        })),\n      )\n    }\n  }, [files])\n\n  const getFileNameFromURL = url => {\n    //   \"/\" 로 전체 url 을 나눈다\n    const splitUrl = url.split('/')\n    const splitUrlLength = splitUrl.length\n    // 나누어진 배열의 맨 끝이 파일명이다\n    const fileName = splitUrl[splitUrlLength - 1]\n    return fileName\n  }\n\n  const onSuccess = successData => {\n    const httpRequest = successData.request.httpRequest\n    const file = httpRequest.body\n    const {protocol, host} = httpRequest.endpoint\n\n    const fileData = {\n      uid: successData.request.params.Key,\n      name: file.name,\n      status: 'done',\n      url: `${protocol}//${host}${httpRequest.path}`,\n    }\n    setFileList([...fileList, fileData])\n  }\n\n  // 파일 업로드\n  const customReq = ({file, onError, onProgress, onSuccess}) => {\n    AWS.config.update({\n      region: process.env.REACT_APP_AWS_REGION,\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n    })\n\n    const S3 = new AWS.S3()\n    const fileName = file.name.replaceAll(' ', '')\n    const objParams = {\n      Bucket: returnBucketNameFile(filePath),\n      Key: fileName,\n      Body: file,\n      ContentType: file.type, // TODO: You should set content-type because AWS SDK will not automatically set file MIME\n    }\n\n    const upload = S3.putObject(objParams)\n      .on('httpUploadProgress', ({loaded, total}) => onProgress({percent: (loaded / total) * 100}))\n      .promise()\n    upload.then(\n      function (data) {\n        onSuccess(data.$response)\n      },\n      function (error) {\n        onError()\n        console.log(error.code)\n        console.log(error.message)\n      },\n    )\n  }\n\n  // 파일 삭제\n  const onDelete = item => {\n    setFileList(fileList.filter(file => file.uid !== item.uid))\n  }\n\n  const props = {\n    name: 'file',\n    multiple: true,\n    disabled: disabled,\n    fileList: fileList,\n    customRequest(data) {\n      customReq(data)\n    },\n    onSuccess(data) {\n      onSuccess(data)\n    },\n    onRemove(data) {\n      onDelete(data)\n    },\n  }\n\n  return (\n    <>\n      <DivBox className={disabled}>\n        <CFormLabel className={isRequired ? 'required' : ''}>{label || ''}</CFormLabel>\n        <Upload.Dragger {...props} id={id}>\n          <p className='ant-upload-drag-icon'>\n            <InboxOutlined />\n          </p>\n          <p className='ant-upload-text'>업로드하려면 이 영역으로 파일을 클릭하거나 드래그하세요.</p>\n        </Upload.Dragger>\n      </DivBox>\n    </>\n  )\n}\n\nexport default ModalFilesInput\n\nconst DivBox = styled.div`\n  border-radius: 0.375rem;\n  &.disabled {\n    background: #d8dbe0;\n  }\n  & .ant-upload-disabled {\n    background: #d8dbe0;\n    border: 0.5px dashed #b1b7c1;\n    opacity: 1;\n  }\n  & > span {\n    display: flex;\n    flex-direction: column;\n  }\n`\n","import {PlusOutlined} from '@ant-design/icons'\nimport {Upload} from 'antd'\nimport {useEffect, useState} from 'react'\nimport {CCol, CFormLabel, CImage} from '@coreui/react'\nimport styled from 'styled-components'\nimport AWS from 'aws-sdk'\nimport {antdImageFormat, returnBucketName} from '../../../utils/awsCustom'\n\nconst getBase64 = file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = error => reject(error)\n  })\n\nconst ModalImageInput = ({images, id, label, fileList, setFileList, imgPath, readOnly, oneSheet = false}) => {\n  const [previewOpen, setPreviewOpen] = useState(false)\n  const [previewImage, setPreviewImage] = useState('')\n  const [previewTitle, setPreviewTitle] = useState('')\n\n  useEffect(() => {\n    if (images && images.length > 0) {\n      setFileList(\n        images.map(path => ({\n          uid: path,\n          name: decodeURI(path.split('/')[path.split('/').length - 1]),\n          status: 'done',\n          url: antdImageFormat(path),\n        })),\n      )\n    }\n  }, [images, setFileList])\n\n  const handleCloseImage = () => {\n    setPreviewImage('')\n  }\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj)\n    }\n\n    setPreviewImage(file.url || file.preview)\n    setPreviewOpen(true)\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\n  }\n\n  const onSuccess = successData => {\n    const httpRequest = successData.request.httpRequest\n    const file = httpRequest.body\n    const {protocol, host} = httpRequest.endpoint\n\n    const fileData = {\n      uid: successData.request.params.Key,\n      name: file.name,\n      status: 'done',\n      url: `${protocol}//${host}${httpRequest.path}`,\n    }\n\n    setFileList([...fileList, fileData])\n  }\n\n  const customReq = ({file, onError, onProgress, onSuccess}) => {\n    if (oneSheet && fileList.length === 1) {\n      alert('이미지는 한장만 등록 가능합니다!')\n      return\n    }\n    AWS.config.update({\n      region: process.env.REACT_APP_AWS_REGION,\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n    })\n\n    const S3 = new AWS.S3()\n    const fileName = file.name.replaceAll(' ', '')\n\n    const objParams = {\n      Bucket: returnBucketName(imgPath),\n      Key: fileName,\n      Body: file,\n      ContentType: file.type, // TODO: You should set content-type because AWS SDK will not automatically set file MIME\n    }\n\n    const upload = S3.putObject(objParams)\n      .on('httpUploadProgress', ({loaded, total}) => onProgress({percent: (loaded / total) * 100}))\n      .promise()\n    upload.then(\n      function (data) {\n        onSuccess(data.$response)\n      },\n      function (error) {\n        onError()\n        console.log(error.code)\n        console.log(error.message)\n      },\n    )\n  }\n\n  const onDelete = item => {\n    setFileList(fileList.filter(file => file.uid !== item.uid))\n  }\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{marginTop: 8}}>Upload</div>\n    </div>\n  )\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span>{label || ' * '}</span>\n      </CFormLabel>\n      <Upload\n        listType='picture-card'\n        fileList={fileList}\n        onPreview={handlePreview}\n        onSuccess={data => onSuccess(data)}\n        onRemove={data => onDelete(data)}\n        customRequest={reqData => customReq(reqData)}\n        disabled={readOnly}\n      >\n        {fileList?.length >= 8 ? null : uploadButton}\n      </Upload>\n\n      {previewImage && (\n        <CCol>\n          <CFormLabel className='col-form-label'>\n            <span>{previewTitle || ''}</span>\n          </CFormLabel>\n          <PreviewImageBox className={'text-center p-2'}>\n            <CImage\n              rounded\n              alt='example'\n              onClick={() => handleCloseImage()}\n              src={previewImage}\n              width={300}\n              height={300}\n            />\n          </PreviewImageBox>\n        </CCol>\n      )}\n    </>\n  )\n}\n\nexport default ModalImageInput\n\nconst PreviewImageBox = styled(CCol)`\n  padding: 0.5rem 0;\n  background: #fafafa;\n  border: 1px dashed #d9d9d9;\n  border-radius: 2px;\n  & img {\n    cursor: pointer;\n  }\n`\n","import React, {useMemo, useRef} from 'react'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\nimport {CCol, CFormLabel} from '@coreui/react'\nimport styled from 'styled-components'\n\nconst ModalQuillEditor = ({\n  id, // Tag ID\n  value, // useState\n  label, // Title\n  isRequired, // isRequired\n  readOnly = false,\n  setValue, // onChange function\n}) => {\n  const QuillRef = useRef()\n\n  // 이미지를 업로드 하기 위한 함수\n  const imageHandler = () => {\n    // 파일을 업로드 하기 위한 input 태그 생성\n    const input = document.createElement('input')\n    const formData = new FormData()\n    let url = ''\n\n    input.setAttribute('type', 'file')\n    input.setAttribute('accept', 'image/*')\n    input.click()\n\n    // 파일이 input 태그에 담기면 실행 될 함수\n    input.onchange = async () => {\n      const file = input.files\n      console.log(file)\n      if (file !== null) {\n        formData.append('image', file[0])\n        try {\n          const res = (url = res.data.url)\n          // 커서의 위치를 알고 해당 위치에 이미지 태그를 넣어주는 코드\n          // 해당 DOM의 데이터가 필요하기에 useRef를 사용.\n          const range = QuillRef.current?.getEditor().getSelection()?.index\n          if (range !== null && range !== undefined) {\n            let quill = QuillRef.current?.getEditor()\n\n            quill?.setSelection(range, 1)\n\n            quill?.clipboard.dangerouslyPasteHTML(range, `<img src=${url} alt=\"이미지 태그가 삽입됩니다.\" />`)\n          }\n\n          return {...res, success: true}\n        } catch (error) {\n          return {...error.response, success: false}\n        }\n      }\n    }\n  }\n\n  const modules = useMemo(() => {\n    return {\n      toolbar: {\n        container: [\n          ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n          [{size: ['small', false, 'large', 'huge']}, {color: []}],\n          [{list: 'ordered'}, {list: 'bullet'}, {indent: '-1'}, {indent: '+1'}, {align: []}],\n          ['image', 'video'],\n        ],\n        handlers: {\n          image: imageHandler,\n        },\n      },\n    }\n  }, [])\n\n  return (\n    <CCol style={{height: '300px'}} className={'pb-5'}>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired && 'required'}>{label || ' * '}</span>\n      </CFormLabel>\n      <EditorStyle\n        id={id || ''}\n        ref={element => {\n          if (element !== null) {\n            QuillRef.current = element\n          }\n        }}\n        value={value}\n        onChange={setValue}\n        modules={modules}\n        readOnly={readOnly}\n        theme='snow'\n        placeholder='내용을 입력해주세요.'\n        style={{height: '100%'}}\n      />\n    </CCol>\n  )\n}\n\nexport default ModalQuillEditor\n\nconst EditorStyle = styled(ReactQuill)`\n  background-color: ${({readOnly}) => (readOnly ? '#d8dbe0' : 'transparent')};\n\n  .ql-toolbar {\n    display: ${({readOnly}) => (readOnly ? 'none' : 'block')};\n  }\n`\n","import {CCol, CFormSelect, CFormLabel} from '@coreui/react'\nimport * as PorpTypes from 'prop-types'\n\nconst ModalSelect = ({\n  onChange,\n  size,\n  placeholder,\n  label,\n  value,\n  readOnly,\n  id,\n  xs,\n  disabled = false,\n  isRequired,\n  options,\n}) => {\n  const newOptions = options.map(item => (\n    <option key={item.key} value={item.key}>\n      {item.value}\n    </option>\n  ))\n\n  return (\n    <>\n      <CFormLabel htmlFor='staticEmail' className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol xs={xs}>\n        <CFormSelect value={value} disabled={disabled} id={id} size={size} onChange={onChange} readOnly={readOnly}>\n          <option>{placeholder}</option>\n          {newOptions}\n        </CFormSelect>\n      </CCol>\n    </>\n  )\n}\n\nModalSelect.propTypes = {\n  onChange: PorpTypes.func,\n  size: PorpTypes.string,\n  placeholder: PorpTypes.string,\n  label: PorpTypes.string,\n  value: PorpTypes.any,\n  readOnly: PorpTypes.bool,\n  id: PorpTypes.string,\n  disabled: PorpTypes.bool,\n  isRequired: PorpTypes.bool,\n  options: PorpTypes.any,\n}\n\nexport default ModalSelect\n","import {CCol, CFormTextarea} from '@coreui/react'\nimport React from 'react'\n\nconst ModalTextArrayInput = ({id, value, rows, label, onChange, text, readOnly, disabled}) => {\n  return (\n    <CCol>\n      <CFormTextarea\n        id={id || ''}\n        label={label || ''}\n        rows={rows || 10}\n        value={value || ''}\n        onChange={onChange}\n        text={text || ''}\n        readOnly={readOnly}\n        disabled={disabled}\n      />\n    </CCol>\n  )\n}\n\nexport default ModalTextArrayInput\n","import Axios from 'axios'\nimport {isEmpty} from '../utils/utility'\n\nexport const HttpMethod = {\n  GET: 'get',\n  POST: 'post',\n  PUT: 'put',\n  PATCH: 'patch',\n  // DELETE: \"delete\",\n}\n\nexport default class ApiConfig {\n  static request({data, query, path, method, url}) {\n    try {\n      if (isEmpty(method) || isEmpty(url)) {\n        alert('HTTP Method 와 URL 을 확인해주세요.')\n        return\n      }\n\n      // const api = ApiMapper[method][url]\n      // if (isEmpty(api)) {\n      //   alert(`요청하신 API가 존재하지 않습니다.\\n[METHOD: ${method}]\\n[URL:${url}]`)\n      //   return\n      // }\n\n      if (path) {\n        for (const [key, value] of Object.entries(path)) {\n          url = url.replace(`:${key}`, value)\n        }\n      }\n\n      if (!isEmpty(query)) {\n        url +=\n          '?' +\n          Object.keys(query)\n            .map(key => key + '=' + query[key])\n            .join('&')\n      }\n\n      const headers = {\n        accept: 'application/json',\n        'Content-Type': 'application/json',\n        'X-Access-Token': window.sessionStorage.getItem('jwt'),\n      }\n\n      switch (method) {\n        case HttpMethod.GET:\n          return Axios.get(url, {headers: headers})\n        case HttpMethod.POST:\n          return Axios.post(url, data, {headers: headers})\n        case HttpMethod.PATCH:\n          return Axios.patch(url, data, {headers: headers})\n        case HttpMethod.PUT:\n          return Axios.put(url, data, {headers: headers})\n        // case HttpMethod.DELETE:\n        //   return Axios.delete(url, data, {headers: headers})\n        default:\n          break\n      }\n    } catch (error) {\n      alert(error.message)\n    }\n  }\n}\n","const API = process.env.REACT_APP_API\n\nexport const EndPoint = {\n  // ------ 오케이포스 홈페이지\n  GET_V1_TEST_AUTO_LOGIN: `${API}/test/v1/jwt/check/:isManual`,\n  POST_LOGIN: `${API}/admin/login`,\n  POST_TEST_V1_REGISTER: `${API}/test/v1/register`,\n  RECRUITMENT: `${API}/admin/recruitment`,\n  TALENTPOOL: `${API}/admin/talent-pool`,\n  EDITOR: `${API}/admin/editor`,\n  HOME_INQUIRY: `${API}/admin/inquiry`,\n  ENGLISH_HOME_INQUIRY: `${API}/admin/english/inquiry`,\n  NOTICE: `${API}/admin/notice`,\n  DATA_ROOM: `${API}/admin/english/data-room`,\n  HOME_BANNER: `${API}/admin/banner`,\n  ENGLISH_BANNER: `${API}/admin/english/banner`,\n\n  // ------ 파트너 센터 페이지\n  GET_PARTNER_USERS: `${API}/admin/partner/users`, // 유저 리스트\n  GET_PARTNER_INACTIVE_USERS: `${API}/admin/partner/users/inactive`, // 탈퇴 유저 리스트\n  GET_PARTNER_INQUIRIES: `${API}/admin/partner/inquiries`, // 1:1 문의 리스트\n  GET_PARTNER_NOTICES: `${API}/admin/partner/notices`, // 공지사항 리스트\n  GET_PARTNER_AGENCYAPPLICANT: `${API}/admin/partner/notices/agencyApplicant`, // 영업점 딜러 지원 리스트\n  GET_PARTNER_DATAROOMS: `${API}/admin/partner/dataRooms`, // 자료실 리스트\n  GET_PARTNER_ORDERS: `${API}/admin/partner/orders`, // 발주신청 리스트\n  GET_PARTNER_MAINTENANCES: `${API}/admin/partner/maintenances`, // 유지보수 신청 리스트\n  GET_PARTNER_SCHEDULES: `${API}/admin/partner/educations/schedules`, // 교육일정 리스트\n\n  // ------ 가맹점 전용 공식몰 페이지\n  GET_MALL_USERS: `${API}/admin/mall/users`,\n  GET_MALL_USER: `${API}/admin/mall/users/:userId`,\n  GET_MALL_RESIGNUSERS: `${API}/admin/mall/users/resign`,\n  GET_MALL_RESIGNUSER: `${API}/admin/mall/users/resign/:userId`,\n\n  GET_MALL_INQUIRIES: `${API}/admin/mall/inquiries`,\n  GET_MALL_INQUIRY: `${API}/admin/mall/inquiries/:inquiryId`,\n  POST_MALL_INQUIRY_REPLY: `${API}/admin/mall/inquiryReplies`,\n  PATCH_MALL_UPDATE_INQUIRY_REPLY: `${API}/admin/mall/inquiryReplies`,\n  PATCH_MALL_DELETE_INQUIRY: `${API}/admin/mall/inquiries/:inquiryId`,\n\n  GET_MALL_FAQS: `${API}/admin/mall/faqs`,\n  GET_MALL_FAQ: `${API}/admin/mall/faqs/:faqId`,\n  POST_MALL_FAQ: `${API}/admin/mall/faqs`,\n  PATCH_MALL_UPDATE_FAQ: `${API}/admin/mall/faqs`,\n  PATCH_MALL_DELETE_FAQ: `${API}/admin/mall/faqs/:faqId`,\n\n  GET_MALL_DATAROOMS: `${API}/admin/mall/datarooms`,\n  GET_MALL_DATAROOM: `${API}/admin/mall/datarooms/:dataRoomId`,\n  POST_MALL_DATAROOM: `${API}/admin/mall/datarooms`,\n  PATCH_MALL_UPDATE_DATAROOM: `${API}/admin/mall/datarooms`,\n  PATCH_MALL_DELETE_DATAROOM: `${API}/admin/mall/datarooms/:dataRoomId`,\n\n  GET_MALL_BANNERS: `${API}/admin/mall/banners`,\n  GET_MALL_BANNER: `${API}/admin/mall/banners/:bannerId`,\n  POST_MALL_BANNER: `${API}/admin/mall/banners`,\n  PATCH_MALL_UPDATE_BANNER: `${API}/admin/mall/banners`,\n  PATCH_MALL_DELETE_BANNER: `${API}/admin/mall/banners/:bannerId`,\n\n  GET_MALL_ORDERS: `${API}/admin/mall/orders`,\n  GET_MALL_CANCEL_ORDERS: `${API}/admin/mall/orders/cancel`,\n  GET_MALL_EXCHANGE_ORDERS: `${API}/admin/mall/orders/exchange`,\n\n  // ------ 대리점 전용 파트너 센터\n  POST_REGISTER: `${API}/admin/join`,\n}\n\nconst ApiMapper = {\n  get: {\n    [EndPoint.GET_V1_TEST_AUTO_LOGIN]: {},\n\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.GET_MALL_USERS]: {},\n    [EndPoint.GET_MALL_USER]: {},\n    [EndPoint.GET_MALL_RESIGNUSERS]: {},\n    [EndPoint.GET_MALL_RESIGNUSER]: {},\n    [EndPoint.GET_MALL_INQUIRIES]: {},\n    [EndPoint.GET_MALL_INQUIRY]: {},\n    [EndPoint.GET_MALL_FAQS]: {},\n    [EndPoint.GET_MALL_FAQ]: {},\n    [EndPoint.GET_MALL_DATAROOMS]: {},\n    [EndPoint.GET_MALL_DATAROOM]: {},\n    [EndPoint.GET_MALL_BANNERS]: {},\n    [EndPoint.GET_MALL_BANNER]: {},\n    [EndPoint.GET_MALL_ORDERS]: {},\n    [EndPoint.GET_MALL_CANCEL_ORDERS]: {},\n    [EndPoint.GET_MALL_EXCHANGE_ORDERS]: {},\n\n    // ------ 파트너센터 페이지\n    [EndPoint.GET_PARTNER_USERS]: {},\n    [EndPoint.GET_PARTNER_INACTIVE_USERS]: {},\n    [EndPoint.GET_PARTNER_INQUIRIES]: {},\n    [EndPoint.GET_PARTNER_NOTICES]: {},\n    [EndPoint.GET_PARTNER_AGENCYAPPLICANT]: {},\n    [EndPoint.GET_PARTNER_ORDERS]: {},\n    [EndPoint.GET_PARTNER_MAINTENANCES]: {},\n    [EndPoint.GET_PARTNER_SCHEDULES]: {},\n  },\n  post: {\n    [EndPoint.POST_LOGIN]: {},\n    [EndPoint.POST_REGISTER]: {},\n\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.POST_MALL_INQUIRY_REPLY]: {},\n    [EndPoint.POST_MALL_FAQ]: {},\n    [EndPoint.POST_MALL_DATAROOM]: {},\n    [EndPoint.POST_MALL_BANNER]: {},\n  },\n  patch: {\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.PATCH_MALL_UPDATE_INQUIRY_REPLY]: {},\n    [EndPoint.PATCH_MALL_DELETE_INQUIRY]: {},\n    [EndPoint.PATCH_MALL_UPDATE_FAQ]: {},\n    [EndPoint.PATCH_MALL_DELETE_FAQ]: {},\n    [EndPoint.PATCH_MALL_UPDATE_DATAROOM]: {},\n    [EndPoint.PATCH_MALL_DELETE_DATAROOM]: {},\n    [EndPoint.PATCH_MALL_UPDATE_BANNER]: {},\n    [EndPoint.PATCH_MALL_DELETE_BANNER]: {},\n  },\n  put: {},\n  delete: {},\n}\n\nexport default ApiMapper\n","import {CRow} from '@coreui/react'\nimport ModalInput from '../../../forms/inputForm/ModalInput'\nimport React, {useState} from 'react'\nimport ModalFilesInput from '../../../forms/inputForm/ModalFilesInput'\nimport ModalTextArrayInput from '../../../forms/inputForm/ModalTextArrayInput'\nimport ModalSelect from '../../../forms/inputForm/ModalSelect'\nimport ModalImageInput from '../../../forms/inputForm/ModalImageInput'\nimport DetailModalEditModeTemplate from '../DetailModalEditModeTemplate'\nimport ModalQuillEditor from '../../../forms/inputForm/ModalQuillEditor'\n\nconst NoticeDetailModal = ({value, visible, setVisible, onChange, upDate, setEditor, editor, onDelete}) => {\n  const {title, content, noticeFiles, noticeImages, category} = value\n\n  const noticeOptions = [\n    {key: 'DEALER', value: '딜러'},\n    {key: 'AGENCY', value: '대리점'},\n  ]\n\n  return (\n    <DetailModalEditModeTemplate\n      visible={visible}\n      title={'공지사항' || ''}\n      setVisible={setVisible}\n      upDate={upDate}\n      btnText={'수정'}\n      onDelete={onDelete}\n    >\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'title'}\n          placeholder={'공지사항 제목'}\n          label={'공지사항 제목'}\n          value={title || ''}\n          onChange={onChange}\n        />\n        <ModalSelect\n          id={'category'}\n          placeholder={'카테고리를 선택해 주세요'}\n          label={'카테고리'}\n          options={noticeOptions}\n          value={category || ''}\n          onChange={onChange}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalFilesInput\n          id={'files'}\n          type={'file'}\n          placeholder={'파일 첨부'}\n          label={'파일 첨부'}\n          value={noticeFiles}\n          onChange={onChange}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalImageInput id='image' label='이미지 첨부' value={noticeImages} onChange={onChange} />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalQuillEditor id='content' label={'문의 답변'} value={editor} setValue={setEditor} />\n      </CRow>\n    </DetailModalEditModeTemplate>\n  )\n}\n\nexport default NoticeDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {CButton, CCard, CCardBody, CCardHeader, CCol, CForm, CRow} from '@coreui/react'\nimport PageHeader from '../../../components/common/PageHeader'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport NoticeDetailModal from '../../../components/Modal/partnerCenter/notice/NoticeDetailModal'\nimport {noticeList} from '../../../utils/columns/partnerCenter/Columns'\nimport NoticeAddModal from '../../../components/Modal/partnerCenter/notice/NoticeAddModal'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\n\nconst NoticeList = () => {\n  const [items, setItems] = useState()\n  const [selectedItem, setSelectedItem] = useState({})\n  const [editCheck, setEditCheck] = useState({})\n  const [editor, setEditor] = useState('')\n  const [showModal, setShowModal] = useState(false)\n\n  // 공지사항 API\n  const getNoticeList = async () => {\n    try {\n      const {data} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: `${EndPoint.GET_PARTNER_NOTICES}?page=${1}`,\n      })\n      console.log(data)\n      if (!data.isSuccess || isEmpty(data?.result)) {\n        return\n      }\n      if (data?.code === 1000) {\n      } else {\n        alert(data?.message)\n      }\n      setItems(data.result.adminNoticePartnerDTOs)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  useEffect(() => {\n    getNoticeList()\n  }, [])\n\n  /** Open Modal*/\n  const handleShowModal = async ({id}) => {\n    setShowModal(!showModal)\n    if (id) {\n      try {\n        const {data} = await ApiConfig.request({\n          method: HttpMethod.GET,\n          url: `${EndPoint.GET_PARTNER_NOTICES}/${id}`,\n        })\n        console.log(data)\n        if (!data.isSuccess || isEmpty(data?.result)) {\n          return\n        }\n        if (data?.code === 1000) {\n          console.log(data)\n          setSelectedItem(data.result)\n          setEditCheck(data.result)\n          setEditor(data.result.content)\n        } else {\n          alert(data?.message)\n        }\n      } catch (error) {\n        console.log(error)\n      }\n    } else {\n      setSelectedItem({\n        title: '',\n        category: '',\n        content: '',\n        createdAt: '',\n        noticeFiles: [],\n        noticeImages: [],\n      })\n      setEditCheck({\n        title: '',\n        category: '',\n        content: '',\n        createdAt: '',\n        noticeFiles: [],\n        noticeImages: [],\n      })\n      setEditor('')\n    }\n  }\n  // Detail Modal\n  const handleNoticeModalOnChange = ({target: {id, value}}) => {\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n\n  const handleNoticeDetailModalUpdate = editBtnClick => {\n    const {id, title, content, files} = selectedItem\n    console.log(selectedItem)\n    console.log(editCheck)\n    if (editCheck.title !== title || editCheck.content !== content || editCheck.files !== files) {\n      if (window.confirm('공지사항을 수정하시겠습니까?')) {\n        if (!title) return alert('Not Title')\n        if (!files) return alert('Not File')\n        if (!content) return alert('Not Content')\n        setItems(items.map(value => (value.id === id ? selectedItem : value)))\n        setShowModal(false)\n      } else {\n        setShowModal(false)\n      }\n    } else if (!editBtnClick) {\n      setShowModal(false)\n    }\n  }\n\n  /** Add Modal */\n  const handleNoticeAddModalUpdate = async () => {\n    const {title, content, category} = selectedItem\n    if (title || content || category) {\n      if (window.confirm('공지사항을 추가하시겠습니까?')) {\n        if (!title) return alert('공지사항 제목을 입력해 주세요.')\n        if (!category) return alert('카테고리를 선택해 주세요.')\n        if (!content) return alert('공지사항 본문을 입력해 주세요.')\n        console.log(selectedItem)\n        try {\n          const {data} = await ApiConfig.request({\n            method: HttpMethod.POST,\n            url: EndPoint.GET_PARTNER_NOTICES,\n            data: JSON.stringify({selectedItem}),\n          })\n          console.log(data)\n          if (!data.isSuccess || isEmpty(data?.result)) {\n            return alert(data?.message)\n          }\n          if (data?.code === 1000) {\n            alert(data.message)\n            window.reload()\n          } else {\n            alert(data?.message)\n          }\n        } catch (error) {\n          return alert(error)\n        }\n      }\n    } else {\n    }\n  }\n\n  // onDelete\n  const handleNoticeDeleteBtnOnClick = async () => {\n    const {id} = selectedItem\n    if (window.confirm('해당 공지사항을 삭제하시겠습니까?')) {\n      try {\n        const {data} = await ApiConfig.request({\n          method: HttpMethod.DELETE,\n          //url: `${EndPoint.GET_PARTNER_NOTICES}/${id}`,\n        })\n        console.log(data)\n        if (!data.isSuccess || isEmpty(data?.result)) {\n          return\n        }\n        if (data?.code === 1000) {\n          alert(data.message)\n          window.reload()\n        } else {\n          alert(data?.message)\n        }\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n  useEffect(() => {\n    if (!showModal) {\n      setEditor('')\n    }\n  }, [showModal])\n\n  return (\n    <CRow>\n      <PageHeader title='공지사항 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardHeader>\n            <CForm className='row g-3'>\n              <CCol xs={1}>\n                <CButton color='primary' onClick={() => handleShowModal()}>\n                  추가\n                </CButton>\n              </CCol>\n            </CForm>\n          </CCardHeader>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowModal}\n              columns={noticeList}\n              className={'userList'}\n              onDelete={handleNoticeDeleteBtnOnClick}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <NoticeDetailModal\n        visible={showModal}\n        setVisible={setShowModal}\n        value={selectedItem}\n        onChange={handleNoticeModalOnChange}\n        upDate={handleNoticeDetailModalUpdate}\n        editor={editor}\n        setEditor={setEditor}\n        onDelete={handleNoticeDeleteBtnOnClick}\n      />\n    </CRow>\n  )\n}\n\nexport default NoticeList\n","// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);"],"names":["visible","title","children","setVisible","upDate","onDelete","btnText","useState","editMode","setEditMode","size","onClose","onClick","color","id","files","placeholder","label","isRequired","htmlFor","className","length","map","file","index","splitUrl","split","fileName","SpanStyle","role","href","antdImageFormat","url","fetch","method","then","res","blob","window","URL","createObjectURL","a","document","createElement","download","body","appendChild","click","setTimeout","_","revokeObjectURL","remove","catch","err","console","error","downloadFile","styled","InboxOutlined","props","ref","React","AntdIcon","_objectSpread","icon","InboxOutlinedSvg","displayName","disabled","fileList","setFileList","filePath","useEffect","key","uid","name","fileTitle","decodeURI","status","multiple","customRequest","data","onError","onProgress","onSuccess","AWS","region","process","accessKeyId","secretAccessKey","S3","replaceAll","objParams","Bucket","returnBucketNameFile","Key","Body","ContentType","type","putObject","on","loaded","total","percent","promise","$response","log","code","message","customReq","successData","httpRequest","request","endpoint","protocol","host","fileData","params","path","onRemove","item","filter","DivBox","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","images","imgPath","readOnly","oneSheet","setPreviewOpen","previewImage","setPreviewImage","previewTitle","setPreviewTitle","handlePreview","preview","originFileObj","substring","lastIndexOf","uploadButton","style","marginTop","listType","onPreview","reqData","alert","returnBucketName","PreviewImageBox","rounded","alt","src","width","height","CCol","value","setValue","QuillRef","useRef","imageHandler","input","formData","FormData","setAttribute","onchange","append","range","current","getEditor","getSelection","undefined","quill","setSelection","clipboard","dangerouslyPasteHTML","success","response","modules","useMemo","toolbar","container","list","indent","align","handlers","image","EditorStyle","element","onChange","theme","ReactQuill","xs","newOptions","options","rows","text","HttpMethod","GET","POST","PUT","PATCH","ApiConfig","query","isEmpty","Object","entries","replace","keys","join","headers","accept","sessionStorage","getItem","Axios","API","EndPoint","GET_V1_TEST_AUTO_LOGIN","POST_LOGIN","POST_TEST_V1_REGISTER","RECRUITMENT","TALENTPOOL","EDITOR","HOME_INQUIRY","ENGLISH_HOME_INQUIRY","NOTICE","DATA_ROOM","HOME_BANNER","ENGLISH_BANNER","GET_PARTNER_USERS","GET_PARTNER_INACTIVE_USERS","GET_PARTNER_INQUIRIES","GET_PARTNER_NOTICES","GET_PARTNER_AGENCYAPPLICANT","GET_PARTNER_DATAROOMS","GET_PARTNER_ORDERS","GET_PARTNER_MAINTENANCES","GET_PARTNER_SCHEDULES","GET_MALL_USERS","GET_MALL_USER","GET_MALL_RESIGNUSERS","GET_MALL_RESIGNUSER","GET_MALL_INQUIRIES","GET_MALL_INQUIRY","POST_MALL_INQUIRY_REPLY","PATCH_MALL_UPDATE_INQUIRY_REPLY","PATCH_MALL_DELETE_INQUIRY","GET_MALL_FAQS","GET_MALL_FAQ","POST_MALL_FAQ","PATCH_MALL_UPDATE_FAQ","PATCH_MALL_DELETE_FAQ","GET_MALL_DATAROOMS","GET_MALL_DATAROOM","POST_MALL_DATAROOM","PATCH_MALL_UPDATE_DATAROOM","PATCH_MALL_DELETE_DATAROOM","GET_MALL_BANNERS","GET_MALL_BANNER","POST_MALL_BANNER","PATCH_MALL_UPDATE_BANNER","PATCH_MALL_DELETE_BANNER","GET_MALL_ORDERS","GET_MALL_CANCEL_ORDERS","GET_MALL_EXCHANGE_ORDERS","POST_REGISTER","setEditor","editor","noticeFiles","content","noticeImages","category","DetailModalEditModeTemplate","ModalQuillEditor","items","setItems","selectedItem","setSelectedItem","editCheck","setEditCheck","showModal","setShowModal","getNoticeList","isSuccess","adminNoticePartnerDTOs","handleShowModal","createdAt","handleNoticeDeleteBtnOnClick","confirm","reload","PageHeader","ListTemplate","columns","noticeList","target","editBtnClick","PlusOutlined","PlusOutlinedSvg"],"sourceRoot":""}