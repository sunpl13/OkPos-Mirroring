{"version":3,"file":"static/js/3299.3fe09ad4.chunk.js","mappings":"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","sources":["components/list/maintenance/AntDesignListForm.js","components/list/maintenance/NumberOfStoresList.js","components/list/maintenance/FlagshipSolutionList.js","components/list/maintenance/ManagementTarget.js","components/Modal/partnerCenter/order/MaintenancesDetailModal.js","pages/partnerCenter/order/MaintenancesList.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {Table} from 'antd'\nimport {CFormLabel} from '@coreui/react'\nimport PropTypes from 'prop-types'\n\nconst AntDesignListForm = ({items, onClick, columns, className, title, listIndex, summary, children}) => {\n  const getListIndex = num => {\n    switch (+num) {\n      case 1:\n        return '①'\n      case 2:\n        return '②'\n      case 3:\n        return '③'\n      case 4:\n        return '④'\n      case 5:\n        return '⑤'\n      case 6:\n        return '⑥'\n      case 7:\n        return '⑦'\n      case 8:\n        return '⑧'\n      case 9:\n        return '⑨'\n      case 10:\n        return '⑩'\n      default:\n        return ''\n    }\n  }\n  return (\n    <>\n      <ListTitleForm>\n        <span>{getListIndex(listIndex)}</span>\n        {title}\n      </ListTitleForm>\n      {children}\n      <AntTable\n        //onRow={(record, rowIndex) => {\n        //           return {\n        //             onClick: event => {\n        //               console.log(event, record, rowIndex)\n        //             }, // click row\n        //             onDoubleClick: event => {\n        //               console.log(event, record, rowIndex)\n        //             }, // double click row\n        //           }\n        //         }}\n        onCell={{\n          cat: item => {\n            console.log(item)\n            return <div>asdasd</div>\n          },\n        }}\n        columns={columns || []}\n        dataSource={items || []}\n        className={className}\n        pagination={false}\n        summary={summary}\n        bordered\n      />\n    </>\n  )\n}\nAntDesignListForm.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n  title: PropTypes.string,\n  listIndex: PropTypes.number,\n  summary: PropTypes.func,\n  children: PropTypes.element,\n}\nexport default AntDesignListForm\n\nconst AntTable = styled(Table)`\n  * {\n    border-radius: 0;\n  }\n  &.userList {\n    width: 100%;\n    & > div {\n    width:100%\n  }\n  & th {\n    min-width: auto;\n    background:#d6d2f8;\n  }\n  & th,\n  & td{\n    border: 1px solid #d8dbe0;\n    text-align: center;\n    padding:0.5rem;\n    & select {\n     border:none;\n      \n    }\n  }\n  \n  }\n  &.solutionList{\n  & td:nth-child(2),\n  & td:nth-child(5){\n  padding:0;\n    & select{\n      padding:.8rem;\n    }\n  }\n  \n`\nconst ListTitleForm = styled(CFormLabel)`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: center;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  & span {\n    font-size: 17px;\n    margin-right: 0.2rem;\n  }\n`\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {Table, Typography} from 'antd'\nimport AntDesignListForm from './AntDesignListForm'\nconst {Text} = Typography\n\nconst NumberOfStoresList = ({items, onClick, columns, className}) => {\n  const [listItems, setListItems] = useState([\n    {\n      region: '서울',\n      catcount: '6',\n      poscount: '12',\n      kioskcount: '18',\n      sum: '36',\n      note: '-',\n    },\n  ])\n  useEffect(() => {\n    setListItems(items)\n  }, [items])\n  console.log(items)\n\n  return (\n    <>\n      <AntDesignListForm\n        listIndex={1}\n        title={'유지보수 신청 가맹점 수'}\n        columns={columns}\n        items={listItems}\n        className={className}\n        summary={pageData => {\n          let totalCat = 0\n          let totalPos = 0\n          let totalKiosk = 0\n          let totalSum = 0\n          pageData.forEach(({catcount, poscount, kioskcount, sum}) => {\n            totalCat += catcount\n            totalPos += poscount\n            totalKiosk += kioskcount\n            totalSum += sum\n          })\n          return (\n            <>\n              <Table.Summary.Row>\n                <Table.Summary.Cell index={0}>Total</Table.Summary.Cell>\n                <Table.Summary.Cell index={1}>\n                  <Text>{Number(totalCat)}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{Number(totalPos)}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{Number(totalKiosk)}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{Number(totalSum)}</Text>\n                </Table.Summary.Cell>\n                <Table.Summary.Cell index={2}>\n                  <Text>{'  '}</Text>\n                </Table.Summary.Cell>\n              </Table.Summary.Row>\n            </>\n          )\n        }}\n      />\n    </>\n  )\n}\n\nNumberOfStoresList.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n}\n\nexport default NumberOfStoresList\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport AntDesignListForm from './AntDesignListForm'\nimport {Table} from 'antd'\n\nconst FlagshipSolutionList = ({items, onClick, columns, className}) => {\n  const [listItems, setListItems] = useState([])\n  useEffect(() => {\n    setListItems(items)\n  }, [items])\n  return (\n    <>\n      <AntDesignListForm\n        columns={columns || []}\n        items={listItems || []}\n        className={className}\n        title={'주력 솔루션 및 VAN 사'}\n        listIndex={2}\n        summary={() => {\n          return (\n            <>\n              <Table.Summary.Row>\n                <Table.Summary.Cell index={0}>기타</Table.Summary.Cell>\n                <Table.Summary.Cell index={1}></Table.Summary.Cell>\n                <Table.Summary.Cell index={2}></Table.Summary.Cell>\n                <Table.Summary.Cell index={3}>기타</Table.Summary.Cell>\n                <Table.Summary.Cell index={4}></Table.Summary.Cell>\n              </Table.Summary.Row>\n            </>\n          )\n        }}\n      />\n    </>\n  )\n}\n\nFlagshipSolutionList.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n}\n\nexport default FlagshipSolutionList\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  CCol,\n  CFormInput,\n  CFormLabel,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport styled from 'styled-components'\n\nconst ManagementTarget = ({items, onClick, columns, className}) => {\n  const [listItems, setListItems] = useState([])\n  console.log(items)\n  useEffect(() => {\n    setListItems(items)\n  }, [items])\n\n  return (\n    <CCol>\n      <ListTitleForm>\n        <span>③</span>\n        관리 대상 H/W 현황\n      </ListTitleForm>\n      <CCol className={'searchInput pb-3'}>\n        <CFormInput type='text' placeholder='주력 H/W 모델명을 입력해 주세요' aria-label='Disabled input' />\n      </CCol>\n      <CCol>\n        <CustomCTable stripedColumns>\n          <CTableHead color='light'>\n            <CTableHeaderCell>구분</CTableHeaderCell>\n            <CTableHeaderCell>제조사/모델명</CTableHeaderCell>\n            <CTableHeaderCell>구분</CTableHeaderCell>\n            <CTableHeaderCell>제조사/모델명</CTableHeaderCell>\n          </CTableHead>\n          <CTableBody>\n            <CTableRow>\n              <CTableDataCell className={'rowTitle'}>POS</CTableDataCell>\n              <CTableDataCell>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n              </CTableDataCell>\n              <CTableDataCell className={'rowTitle'}>KIOSK</CTableDataCell>\n              <CTableDataCell>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n                <CCol>1</CCol>\n              </CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CustomCTable>\n      </CCol>\n    </CCol>\n  )\n}\n\nManagementTarget.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n}\n\nexport default ManagementTarget\n\nconst CustomCTable = styled(CTable)`\n  text-align: center;\n  & th {\n    padding: 0.5rem 0;\n  }\n  & .rowTitle {\n    display: table-cell;\n    vertical-align: middle;\n  }\n  & tbody td {\n    padding: 0;\n    & .col {\n    padding: 0.5rem;\n    &.col:not(:last-child) {\n      border-bottom: 1px solid #D8DBE0;\n    }\n  }\n`\nconst ListTitleForm = styled(CFormLabel)`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: center;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  & span {\n    font-size: 17px;\n    margin-right: 0.2rem;\n  }\n`\n","import {CRow} from '@coreui/react'\nimport ModalInput from '../../../forms/inputForm/ModalInput'\nimport DetailModalTemplate from '../DetailModalTemplate'\nimport NumberOfStoresList from '../../../list/maintenance/NumberOfStoresList'\nimport {\n  generalListApplicationColumns,\n  managementTargetColumns,\n  solutionListColumns,\n} from '../../../../utils/columns/partnerCenter/Columns'\nimport FlagshipSolutionList from '../../../list/maintenance/FlagshipSolutionList'\nimport ManagementTarget from '../../../list/maintenance/ManagementTarget'\n\nconst MaintenancesDetailModal = ({onChange, value, visible, setVisible, upDate, onDelete}) => {\n  const {\n    id, // 리스트 id\n    maintenanceNum, // 발주 번호\n    certificateNum, // 사업자 번호\n    representativeName, // 대표자 명\n    createdAt, // 주문일자\n    mobilePhoneNum, // 휴대전화 번호\n    phoneNum, // 전화번호\n    email, // 이메일\n    address, // 사업장 주소\n    maintenanceCategory, // 유지보수 신청 유형 (원격 서비스 / 방문 서비스 A / 방문 서비스 B / 방문 서비스 C / 통합 서비스)\n    adminMaintenanceHardwareDTOs, // H/W 현황 리스트\n    adminMaintenanceSolutionDTOs, // 주력 솔루션 및 VAN사 리스트\n    adminMaintenanceStoreDTOs, // 유지보수 신청 가맹점 수\n    operationalProcesses, // 현장 운영중인 엄무 프로세스\n  } = value\n\n  //\"- 발주 번호\n  // - 상호명\n  // - 사업자 번호\n  // - 대표자 명\n  // - 주문 일자\n  // - 휴대전화 번호\n  // - 전화번호\n  // - 이메일\n  // - 사업장 주소\n  // - 유지보수 신청 유형 (원격 서비스 / 방문 서비스 A / 방문 서비스 B / 방문 서비스 C / 통합 서비스)\n  // - 유지보수 신청 정보 리스트\"\n\n  return (\n    <DetailModalTemplate title={'유지보수 신청 상세'} visible={visible} setVisible={setVisible} notEditBtn>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'orderNum'}\n          placeholder={'발주 번호'}\n          label={'발주 번호'}\n          value={maintenanceNum}\n          onChange={onChange}\n          readOnly\n        />\n        <ModalInput\n          id={'businessName'}\n          placeholder={'상호명'}\n          label={'상호명'}\n          //value={businessName}\n          onChange={onChange}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'businessNumber'}\n          placeholder={'사업자 번호'}\n          label={'사업자 번호'}\n          value={certificateNum}\n          onChange={onChange}\n        />\n        <ModalInput\n          id={'representativeName'}\n          placeholder={'대표자 명'}\n          label={'대표자 명'}\n          value={representativeName}\n          onChange={onChange}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'orderDate'}\n          placeholder={'주문 일자'}\n          label={'주문 일자'}\n          value={createdAt}\n          onChange={onChange}\n        />\n        <ModalInput\n          id={'phoneNumber'}\n          placeholder={'휴대전화 번호'}\n          label={'휴대전화 번호'}\n          value={mobilePhoneNum}\n          onChange={onChange}\n        />\n      </CRow>\n\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'phoneNum'}\n          placeholder={'사업장 전화번호'}\n          label={'사업장 전화번호'}\n          value={phoneNum}\n          onChange={onChange}\n        />\n        <ModalInput id={'email'} placeholder={'이메일'} label={'이메일'} value={email} onChange={onChange} />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ModalInput\n          id={'businessAddress'}\n          placeholder={'사업장 주소'}\n          label={'사업장 주소'}\n          value={address}\n          onChange={onChange}\n        />\n        <ModalInput\n          id={'maintenanceCategory'}\n          placeholder={'유지보수 신청 유형'}\n          label={'유지보수 신청 유형'}\n          value={maintenanceCategory}\n          onChange={onChange}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <NumberOfStoresList\n          className={'userList'}\n          columns={generalListApplicationColumns}\n          items={adminMaintenanceStoreDTOs}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <FlagshipSolutionList\n          className={'userList solutionList'}\n          columns={solutionListColumns}\n          items={adminMaintenanceSolutionDTOs}\n        />\n      </CRow>\n      <CRow className={'p-2'}>\n        <ManagementTarget\n          className={'userList'}\n          columns={managementTargetColumns}\n          items={adminMaintenanceHardwareDTOs}\n        />\n      </CRow>\n    </DetailModalTemplate>\n  )\n}\n\nexport default MaintenancesDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {maintenanceApplicationList} from '../../../utils/columns/partnerCenter/Columns'\nimport OrderDetailModal from '../../../components/Modal/partnerCenter/order/OrderDetailModal'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport MaintenancesDetailModal from '../../../components/Modal/partnerCenter/order/MaintenancesDetailModal'\n\nconst MaintenancesList = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [editCheck, setEditCheck] = useState({})\n\n  const [showModal, setShowModal] = useState(false)\n\n  // 발주신청 리스트 API\n  const getList = async () => {\n    try {\n      const {\n        data: {isSuccess, result, code, message},\n      } = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.PARTNER_MAINTENANCES,\n      })\n      if (!isSuccess || isEmpty(result)) {\n        return\n      }\n      if (code === 1000) {\n        setItems(result?.adminMaintenanceDTOs)\n      } else {\n        alert(message)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    getList()\n  }, [])\n\n  /** Open Modal*/\n  const handleShowMaterialDetailModal = async ({id}) => {\n    try {\n      const {\n        data: {isSuccess, result, code, message},\n      } = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: `${EndPoint.PARTNER_MAINTENANCES}/${id}`,\n      })\n      if (!isSuccess || isEmpty(result)) {\n        return alert(message)\n      }\n      if (code === 1000) {\n        setSelectedItem(result)\n        setEditCheck(result)\n      } else {\n        alert(message)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    setShowModal(!showModal)\n  }\n\n  const handleOrderModalOnChange = ({target: {id, value}}) => {\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n  const handleOrderListOnDelete = ({no}) => {\n    if (window.confirm('Delete ?')) {\n      setItems(items.filter(value => value.no !== no))\n    }\n  }\n  const handleOrderOnDelete = ({productId}) => {\n    if (window.confirm('Delete ?')) {\n      setSelectedItem({\n        ...selectedItem,\n        orderList: selectedItem.orderList.filter(value => value.productId !== productId),\n      })\n    }\n  }\n  return (\n    <CRow>\n      <PageHeader title='유지보수 신청 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowMaterialDetailModal}\n              columns={maintenanceApplicationList}\n              className={'userList'}\n              onDelete={handleOrderListOnDelete}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <MaintenancesDetailModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        onChange={handleOrderModalOnChange}\n        onDelete={handleOrderOnDelete}\n      />\n    </CRow>\n  )\n}\n\nexport default MaintenancesList\n"],"names":["items","columns","onClick","className","title","listIndex","summary","children","ListTitleForm","num","getListIndex","AntTable","onCell","cat","item","console","log","dataSource","pagination","bordered","styled","Table","CFormLabel","Text","Typography","useState","region","catcount","poscount","kioskcount","sum","note","listItems","setListItems","useEffect","pageData","totalCat","totalPos","totalKiosk","totalSum","forEach","index","Number","type","placeholder","CustomCTable","stripedColumns","color","CTable","onChange","value","visible","setVisible","maintenanceNum","upDate","onDelete","id","certificateNum","representativeName","createdAt","mobilePhoneNum","phoneNum","email","address","maintenanceCategory","adminMaintenanceHardwareDTOs","adminMaintenanceSolutionDTOs","adminMaintenanceStoreDTOs","operationalProcesses","DetailModalTemplate","notEditBtn","ModalInput","label","readOnly","generalListApplicationColumns","solutionListColumns","managementTargetColumns","setItems","selectedItem","setSelectedItem","setEditCheck","showModal","setShowModal","getList","ApiConfig","method","HttpMethod","url","EndPoint","data","isSuccess","result","code","message","isEmpty","adminMaintenanceDTOs","alert","handleShowMaterialDetailModal","PageHeader","xs","ListTemplate","maintenanceApplicationList","no","window","confirm","filter","target","productId","orderList"],"sourceRoot":""}