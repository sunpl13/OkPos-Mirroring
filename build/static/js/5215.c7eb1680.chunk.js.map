{"version":3,"file":"static/js/5215.c7eb1680.chunk.js","mappings":"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","sources":["components/Modal/CloseCheckModal.js","components/Modal/DeleteModalTemplate.js","components/forms/downloadForm/MultiFileDownloadForm.js","components/forms/inputForm/ModalInput.js","utils/columns/homePage/qna/Columns.js","components/Modal/homePage/QnA/QnADetail.js","pages/homePage/QnA/QnAList.js","utils/columns/homePage/qna/ColumnsSelectedValue.js"],"sourcesContent":["import {CButton, CHeader, CModal, CModalBody, CModalFooter, CModalTitle} from '@coreui/react'\nimport PropTypes from 'prop-types'\n\nconst CloseCheckModal = ({onClick, visible, setVisible}) => {\n  return (\n    <CModal visible={visible} alignment='center'>\n      <CHeader>\n        <CModalTitle>정말 페이지에서 나가시겠습니까?</CModalTitle>\n        <CModalBody>지금 페이지를 나가시면 변경사항이 저장되지 않습니다.</CModalBody>\n        <CModalFooter>\n          <CButton color='danger' onClick={onClick}>\n            나가기\n          </CButton>\n          <CButton color='primary' onClick={() => setVisible(false)}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CHeader>\n    </CModal>\n  )\n}\n\nCloseCheckModal.propTypes = {\n  onClick: PropTypes.func,\n  visible: PropTypes.bool,\n  setVisible: PropTypes.func,\n}\nexport default CloseCheckModal\n","import {CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle} from '@coreui/react'\nimport PropTypes from 'prop-types'\n\nconst DeleteModalTemplate = ({visible, title = '삭제 확인', children, onDelete, setVisible}) => {\n  return (\n    <CModal visible={visible} alignment='center'>\n      <CModalHeader>\n        <CModalTitle>{title}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>{!children ? '정말 삭제하시겠습니까?' : children}</CModalBody>\n      <CModalFooter>\n        <CButton onClick={onDelete} color='primary'>\n          확인\n        </CButton>\n        <CButton color='secondary' onClick={() => setVisible(false)}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nDeleteModalTemplate.propTypes = {\n  visible: PropTypes.bool,\n  title: PropTypes.string,\n  children: PropTypes.any,\n  onDelete: PropTypes.func,\n  setVisible: PropTypes.func,\n}\n\nexport default DeleteModalTemplate\n","import {CCol, CFormInput, CFormLabel} from '@coreui/react'\nimport styled from 'styled-components'\nimport {antdImageFormat} from '../../../utils/awsCustom'\nimport React from 'react'\n\nconst MultiFileDownloadForm = ({id, files, label, isRequired}) => {\n  const downloadFile = (url, fileName) => {\n    url = antdImageFormat(url)\n\n    fetch(url, {method: 'GET'})\n      .then(res => {\n        return res.blob()\n      })\n      .then(blob => {\n        const url = window.URL.createObjectURL(blob)\n        const a = document.createElement('a')\n        a.href = url\n        a.download = fileName\n        document.body.appendChild(a)\n        a.click()\n        setTimeout(_ => {\n          window.URL.revokeObjectURL(url)\n        }, 60000)\n        a.remove()\n      })\n      .catch(err => {\n        console.error('err: ', err)\n      })\n  }\n\n  //onClick={() => downloadFile(file, fileName)}\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol>\n        {files?.length > 0 ? (\n          files.map((file, index) => {\n            const splitUrl = file.split('/') //   \"/\" 로 전체 url 을 나눈다\n            const splitUrlLength = splitUrl.length\n            const fileName = splitUrl[splitUrlLength - 1] // 나누어진 배열의 맨 끝이 파일명이다\n            return (\n              <div key={index} className='col-form-label'>\n                <SpanStyle\n                  role='link'\n                  key={index}\n                  href={antdImageFormat(file)}\n                  onClick={() => downloadFile(file, fileName)}\n                >\n                  {index + 1}. {fileName}\n                </SpanStyle>\n              </div>\n            )\n          })\n        ) : (\n          <CFormInput type={'text'} id={id || ''} placeholder='등록된 파일이 없습니다.' disabled />\n        )}\n      </CCol>\n    </>\n  )\n}\nexport default MultiFileDownloadForm\n\nconst SpanStyle = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  padding: 0 8px;\n  line-height: 1.5714285714285714;\n  flex: auto;\n  transition: all 0.3s;\n  color: #1677ff !important;\n  text-decoration: none;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n`\n","import {CCol, CFormInput, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\nconst ModalInput = ({type, onChange, id, placeholder, value, label, readOnly, disabled, isRequired, xs}) => {\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' xs={xs} style={{display: 'flex'}}>\n        <CFormInput\n          type={type || 'text'}\n          id={id}\n          placeholder={placeholder || ''}\n          value={type === 'file' ? undefined : value || ''}\n          onChange={onChange}\n          readOnly={readOnly}\n          disabled={disabled}\n        />\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalInput\n","export const qnaColumns = [\n  {\n    key: 'no',\n    label: 'No',\n    _props: {color: 'primary', className: 'no'},\n  },\n  {\n    key: 'name',\n    label: '이름',\n    _props: {color: 'primary', className: 'name'},\n  },\n  {\n    key: 'email',\n    label: '이메일',\n    _props: {color: 'primary', className: 'email'},\n  },\n  {\n    key: 'number',\n    label: '전화번호',\n    _props: {color: 'primary', className: 'number'},\n  },\n  {\n    key: 'categoryKorean',\n    label: '문의 유형',\n    _props: {color: 'primary', className: 'categoryKorean'},\n  },\n]\n","import {useState} from 'react'\nimport {\n  CFormLabel,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n  CModalFooter,\n  CButton,\n  CFormTextarea,\n} from '@coreui/react'\nimport ModalInput from '../../../forms/inputForm/ModalInput'\nimport CloseCheckModal from '../../CloseCheckModal'\nimport DeleteModalTemplate from '../../DeleteModalTemplate'\nimport PropTypes from 'prop-types'\nimport MultiFileDownloadForm from '../../../forms/downloadForm/MultiFileDownloadForm'\nimport ApiConfig, {HttpMethod} from '../../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../../dataManager/apiMapper'\nimport {useDispatch} from 'react-redux'\nconst inquiries = [\n  {key: 'PRODUCTS', value: '상품'},\n  {key: 'ADDITIONAL_SERVICES', value: '부가 서비스'},\n  {key: 'RECRUITMENT', value: '채용'},\n  {key: 'PARTNERSHIPS', value: '제휴'},\n  {key: 'ETC', value: '기타'},\n]\n\nconst QnADetail = ({getList, value, visible, setVisible, onChange, isReadOnly, setIsReadOnly}) => {\n  const [showDeleteModal, setshowDeleteModal] = useState(false)\n  const [closeCheckModalState, setCloseCheckModalState] = useState(false)\n  const dispatch = useDispatch()\n  const onDelete = async () => {\n    try {\n      const {data} = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {\n          id: value.inquiryId,\n        },\n        method: HttpMethod.PATCH,\n        url: `${EndPoint.HOME_INQUIRY}/:id/d`,\n      })\n      if (data.isSuccess) {\n        getList()\n        setshowDeleteModal(false)\n        setCloseCheckModalState(false)\n        setIsReadOnly(true)\n        setVisible(false)\n        dispatch({\n          type: 'SET_TOAST_STATE',\n          visibleState: true,\n          toastColor: 'success',\n          textColor: 'white',\n          text: `${data.result}`,\n        })\n      }\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  const onCloseCheck = () => {\n    if (!isReadOnly && value.No !== -1) {\n      setCloseCheckModalState(true)\n    } else {\n      setVisible(false)\n      setIsReadOnly(true)\n    }\n  }\n\n  const onClose = () => {\n    setCloseCheckModalState(false)\n    setVisible(false)\n    setIsReadOnly(true)\n  }\n  return (\n    <>\n      <CModal alignment='center' size='lg' visible={visible}>\n        <CModalHeader>\n          <CModalTitle>1:1 문의 상세</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CRow className='mb-3'>\n            <ModalInput\n              onChange={onChange}\n              id='inquiryId'\n              placeholder='No.'\n              label='ID'\n              readOnly={true}\n              disabled={true}\n              value={value.inquiryId === -1 ? '' : value.inquiryId}\n            />\n            <ModalInput\n              onChange={onChange}\n              id='name'\n              placeholder='이름을 입력해주세요'\n              label='이름'\n              value={value.name}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n\n          <CRow className='mb-3'>\n            <ModalInput\n              onChange={onChange}\n              id='email'\n              placeholder='email'\n              label='이메일'\n              value={value.email}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n            <ModalInput\n              onChange={onChange}\n              id='number'\n              placeholder='phone number'\n              label='전화번호'\n              value={value.number}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <CRow>\n            <CFormLabel>문의 내용</CFormLabel>\n            <CFormTextarea\n              placeholder='문의 내용'\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n              onChange={onChange}\n              value={value.content}\n              rows={15}\n              id='content'\n            />\n          </CRow>\n          <CRow>\n            <MultiFileDownloadForm files={value.fileUrl} id='fileUrl' label='첨부파일' />\n          </CRow>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color='danger' onClick={() => setshowDeleteModal(true)}>\n            삭제\n          </CButton>\n\n          <CButton color='primary' onClick={onCloseCheck}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <DeleteModalTemplate onDelete={onDelete} visible={showDeleteModal} setVisible={setshowDeleteModal} />\n      <CloseCheckModal onClick={onClose} visible={closeCheckModalState} setVisible={setCloseCheckModalState} />\n    </>\n  )\n}\nQnADetail.propTypes = {\n  value: PropTypes.any,\n  visible: PropTypes.bool,\n  setVisible: PropTypes.func,\n  onChange: PropTypes.func,\n  isReadOnly: PropTypes.bool,\n  setIsReadOnly: PropTypes.func,\n}\n\nexport default QnADetail\n","import {useState, useEffect} from 'react'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport {qnaColumns} from '../../../utils/columns/homePage/qna/Columns'\nimport {inquirys} from '../../../utils/columns/homePage/qna/ColumnsSelectedValue'\nimport QnADetail from '../../../components/Modal/homePage/QnA/QnADetail'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nconst QnAList = () => {\n  const [items, setItems] = useState([])\n  const [showModal, setShowModal] = useState(false)\n  const [isReadOnly, setIsReadOnly] = useState(true)\n  const [selectedItem, setSelectedItem] = useState({\n    inquiryId: -1,\n    content: '',\n    name: '',\n    email: '',\n    pNum: '',\n    inquiryType: '',\n    fileUrl: [],\n  })\n\n  const onLoadInquiryList = async () => {\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {},\n        method: HttpMethod.GET,\n        url: EndPoint.HOME_INQUIRY,\n      })\n      setItems(data?.data.result.responses)\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  const onLoadDetail = async id => {\n    try {\n      const {data} = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {\n          id: id,\n        },\n        method: HttpMethod.GET,\n        url: `${EndPoint.HOME_INQUIRY}/:id`,\n      })\n\n      setSelectedItem(data.result)\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  useEffect(() => {\n    onLoadInquiryList()\n  }, [])\n\n  const handleShowInquiryDetailModal = async item => {\n    onLoadDetail(item.inquiryId)\n    setShowModal(!showModal)\n  }\n\n  const handleInquiryDetailOnChange = ({target}) => {\n    const {id, value} = target\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n  return (\n    <main>\n      <PageHeader title='1:1 문의' />\n      <CRow>\n        <CCol xs={12}>\n          <CCard className='mb-4'>\n            <CCardHeader>\n              <CForm className='row g-3'>\n                <CCol xs={1}>\n                  <CButton color='primary' onClick={onLoadInquiryList}>\n                    조회하기\n                  </CButton>\n                </CCol>\n              </CForm>\n            </CCardHeader>\n            <CCardBody>\n              <ListTemplate\n                items={items}\n                onClick={handleShowInquiryDetailModal}\n                selectedOptions={inquirys}\n                columns={qnaColumns}\n                className='inquiryList'\n                datePickerHidden={false}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <QnADetail\n        onChange={handleInquiryDetailOnChange}\n        visible={showModal}\n        value={selectedItem}\n        setVisible={setShowModal}\n        isReadOnly={isReadOnly}\n        setIsReadOnly={setIsReadOnly}\n        getList={onLoadInquiryList}\n      />\n    </main>\n  )\n}\n\nexport default QnAList\n","exports.inquirys = {\n  a: '제품',\n  b: '부가 서비스',\n  c: '채용 ',\n  d: '제휴',\n  e: '기타',\n}\n"],"names":["onClick","visible","setVisible","alignment","color","title","children","onDelete","id","files","label","isRequired","htmlFor","className","length","map","file","index","splitUrl","split","fileName","SpanStyle","role","href","antdImageFormat","url","fetch","method","then","res","blob","window","URL","createObjectURL","a","document","createElement","download","body","appendChild","click","setTimeout","_","revokeObjectURL","remove","catch","err","console","error","downloadFile","type","placeholder","disabled","styled","onChange","value","readOnly","xs","style","display","undefined","qnaColumns","key","_props","getList","isReadOnly","setIsReadOnly","useState","showDeleteModal","setshowDeleteModal","closeCheckModalState","setCloseCheckModalState","dispatch","useDispatch","ApiConfig","data","query","path","inquiryId","HttpMethod","EndPoint","isSuccess","visibleState","toastColor","textColor","text","result","alert","size","ModalInput","name","email","number","content","rows","MultiFileDownloadForm","fileUrl","No","DeleteModalTemplate","CloseCheckModal","items","setItems","showModal","setShowModal","pNum","inquiryType","selectedItem","setSelectedItem","onLoadInquiryList","responses","onLoadDetail","useEffect","handleShowInquiryDetailModal","item","PageHeader","ListTemplate","selectedOptions","inquirys","columns","datePickerHidden","target","exports","b","c","d","e"],"sourceRoot":""}