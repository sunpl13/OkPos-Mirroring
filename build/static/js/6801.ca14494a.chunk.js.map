{"version":3,"file":"static/js/6801.ca14494a.chunk.js","mappings":"6UAiGA,UAvFkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAwCF,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7CG,EAAY,KAAEC,EAAe,KACpC,GAAkCJ,EAAAA,EAAAA,WAAS,GAAM,eAA1CK,EAAS,KAAEC,EAAY,KAGxBC,EAAO,yCAAG,4HAIFC,EAAAA,EAAAA,QAAkB,CAC1BC,OAAQC,EAAAA,EAAAA,IACRC,IAAKC,EAAAA,EAAAA,iBACL,OAJuC,GAIvC,aAJAC,KAAOC,EAAS,EAATA,UAAWC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAK7BH,KAAaI,EAAAA,EAAAA,IAAQH,GAAO,0CACxBI,MAAMF,IAAQ,QAEV,MAATD,EACFd,EAAe,OAANa,QAAM,IAANA,OAAM,EAANA,EAAQK,uBAEjBD,MAAMF,GACP,kDAEDI,QAAQC,IAAI,EAAD,IAAO,0DAErB,kBAnBY,oCAqBbC,EAAAA,EAAAA,YAAU,WACRhB,GACF,GAAG,IAGH,IAAMiB,EAA6B,yCAAG,sGAAU,OAAFC,EAAE,EAAFA,GAAE,kBAIlCjB,EAAAA,EAAAA,QAAkB,CAC1BC,OAAQC,EAAAA,EAAAA,IACRC,IAAI,GAAD,OAAKC,EAAAA,EAAAA,eAAuB,YAAIa,KACnC,OAJuC,GAIvC,aAJAZ,KAAOC,EAAS,EAATA,UAAWC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAK7BH,KAAaI,EAAAA,EAAAA,IAAQH,GAAO,0CACxBI,MAAMF,IAAQ,QAEV,MAATD,EACFZ,EAAgBW,GAEhBI,MAAMF,GACP,kDAEDI,QAAQC,IAAI,EAAD,IAAO,QAEpBhB,GAAcD,GAAU,0DACzB,gBApBkC,sCA4BnC,OACE,UAAC,KAAI,YACH,SAAC,IAAU,CAACqB,MAAM,kDAClB,SAAC,KAAI,CAACC,GAAI,GAAG,UACX,SAAC,KAAK,CAACC,UAAU,OAAM,UACrB,SAAC,KAAS,WACR,SAAC,IAAY,CACX3B,MAAOA,EACP4B,QAASL,EACTM,QAASC,EAAAA,GACTH,UAAW,oBAKnB,SAAC,IAAgB,CACfI,MAAO7B,EACP8B,QAAS5B,EACT6B,WAAY5B,EACZ6B,SAzB2B,SAAH,GAA+B,IAAD,IAAzBC,OAASX,EAAE,EAAFA,GAAIO,EAAK,EAALA,MAC9C5B,GAAgB,kBACXD,GAAY,cACdsB,EAAKO,IAEV,EAqBMK,OAAQb,EACRc,UAAQ,MAIhB,C","sources":["pages/partnerCenter/order/OrderList.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {orderList} from '../../../utils/columns/partnerCenter/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport OrderDetailModal from '../../../components/Modal/partnerCenter/order/OrderDetailModal'\n\nconst OrderList = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n\n  // 발주신청 리스트 API\n  const getList = async () => {\n    try {\n      const {\n        data: {isSuccess, result, code, message},\n      } = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.PARTNER_ORDERS,\n      })\n      if (!isSuccess || isEmpty(result)) {\n        return alert(message)\n      }\n      if (code === 1000) {\n        setItems(result?.adminOrderPartnerDTOs)\n      } else {\n        alert(message)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    getList()\n  }, [])\n\n  /** Open Modal*/\n  const handleShowMaterialDetailModal = async ({id}) => {\n    try {\n      const {\n        data: {isSuccess, result, code, message},\n      } = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: `${EndPoint.PARTNER_ORDERS}/${id}`,\n      })\n      if (!isSuccess || isEmpty(result)) {\n        return alert(message)\n      }\n      if (code === 1000) {\n        setSelectedItem(result)\n      } else {\n        alert(message)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    setShowModal(!showModal)\n  }\n\n  const handleOrderModalOnChange = ({target: {id, value}}) => {\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n  return (\n    <CRow>\n      <PageHeader title='발주 신청 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowMaterialDetailModal}\n              columns={orderList}\n              className={'userList'}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <OrderDetailModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        onChange={handleOrderModalOnChange}\n        upDate={handleShowMaterialDetailModal}\n        readOnly\n      />\n    </CRow>\n  )\n}\n\nexport default OrderList\n"],"names":["useState","items","setItems","selectedItem","setSelectedItem","showModal","setShowModal","getList","ApiConfig","method","HttpMethod","url","EndPoint","data","isSuccess","result","code","message","isEmpty","alert","adminOrderPartnerDTOs","console","log","useEffect","handleShowMaterialDetailModal","id","title","xs","className","onClick","columns","orderList","value","visible","setVisible","onChange","target","upDate","readOnly"],"sourceRoot":""}