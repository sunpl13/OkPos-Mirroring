{"version":3,"file":"static/js/3858.7f79de1a.chunk.js","mappings":"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","sources":["components/chart/BarChartTemplate.js","components/chart/DoughnutChartTemplate.js","components/Modal/officialMall/ResignUserModal.js","pages/officialMall/users/ResignUserList.js"],"sourcesContent":["import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\nimport PropTypes, {object} from 'prop-types'\n\nconst BarChartTemplate = ({title, labels, data}) => {\n  const dataSet = {\n    labels: [' '],\n    datasets: [\n      {\n        label: '서비스 이용 불편',\n        data: [data[0]],\n        backgroundColor: 'rgb(255, 99, 132)',\n      },\n      {\n        label: '가격 불만족',\n        data: [data[1]],\n        backgroundColor: 'rgb(54, 162, 235)',\n      },\n      {\n        label: '제품 기능 불만족',\n        data: [data[2]],\n        backgroundColor: 'rgb(255, 205, 86)',\n      },\n      {\n        label: '기타(직접 입력)',\n        backgroundColor: 'rgba(255, 159, 64)',\n        data: [data[3]],\n      },\n    ],\n  }\n\n  const options = {\n    plugins: {\n      //responsive: true,\n      hoverBorderWidth: 2,\n      legend: {\n        display: true,\n        position: 'right',\n        align: 'start',\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  }\n  return (\n    // <CChart\n    //   type='doughnut'\n    //   customTooltips={false}\n    //   labels={labels}\n    //   data={data}\n    //   options={{\n    //     responsive: true,\n    //     hoverBorderWidth: 2,\n    //     plugins: {\n    //       title: {\n    //         display: true,\n    //         text: title || '',\n    //         font: {\n    //           size: 24,\n    //         },\n    //       },\n    //     },\n    //     borderRadius: 10,\n    //     inflateAmount: 1,\n    //   }}\n    // />\n    <CChart type='bar' data={dataSet} customTooltips={false} options={options} />\n  )\n}\n\nexport default React.memo(BarChartTemplate)\n","import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\n\nconst DoughnutChartTemplate = ({title, labels, data}) => {\n  const dataSet = {\n    labels: labels,\n    datasets: [\n      {\n        label: title,\n        data: data,\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)', 'rgba(255, 159, 64)'],\n        hoverOffset: 4,\n      },\n    ],\n  }\n\n  const options = {\n    plugins: {\n      responsive: true,\n      hoverBorderWidth: 2,\n      legend: {\n        display: true,\n        position: 'right',\n        align: 'start',\n      },\n    },\n  }\n  return (\n    // <CChart\n    //   type='doughnut'\n    //   customTooltips={false}\n    //   labels={labels}\n    //   data={data}\n    //   options={{\n    //     responsive: true,\n    //     hoverBorderWidth: 2,\n    //     plugins: {\n    //       title: {\n    //         display: true,\n    //         text: title || '',\n    //         font: {\n    //           size: 24,\n    //         },\n    //       },\n    //     },\n    //     borderRadius: 10,\n    //     inflateAmount: 1,\n    //   }}\n    // />\n    <CChart type='doughnut' data={dataSet} customTooltips={false} options={options} />\n  )\n}\nexport default React.memo(DoughnutChartTemplate)\n","import {CButton, CFormTextarea, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow} from '@coreui/react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport {useEffect, useState} from 'react'\nimport ModalStatus from '../../forms/ModalStatus'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport BasicFileDownloadForm from '../../forms/downloadForm/BasicFileDownloadForm'\n\nconst UserDetailModal = ({value, visible, setVisible}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [resignUser, setResignUser] = useState({\n    userId: 2,\n    name: '',\n    email: '',\n    createdAt: '',\n    updatedAt: '',\n    status: '',\n    phoneNumber: '',\n    resignReason: '',\n    businessName: '',\n    businessRegistration: '',\n    businessNumber: '',\n    businessAddress: '',\n  })\n\n  // API 통신 함수\n  const onloadMallResignUser = async value => {\n    const {userId} = value\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {userId},\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_RESIGNUSER,\n      })\n      if (!data?.data?.isSuccess || isEmpty(data?.data?.result)) {\n        console.log('onloadMallResignUser error')\n        if (data?.data?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(data?.data?.message)\n        }\n        return\n      }\n      setResignUser(data.data.result)\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    if (visible) {\n      onloadMallResignUser(value)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible])\n\n  const closeModal = () => {\n    setVisible(false)\n  }\n  return (\n    <CModal size='lg' visible={visible} onClose={closeModal}>\n      <CModalHeader>\n        <CModalTitle>탈퇴회원 상세정보</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput id={'id'} placeholder={'User Id'} label={'No'} value={value.no} readOnly disabled />\n          <ModalInput id={'userName'} placeholder={'이름'} label={'이름'} value={resignUser.name} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput id={'email'} placeholder={'이메일'} label={'이메일'} value={resignUser.email} readOnly disabled />\n          <ModalInput\n            id={'createdAt'}\n            placeholder={'최초등록일'}\n            label={'최초등록일'}\n            value={resignUser.createdAt}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'phoneNumber'}\n            placeholder={'휴대전화번호'}\n            label={'휴대전화번호'}\n            value={resignUser.phoneNumber}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'businessName'}\n            placeholder={'상호명'}\n            label={'상호명'}\n            value={resignUser.businessName}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'updatedAt'}\n            placeholder={'계정탈퇴일'}\n            label={'계정탈퇴일'}\n            value={resignUser.updatedAt}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'businessNumber'}\n            placeholder={'사업자등록번호'}\n            label={'사업자등록번호'}\n            value={resignUser.businessNumber}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessAddress'}\n            placeholder={'사업장주소'}\n            label={'사업장주소'}\n            value={resignUser.businessAddress}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <BasicFileDownloadForm\n            id={'businessRegistration'}\n            placeholder={'사업자등록증'}\n            label={'사업자등록증'}\n            value={resignUser.businessRegistration}\n          />\n        </CRow>\n\n        <CRow className={'p-2'}>\n          {resignUser?.resignReason.length < 20 ? (\n            <ModalInput\n              id={'resignReason'}\n              placeholder={'탈퇴사유'}\n              label={'탈퇴사유'}\n              value={resignUser.resignReason}\n              readOnly\n              disabled\n            />\n          ) : (\n            <CFormTextarea\n              id={'resignReason'}\n              placeholder={'탈퇴사유'}\n              label={'탈퇴사유'}\n              value={resignUser.resignReason}\n              rows='4'\n              readOnly\n              disabled\n            />\n          )}\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalStatus id={'userStatus'} placeholder={'상태'} label={'상태'} value={resignUser.status} />\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={closeModal}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport ResignUserModal from '../../../components/Modal/officialMall/ResignUserModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {resignUserListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport DoughnutChartTemplate from '../../../components/chart/DoughnutChartTemplate'\nimport BarChartTemplate from '../../../components/chart/BarChartTemplate'\n\nconst ResignUserList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [resignUserList, setResignUserList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n\n  const [showModal, setShowModal] = useState(false)\n  const [chartLabels, setChartLabels] = useState([\n    '서비스 이용 불편',\n    '가격 불만족',\n    '제품 기능 불만족',\n    '기타(직접 입력)',\n  ])\n  const [chartData, setChartData] = useState([])\n\n  // const chartList = {\n  //   countResignReasonByService: {\n  //     value: '서비스 이용 불편',\n  //     backgroundColor: 'rgba(255, 99, 132, 0.2)',\n  //     borderColor: 'rgb(255, 159, 64)',\n  //   },\n  //   countResignReasonByPrice: {\n  //     value: '가격 불만족',\n  //     backgroundColor: 'rgba(255, 159, 64, 0.2)',\n  //     borderColor: 'rgb(201, 203, 207)',\n  //   },\n  //   countResignReasonByItem: {\n  //     value: '제품 기능에 불만족',\n  //     backgroundColor: 'rgba(201, 203, 207, 0.2)',\n  //     borderColor: 'rgb(255, 205, 86)',\n  //   },\n  //   countResignReasonBySelf: {\n  //     value: '직접 입력',\n  //     backgroundColor: 'rgba(255, 205, 86, 0.2)',\n  //     borderColor: 'rgb(75, 192, 192)',\n  //   },\n  // }\n\n  const resignUserOptions = [\n    {\n      key: 'createdAt',\n      value: '최초등록일',\n    },\n    {key: 'updatedAt', value: '계정탈퇴일'},\n  ]\n\n  // API 통신 함수\n  const onLoadMallReginUserList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_RESIGNUSERS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('onLoadMallReginUserList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setResignUserList(\n        res.result.resignUserInfos.map((item, index) => {\n          return {...item, no: res.result.resignUserInfos.length - index}\n        }),\n      )\n      setChartData([\n        res.result.countResignReasonByService,\n        res.result.countResignReasonByPrice,\n        res.result.countResignReasonByItem,\n        res.result.countResignReasonBySelf || 0,\n      ])\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallReginUserList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowUserDetailModal = item => {\n    setSelectedItem(item)\n    setShowModal(!showModal)\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='탈퇴 회원 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <CRow>\n              <CCol xs={4}>\n                <CCardBody>\n                  <DoughnutChartTemplate title={'탈퇴 사유'} labels={chartLabels} data={chartData} />\n                </CCardBody>\n              </CCol>\n              <CCol xs={8}>\n                <CCardBody>\n                  <BarChartTemplate title={'탈퇴 사유'} labels={chartLabels} data={chartData} />\n                </CCardBody>\n              </CCol>\n            </CRow>\n            <div>서비스 이용 불편 : {chartData[0]}</div>\n            <div> 가격 불만족 : {chartData[1]}</div>\n            <div> 제품 기능 불만족 : {chartData[2]}</div>\n            <div>기타(직접 입력) : {chartData[3]}</div>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={resignUserList}\n              onClick={handleShowUserDetailModal}\n              columns={resignUserListColumns}\n              className={'userList'}\n              datePickerOptions={resignUserOptions}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <ResignUserModal value={selectedItem} visible={showModal} setVisible={setShowModal} readOnly />\n    </CRow>\n  )\n}\nexport default ResignUserList\n"],"names":["BarChartTemplate","_ref","title","labels","data","dataSet","datasets","label","backgroundColor","_jsx","CChart","type","customTooltips","options","plugins","hoverBorderWidth","legend","display","position","align","scales","y","beginAtZero","React","DoughnutChartTemplate","hoverOffset","responsive","value","visible","setVisible","navigate","useNavigate","resignUser","setResignUser","useState","userId","name","email","createdAt","updatedAt","status","phoneNumber","resignReason","businessName","businessRegistration","businessNumber","businessAddress","useEffect","async","_data$data","_data$data2","ApiConfig","request","query","path","method","HttpMethod","GET","url","EndPoint","GET_MALL_RESIGNUSER","_data$data3","_data$data4","isSuccess","isEmpty","result","console","log","code","alert","message","error","onloadMallResignUser","closeModal","_jsxs","CModal","size","onClose","children","CModalHeader","CModalTitle","CModalBody","CRow","className","ModalInput","id","placeholder","no","readOnly","disabled","BasicFileDownloadForm","length","CFormTextarea","rows","ModalStatus","CModalFooter","CButton","color","onClick","ResignUserList","resignUserList","setResignUserList","selectedItem","setSelectedItem","showModal","setShowModal","chartLabels","setChartLabels","chartData","setChartData","res","GET_MALL_RESIGNUSERS","resignUserInfos","map","item","index","countResignReasonByService","countResignReasonByPrice","countResignReasonByItem","countResignReasonBySelf","onLoadMallReginUserList","PageHeader","CCol","xs","CCard","CCardBody","ListTemplate","items","columns","resignUserListColumns","datePickerOptions","key","ResignUserModal"],"sourceRoot":""}