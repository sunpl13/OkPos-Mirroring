{"version":3,"file":"static/js/2656.d93a54b9.chunk.js","mappings":"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","sources":["utils/columns/homePage/employment/Columns.js","pages/homePage/employment/Employment.js"],"sourcesContent":["export const employmentColumns = [\n  {\n    key: 'number',\n    _props: {color: 'primary', className: 'number'},\n  },\n  {\n    key: 'categoryKorean',\n    label: '카테고리',\n    _props: {color: 'primary', className: 'categoryKorean'},\n  },\n  {\n    key: 'title',\n    label: '공고 제목',\n    _props: {color: 'primary', className: 'title'},\n  },\n  {\n    key: 'startedAt',\n    label: '공고 시작일',\n    _props: {color: 'primary', className: 'startedAt'},\n  },\n  {\n    key: 'closedAt',\n    label: '공고 종료일',\n    _props: {color: 'primary', className: 'employEndDate'},\n  },\n  {\n    key: 'proceed',\n    label: '진행 상태',\n    _props: {color: 'primary', className: 'proceed'},\n  },\n]\n","import React, {useEffect, useState} from 'react'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport EmploymemtDetailModal from '../../../components/Modal/homePage/employment/EmploymemtDetailModal'\nimport {employmentColumns} from '../../../utils/columns/homePage/employment/Columns'\nimport {category} from '../../../utils/columns/homePage/employment/ColumnsSelectedValue'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nconst Employment = () => {\n  const [items, setItems] = useState([])\n  const [showModal, setShowModal] = useState(false)\n  const [isReadOnly, setIsReadOnly] = useState(true)\n  const [selectedItem, setSelectedItem] = useState({\n    recruitmentId: -1,\n    category: '',\n    proceed: 0,\n    title: '',\n    startedAt: new Date(),\n    closedAt: new Date(),\n    imageUrls: [],\n    jobType: 'FULL_TIME',\n    location: '',\n    education: 'UNIVERSITY_GRADUATE_4_YEAR',\n    career: 'ANY',\n    duty: '',\n    qualification: '',\n    preference: '',\n    hiringReason: '',\n    departmentStatus: '',\n    otherNote: '',\n  })\n\n  const onLoadEmploymentList = async () => {\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {},\n        method: HttpMethod.GET,\n        url: EndPoint.RECRUITMENT,\n      })\n      setItems(data?.data.result.responses)\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  //가져오기 onLoad\n  //생성 onCreate\n  //수정 onUpdate\n  //삭제 onDelete\n  const onLoadDetail = async id => {\n    try {\n      const {data} = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {\n          recruitmentId: id,\n        },\n        method: HttpMethod.GET,\n        url: `${EndPoint.RECRUITMENT}/:recruitmentId`,\n      })\n\n      setSelectedItem(data.result)\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  useEffect(() => {\n    onLoadEmploymentList()\n  }, [])\n\n  const handleShowEmploymentDetailModal = async item => {\n    onLoadDetail(item.recruitmentId)\n    setShowModal(!showModal)\n  }\n\n  const handleEmploymentAddModal = () => {\n    setIsReadOnly(false)\n    setSelectedItem({\n      recruitmentId: -1,\n      category: '',\n      proceed: 0,\n      title: '',\n      startedAt: new Date(),\n      closedAt: new Date(),\n      imageUrls: [],\n      jobType: 'FULL_TIME',\n      location: '',\n      education: 'UNIVERSITY_GRADUATE_4_YEAR',\n      career: 'ANY',\n      duty: '',\n      qualification: '',\n      preference: '',\n      hiringReason: '',\n      departmentStatus: '',\n      otherNote: '',\n    })\n    setShowModal(!showModal)\n  }\n\n  const handleEmployDetailOnChange = ({target}) => {\n    const {id, value} = target\n\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n\n  return (\n    <>\n      <PageHeader title='채용관리' />\n      <CRow>\n        <CCol xs={12}>\n          <CCard className='mb-4'>\n            <CCardHeader>\n              <CForm className='row g-3'>\n                <CCol xs={1}>\n                  <CButton color='primary' onClick={onLoadEmploymentList}>\n                    조회하기\n                  </CButton>\n                </CCol>\n                <CCol xs={1}>\n                  <CButton color='primary' onClick={handleEmploymentAddModal}>\n                    추가\n                  </CButton>\n                </CCol>\n              </CForm>\n            </CCardHeader>\n            <CCardBody>\n              <ListTemplate\n                items={items}\n                onClick={handleShowEmploymentDetailModal}\n                columns={employmentColumns}\n                className={'userList'}\n                selectedOptions={category}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <EmploymemtDetailModal\n        onChange={handleEmployDetailOnChange}\n        visible={showModal}\n        value={selectedItem}\n        setVisible={setShowModal}\n        isReadOnly={isReadOnly}\n        setIsReadOnly={setIsReadOnly}\n        getList={onLoadEmploymentList}\n        setSelectedItem={setSelectedItem}\n      />\n    </>\n  )\n}\n\nexport default Employment\n"],"names":["employmentColumns","key","_props","color","className","label","useState","items","setItems","showModal","setShowModal","isReadOnly","setIsReadOnly","recruitmentId","category","proceed","title","startedAt","Date","closedAt","imageUrls","jobType","location","education","career","duty","qualification","preference","hiringReason","departmentStatus","otherNote","selectedItem","setSelectedItem","onLoadEmploymentList","ApiConfig","data","query","path","method","HttpMethod","url","EndPoint","result","responses","alert","onLoadDetail","id","useEffect","handleShowEmploymentDetailModal","item","PageHeader","xs","onClick","ListTemplate","columns","selectedOptions","EmploymemtDetailModal","onChange","target","value","visible","setVisible","getList"],"sourceRoot":""}