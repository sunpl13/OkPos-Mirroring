{"version":3,"file":"static/js/4751.2d96cbcc.chunk.js","mappings":"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","sources":["components/chart/BarChartTemplate.js","pages/partnerCenter/users/InActiveUserList.js"],"sourcesContent":["import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\nimport PropTypes, {object} from 'prop-types'\n\nconst BarChartTemplate = ({title, data}) => {\n  console.log(data)\n  return (\n    <CChart\n      type='bar'\n      customTooltips={false}\n      data={{\n        labels: [' '],\n        datasets: data || [],\n      }}\n      options={{\n        responsive: true,\n        hoverBorderWidth: 2,\n        plugins: {\n          title: {\n            display: true,\n            text: title || '',\n            font: {\n              size: 24,\n            },\n          },\n        },\n        borderRadius: 10,\n        inflateAmount: 1,\n      }}\n    />\n  )\n}\n\nBarChartTemplate.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.arrayOf(object),\n}\nexport default React.memo(BarChartTemplate)\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport UserDetailModal from '../../../components/Modal/partnerCenter/users/UserDetailModal'\nimport BarChartTemplate from '../../../components/chart/BarChartTemplate'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {withdrawalUsersColumns} from '../../../utils/columns/partnerCenter/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\n\nconst InActiveUserList = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState([])\n  const [showModal, setShowModal] = useState(false)\n  const [chartData, setChartData] = useState([])\n\n  const chartList = {\n    inconvenienceOfService: {\n      value: '불편한 서비스',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      borderColor: 'rgb(255, 159, 64)',\n    },\n    disSatisfiedWithPrice: {\n      value: '가격 불만족',\n      backgroundColor: 'rgba(255, 159, 64, 0.2)',\n      borderColor: 'rgb(201, 203, 207)',\n    },\n    disSatisfiedWithProductFeature: {\n      value: '제품 기능에 만족하지 못함',\n      backgroundColor: 'rgba(201, 203, 207, 0.2)',\n      borderColor: 'rgb(255, 205, 86)',\n    },\n    directInput: {\n      value: '직접 입력',\n      backgroundColor: 'rgba(255, 205, 86, 0.2)',\n      borderColor: 'rgb(75, 192, 192)',\n    },\n  }\n\n  // 탈퇴회원 API\n  const getList = async () => {\n    try {\n      const {\n        data: {isSuccess, result, code, message},\n      } = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: `${EndPoint.GET_PARTNER_INACTIVE_USERS}`,\n      })\n      if (!isSuccess || isEmpty(result)) {\n        return\n      }\n      if (code === 1000) {\n      } else {\n        alert(message)\n      }\n      setItems(result?.inActiveUserInfoPartnerDTOs)\n      setChartData([])\n      for (const [key, value] of Object.entries(result?.inActiveUserWithdrawalCategoryStatistics)) {\n        setChartData(chartData => [\n          ...chartData,\n          {\n            label: chartList[key].value,\n            data: [value],\n            backgroundColor: chartList[key].backgroundColor,\n            borderColor: chartList[key].borderColor,\n            borderWidth: 1,\n          },\n        ])\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  useEffect(() => {\n    getList()\n  }, [])\n\n  /** Open Modal*/\n  const handleShowUserDetailModal = async ({id}) => {\n    setShowModal(!showModal)\n    try {\n      const {data} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        // userId\n        url: `${EndPoint.GET_PARTNER_INACTIVE_USERS}/${id}`,\n      })\n      console.log(data)\n      if (!data.isSuccess || isEmpty(data?.result)) {\n        return\n      }\n      if (data?.code === 1000) {\n        setSelectedItem(data.result)\n      } else {\n        alert(data?.message)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  const handleUserDetailModalUpdateData = data => {\n    setItems(items.map(value => (value.id === data.id ? data : value)))\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='탈퇴 회원 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <BarChartTemplate title={'탈퇴 사유'} data={chartData || [{}]} />\n            <ListTemplate\n              items={items}\n              onClick={handleShowUserDetailModal}\n              columns={withdrawalUsersColumns}\n              className={'userList'}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <UserDetailModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        upDate={handleUserDetailModalUpdateData}\n        readOnly\n      />\n    </CRow>\n  )\n}\nexport default InActiveUserList\n"],"names":["BarChartTemplate","title","data","console","log","type","customTooltips","labels","datasets","options","responsive","hoverBorderWidth","plugins","display","text","font","size","borderRadius","inflateAmount","React","useState","items","setItems","selectedItem","setSelectedItem","showModal","setShowModal","chartData","setChartData","chartList","inconvenienceOfService","value","backgroundColor","borderColor","disSatisfiedWithPrice","disSatisfiedWithProductFeature","directInput","getList","ApiConfig","method","HttpMethod","url","EndPoint","isSuccess","result","code","message","isEmpty","alert","inActiveUserInfoPartnerDTOs","key","label","borderWidth","Object","entries","inActiveUserWithdrawalCategoryStatistics","useEffect","handleShowUserDetailModal","id","PageHeader","xs","className","ListTemplate","onClick","columns","withdrawalUsersColumns","UserDetailModal","visible","setVisible","upDate","map","readOnly"],"sourceRoot":""}