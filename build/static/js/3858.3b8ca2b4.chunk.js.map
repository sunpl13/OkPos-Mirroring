{"version":3,"file":"static/js/3858.3b8ca2b4.chunk.js","mappings":"oMAIMA,EAAmB,SAAH,GAAuB,IAAlBC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAChC,OACE,SAAC,KAAM,CACLC,KAAK,MACLC,gBAAgB,EAChBF,KAAM,CACJG,OAAQ,CAAC,KACTC,SAAUJ,GAAQ,IAEpBK,QAAS,CACPC,YAAY,EACZC,iBAAkB,EAClBC,QAAS,CACPT,MAAO,CACLU,SAAS,EACTC,KAAMX,GAAS,GACfY,KAAM,CACJC,KAAM,MAIZC,aAAc,GACdC,cAAe,IAIvB,EAMA,IAAeC,EAAAA,KAAWjB,E,6DCe1B,IApCoB,SAAH,GAA6C,IAAxCkB,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAwB/B,OACE,iCACE,SAAC,KAAU,CAACC,QAAO,UAAKH,EAAE,UAAUI,UAAU,0BAAyB,SACpEF,GAAS,SAEZ,SAAC,KAAI,CAACE,UAAU,qBAAqBC,MAAO,CAACZ,QAAS,QAAQ,UAC5D,SAAC,KAAM,CAACa,MA7BQ,SAACC,GACrB,OAAQA,GACN,IAAK,SACH,MAAO,UACT,IAAK,WACH,MAAO,SACT,QACE,MAAO,UAEb,CAoBqBC,CAAcP,GAAO,SAjBrB,SAACM,GACpB,OAAQA,GACN,IAAK,SACH,MAAO,qBACT,IAAK,WACH,MAAO,2BACT,QACE,MAAO,eAEb,CAQ4CE,CAAaR,SAI3D,C,wECHA,IA3C8B,SAAH,GAAqD,IAAhDD,EAAE,EAAFA,GAAiBC,GAAF,EAAXS,YAAkB,EAALT,OAAOC,EAAK,EAALA,MAAOS,EAAU,EAAVA,WAE7D,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,MAG5BC,EAAAA,EAAAA,YAAU,WACR,GAAId,EAAO,CACT,IAAMe,EAAaf,EAAMgB,MAAM,KAEzBC,EAAaF,EADDA,EAAWG,OACa,GAC1CL,EAAYI,EACd,CACF,GAAG,CAACjB,IAWJ,OACE,iCACE,SAAC,KAAU,CAACE,QAAO,UAAKH,EAAE,UAAUI,UAAU,0BAAyB,UACrE,iBAAMA,UAAWO,EAAa,WAAa,GAAG,SAAET,GAAS,WAE3D,SAAC,KAAI,CAACE,UAAU,qBAAqBC,MAAO,CAACZ,QAAS,QAAQ,SAC3DQ,GACC,gBAAKG,UAAU,iBAAgB,UAC7B,cAAGgB,KAAMnB,EAAOoB,UAAQ,WACrBR,OAIL,gBAAKT,UAAU,iBAAgB,iFAKzC,C,6OCyHA,EA3JwB,SAAH,GAAsC,IAAjCH,EAAK,EAALA,MAAOqB,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAElCC,GAAWC,EAAAA,EAAAA,MAGjB,GAAoCb,EAAAA,EAAAA,UAAS,CAC3Cc,OAAQ,EACRC,KAAM,GACNC,MAAO,GACPC,UAAW,GACXC,UAAW,GACXvB,OAAQ,GACRwB,YAAa,GACbC,aAAc,GACdC,aAAc,GACdC,qBAAsB,GACtBC,eAAgB,GAChBC,gBAAiB,KACjB,eAbKC,EAAU,KAAEC,EAAa,KAgB1BC,EAAoB,yCAAG,WAAMtC,GAAK,sFACzB,OAANyB,EAAUzB,EAAVyB,OAAM,kBAEQc,EAAAA,EAAAA,QAAkB,CACnCxD,KAAM,CAAC,EACPyD,MAAO,CAAC,EACRC,KAAM,CAAChB,OAAAA,GACPiB,OAAQC,EAAAA,EAAAA,IACRC,IAAKC,EAAAA,EAAAA,sBACL,OANQ,GAOD,QAPH9D,EAAI,cAOD,IAAJA,GAAU,QAAN,EAAJA,EAAMA,YAAI,OAAV,EAAY+D,aAAaC,EAAAA,EAAAA,IAAY,OAAJhE,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMA,YAAI,WAAN,EAAJ,EAAYiE,QAAO,gBAMtD,OALDC,QAAQC,IAAI,8BACa,QAAjB,OAAJnE,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMA,YAAI,WAAN,EAAJ,EAAYoE,MACd5B,EAAS,UAET6B,MAAU,OAAJrE,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMA,YAAI,WAAN,EAAJ,EAAYsE,SACnB,0BAGHhB,EAActD,EAAKA,KAAKiE,QAAO,kDAE/BC,QAAQC,IAAI,EAAD,IACXE,MAAM,6HAA6B,0DAEtC,gBAxByB,uCA2B1BtC,EAAAA,EAAAA,YAAU,WACJO,GACFiB,EAAqBtC,EAEzB,GAAG,CAACqB,IAEJ,IAAMiC,EAAa,WACjBhC,GAAW,EACb,EACA,OACE,UAAC,KAAM,CAAC3B,KAAK,KAAK0B,QAASA,EAASkC,QAASD,EAAW,WACtD,SAAC,KAAY,WACX,SAAC,KAAW,mEAEd,UAAC,KAAU,YACT,UAAC,KAAI,CAACnD,UAAW,MAAM,WACrB,SAACqD,EAAA,EAAU,CAACzD,GAAI,KAAMU,YAAa,UAAWR,MAAO,KAAMD,MAAOA,EAAMyB,OAAQgC,UAAQ,EAACC,UAAQ,KACjG,SAACF,EAAA,EAAU,CAACzD,GAAI,WAAYU,YAAa,eAAMR,MAAO,eAAMD,MAAOoC,EAAWV,KAAM+B,UAAQ,EAACC,UAAQ,QAEvG,UAAC,KAAI,CAACvD,UAAW,MAAM,WACrB,SAACqD,EAAA,EAAU,CAACzD,GAAI,QAASU,YAAa,qBAAOR,MAAO,qBAAOD,MAAOoC,EAAWT,MAAO8B,UAAQ,EAACC,UAAQ,KACrG,SAACF,EAAA,EAAU,CACTzD,GAAI,YACJU,YAAa,iCACbR,MAAO,iCACPD,MAAOoC,EAAWR,UAClB6B,UAAQ,EACRC,UAAQ,QAGZ,UAAC,KAAI,CAACvD,UAAW,MAAM,WACrB,SAACqD,EAAA,EAAU,CACTzD,GAAI,cACJU,YAAa,uCACbR,MAAO,uCACPD,MAAOoC,EAAWN,YAClB2B,UAAQ,EACRC,UAAQ,KAEV,SAACF,EAAA,EAAU,CACTzD,GAAI,eACJU,YAAa,qBACbR,MAAO,qBACPD,MAAOoC,EAAWJ,aAClByB,UAAQ,EACRC,UAAQ,QAGZ,UAAC,KAAI,CAACvD,UAAW,MAAM,WACrB,SAACqD,EAAA,EAAU,CACTzD,GAAI,eACJU,YAAa,2BACbR,MAAO,2BACPD,MAAOoC,EAAWL,aAClB0B,UAAQ,EACRC,UAAQ,KAEV,SAACF,EAAA,EAAU,CACTzD,GAAI,YACJU,YAAa,iCACbR,MAAO,iCACPD,MAAOoC,EAAWP,UAClB4B,UAAQ,EACRC,UAAQ,QAGZ,SAAC,KAAI,CAACvD,UAAW,MAAM,UACrB,SAACqD,EAAA,EAAU,CACTzD,GAAI,iBACJU,YAAa,6CACbR,MAAO,6CACPD,MAAOoC,EAAWF,eAClBuB,UAAQ,EACRC,UAAQ,OAGZ,SAAC,KAAI,CAACvD,UAAW,MAAM,UACrB,SAACqD,EAAA,EAAU,CACTzD,GAAI,kBACJU,YAAa,iCACbR,MAAO,iCACPD,MAAOoC,EAAWD,gBAClBsB,UAAQ,EACRC,UAAQ,OAGZ,SAAC,KAAI,CAACvD,UAAW,MAAM,UACrB,SAACwD,EAAA,EAAqB,CACpB5D,GAAI,uBACJU,YAAa,uCACbR,MAAO,uCACPD,MAAOoC,EAAWH,0BAGtB,SAAC,KAAI,CAAC9B,UAAW,MAAM,UACrB,SAACyD,EAAA,EAAW,CAAC7D,GAAI,aAAcU,YAAa,eAAMR,MAAO,eAAMD,MAAOoC,EAAW9B,eAGrF,SAAC,KAAY,WACX,SAAC,KAAO,CAACD,MAAM,YAAYwD,QAASP,EAAW,8BAMvD,E,iCCvCA,EAhHuB,WAErB,IAAM/B,GAAWC,EAAAA,EAAAA,MAGjB,GAA4Cb,EAAAA,EAAAA,UAAS,IAAG,eAAjDmD,EAAc,KAAEC,EAAiB,KACxC,GAAwCpD,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7CqD,EAAY,KAAEC,EAAe,KAEpC,GAAkCtD,EAAAA,EAAAA,WAAS,GAAM,eAA1CuD,EAAS,KAAEC,EAAY,KAC9B,GAAkCxD,EAAAA,EAAAA,UAAS,IAAG,eAAvCyD,EAAS,KAAEC,EAAY,KAExBC,EAAY,CAChBC,uBAAwB,CACtBvE,MAAO,wCACPwE,gBAAiB,0BACjBC,YAAa,qBAEfC,sBAAuB,CACrB1E,MAAO,kCACPwE,gBAAiB,0BACjBC,YAAa,sBAEfE,+BAAgC,CAC9B3E,MAAO,wEACPwE,gBAAiB,2BACjBC,YAAa,qBAEfG,YAAa,CACX5E,MAAO,4BACPwE,gBAAiB,0BACjBC,YAAa,sBAKXI,EAAuB,yCAAG,0HAEFtC,EAAAA,EAAAA,QAAkB,CAC1CG,OAAQC,EAAAA,EAAAA,IACRC,IAAKC,EAAAA,EAAAA,uBACL,OAHS,GAGT,SAEM,QALKiC,EAAG,EAAT/F,YAKC,IAAH+F,GAAAA,EAAKhC,aAAaC,EAAAA,EAAAA,IAAW,OAAH+B,QAAG,IAAHA,OAAG,EAAHA,EAAK9B,QAAO,gBAMxC,OALDC,QAAQC,IAAI,iCACM,QAAX,OAAH4B,QAAG,IAAHA,OAAG,EAAHA,EAAK3B,MACP5B,EAAS,UAET6B,MAAS,OAAH0B,QAAG,IAAHA,OAAG,EAAHA,EAAKzB,SACZ,0BAOH,IAJAU,EAAkBe,EAAI9B,OAAO+B,iBAC7BV,EAAa,IAEb,aACK,sBAAOW,EAAG,KAAEhF,EAAK,KACpBqE,GAAa,SAAAD,GAAS,wBACjBA,GAAS,CACZ,CACEnE,MAAM,GAAD,OAAKqE,EAAUU,GAAKhF,MAAK,YAAIA,EAAK,WACvCjB,KAAM,CAACiB,GACPwE,gBAAiBF,EAAUU,GAAKR,gBAChCC,YAAaH,EAAUU,GAAKP,YAC5BQ,YAAa,IACd,GACD,EAVJ,MAA2BC,OAAOC,QAAQL,EAAIM,0CAAyC,eAAG,IAWzF,kDAEDnC,QAAQC,IAAI,EAAD,IACXE,MAAM,6HAA6B,0DAEtC,kBApC4B,oCAuC7BtC,EAAAA,EAAAA,YAAU,WACR+D,GACF,GAAG,IAUH,OACE,UAAC,KAAI,YACH,SAACQ,EAAA,EAAU,CAACvG,MAAM,4CAClB,SAAC,KAAI,CAACwG,GAAI,GAAG,UACX,SAAC,KAAK,CAACnF,UAAU,OAAM,UACrB,SAAC,KAAS,WACR,SAACtB,EAAA,EAAgB,CAACC,MAAO,4BAASC,KAAMqF,GAAa,CAAC,CAAC,YAI7D,SAAC,KAAI,CAACkB,GAAI,GAAG,UACX,SAAC,KAAK,CAACnF,UAAU,OAAM,UACrB,SAAC,KAAS,WACR,SAACoF,EAAA,EAAY,CACXC,MAAO1B,EACPD,QApBsB,SAAA4B,GAChCxB,EAAgBwB,GAChBtB,GAAcD,EAChB,EAkBYwB,QAASC,EAAAA,GACTxF,UAAW,oBAKnB,SAACyF,EAAe,CAAC5F,MAAOgE,EAAc3C,QAAS6C,EAAW5C,WAAY6C,EAAcV,UAAQ,MAGlG,C","sources":["components/chart/BarChartTemplate.js","components/forms/ModalStatus.tsx","components/forms/downloadForm/BasicFileDownloadForm.js","components/Modal/officialMall/ResignUserModal.js","pages/officialMall/users/ResignUserList.js"],"sourcesContent":["import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\nimport PropTypes, {object} from 'prop-types'\n\nconst BarChartTemplate = ({title, data}) => {\n  return (\n    <CChart\n      type='bar'\n      customTooltips={false}\n      data={{\n        labels: [' '],\n        datasets: data || [],\n      }}\n      options={{\n        responsive: true,\n        hoverBorderWidth: 2,\n        plugins: {\n          title: {\n            display: true,\n            text: title || '',\n            font: {\n              size: 24,\n            },\n          },\n        },\n        borderRadius: 10,\n        inflateAmount: 1,\n      }}\n    />\n  )\n}\n\nBarChartTemplate.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.arrayOf(object),\n}\nexport default React.memo(BarChartTemplate)\n","import {CBadge, CCol, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\ninterface ModalInputProps {\n  type?: string\n  onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void\n  id: string\n  placeholder: string\n  value: string\n  label: string\n  readOnly?: boolean\n  disabled?: boolean\n  status?: boolean\n}\n\nconst ModalStatus = ({id, value, label}: ModalInputProps) => {\n  const getBadgeColor = (status: string) => {\n    switch (status) {\n      case 'ACTIVE':\n        return 'success'\n      case 'INACTIVE':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  // 상태값 Text get 함수\n  const getBadgeText = (status: string) => {\n    switch (status) {\n      case 'ACTIVE':\n        return '활성화'\n      case 'INACTIVE':\n        return '비활성화'\n      default:\n        return '기타'\n    }\n  }\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        {label || ' * '}\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        <CBadge color={getBadgeColor(value)}>{getBadgeText(value)}</CBadge>\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalStatus\n","import {CCol, CFormLabel} from '@coreui/react'\nimport {useEffect, useState} from 'react'\n\nconst BasicFileDownloadForm = ({id, placeholder, value, label, isRequired}) => {\n  // Local state\n  const [fileName, setFileName] = useState('')\n\n  // Life Cycle\n  useEffect(() => {\n    if (value) {\n      const arSplitUrl = value.split('/') //   \"/\" 로 전체 url 을 나눈다\n      const nArLength = arSplitUrl.length\n      const arFileName = arSplitUrl[nArLength - 1] // 나누어진 배열의 맨 끝이 파일명이다\n      setFileName(arFileName)\n    }\n  }, [value])\n\n  const downloadFile = ({value}) => {\n    const element = document.createElement('a')\n    const file = new Blob([document.getElementById('input').value], {\n      type: 'text/plain;charset=utf-8}',\n    })\n    element.href = value\n    element.click()\n  }\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        {value ? (\n          <div className='col-form-label'>\n            <a href={value} download>\n              {fileName}\n            </a>\n          </div>\n        ) : (\n          <div className='col-form-label'>등록된 파일이 없습니다.</div>\n        )}\n      </CCol>\n    </>\n  )\n}\n\nexport default BasicFileDownloadForm\n","import {CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow} from '@coreui/react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport {useEffect, useState} from 'react'\nimport ModalStatus from '../../forms/ModalStatus'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport BasicFileDownloadForm from '../../forms/downloadForm/BasicFileDownloadForm'\n\nconst UserDetailModal = ({value, visible, setVisible}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [resignUser, setResignUser] = useState({\n    userId: 2,\n    name: '',\n    email: '',\n    createdAt: '',\n    updatedAt: '',\n    status: '',\n    phoneNumber: '',\n    resignReason: '',\n    businessName: '',\n    businessRegistration: '',\n    businessNumber: '',\n    businessAddress: '',\n  })\n\n  // API 통신 함수\n  const onloadMallResignUser = async value => {\n    const {userId} = value\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {userId},\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_RESIGNUSER,\n      })\n      if (!data?.data?.isSuccess || isEmpty(data?.data?.result)) {\n        console.log('onloadMallResignUser error')\n        if (data?.data?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(data?.data?.message)\n        }\n        return\n      }\n      setResignUser(data.data.result)\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    if (visible) {\n      onloadMallResignUser(value)\n    }\n  }, [visible])\n\n  const closeModal = () => {\n    setVisible(false)\n  }\n  return (\n    <CModal size='lg' visible={visible} onClose={closeModal}>\n      <CModalHeader>\n        <CModalTitle>탈퇴회원 상세정보</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput id={'id'} placeholder={'User Id'} label={'No'} value={value.userId} readOnly disabled />\n          <ModalInput id={'userName'} placeholder={'이름'} label={'이름'} value={resignUser.name} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput id={'email'} placeholder={'이메일'} label={'이메일'} value={resignUser.email} readOnly disabled />\n          <ModalInput\n            id={'createdAt'}\n            placeholder={'최초등록일'}\n            label={'최초등록일'}\n            value={resignUser.createdAt}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'phoneNumber'}\n            placeholder={'휴대전화번호'}\n            label={'휴대전화번호'}\n            value={resignUser.phoneNumber}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'businessName'}\n            placeholder={'상호명'}\n            label={'상호명'}\n            value={resignUser.businessName}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'resignReason'}\n            placeholder={'탈퇴사유'}\n            label={'탈퇴사유'}\n            value={resignUser.resignReason}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'updatedAt'}\n            placeholder={'계정탈퇴일'}\n            label={'계정탈퇴일'}\n            value={resignUser.updatedAt}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessNumber'}\n            placeholder={'사업자등록번호'}\n            label={'사업자등록번호'}\n            value={resignUser.businessNumber}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessAddress'}\n            placeholder={'사업장주소'}\n            label={'사업장주소'}\n            value={resignUser.businessAddress}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <BasicFileDownloadForm\n            id={'businessRegistration'}\n            placeholder={'사업자등록증'}\n            label={'사업자등록증'}\n            value={resignUser.businessRegistration}\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalStatus id={'userStatus'} placeholder={'상태'} label={'상태'} value={resignUser.status} />\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={closeModal}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport ResignUserModal from '../../../components/Modal/officialMall/ResignUserModal'\nimport BarChartTemplate from '../../../components/chart/BarChartTemplate'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {resignUserListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\n\nconst ResignUserList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [resignUserList, setResignUserList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n\n  const [showModal, setShowModal] = useState(false)\n  const [chartData, setChartData] = useState([])\n\n  const chartList = {\n    inconvenienceOfService: {\n      value: '불편한 서비스',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      borderColor: 'rgb(255, 159, 64)',\n    },\n    disSatisfiedWithPrice: {\n      value: '가격 불만족',\n      backgroundColor: 'rgba(255, 159, 64, 0.2)',\n      borderColor: 'rgb(201, 203, 207)',\n    },\n    disSatisfiedWithProductFeature: {\n      value: '제품 기능에 만족하지 못함',\n      backgroundColor: 'rgba(201, 203, 207, 0.2)',\n      borderColor: 'rgb(255, 205, 86)',\n    },\n    directInput: {\n      value: '직접 입력',\n      backgroundColor: 'rgba(255, 205, 86, 0.2)',\n      borderColor: 'rgb(75, 192, 192)',\n    },\n  }\n\n  // API 통신 함수\n  const onLoadMallReginUserList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_RESIGNUSERS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('onLoadMallReginUserList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setResignUserList(res.result.resignUserInfos)\n      setChartData([])\n\n      // 이부분 수정 요망\n      for (const [key, value] of Object.entries(res.inActiveUserWithdrawalCategoryStatistics)) {\n        setChartData(chartData => [\n          ...chartData,\n          {\n            label: `${chartList[key].value} ${value} 명`,\n            data: [value],\n            backgroundColor: chartList[key].backgroundColor,\n            borderColor: chartList[key].borderColor,\n            borderWidth: 2,\n          },\n        ])\n      }\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallReginUserList()\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowUserDetailModal = item => {\n    setSelectedItem(item)\n    setShowModal(!showModal)\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='탈퇴 회원 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <BarChartTemplate title={'탈퇴 사유'} data={chartData || [{}]} />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={resignUserList}\n              onClick={handleShowUserDetailModal}\n              columns={resignUserListColumns}\n              className={'userList'}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <ResignUserModal value={selectedItem} visible={showModal} setVisible={setShowModal} readOnly />\n    </CRow>\n  )\n}\nexport default ResignUserList\n"],"names":["BarChartTemplate","title","data","type","customTooltips","labels","datasets","options","responsive","hoverBorderWidth","plugins","display","text","font","size","borderRadius","inflateAmount","React","id","value","label","htmlFor","className","style","color","status","getBadgeColor","getBadgeText","placeholder","isRequired","useState","fileName","setFileName","useEffect","arSplitUrl","split","arFileName","length","href","download","visible","setVisible","navigate","useNavigate","userId","name","email","createdAt","updatedAt","phoneNumber","resignReason","businessName","businessRegistration","businessNumber","businessAddress","resignUser","setResignUser","onloadMallResignUser","ApiConfig","query","path","method","HttpMethod","url","EndPoint","isSuccess","isEmpty","result","console","log","code","alert","message","closeModal","onClose","ModalInput","readOnly","disabled","BasicFileDownloadForm","ModalStatus","onClick","resignUserList","setResignUserList","selectedItem","setSelectedItem","showModal","setShowModal","chartData","setChartData","chartList","inconvenienceOfService","backgroundColor","borderColor","disSatisfiedWithPrice","disSatisfiedWithProductFeature","directInput","onLoadMallReginUserList","res","resignUserInfos","key","borderWidth","Object","entries","inActiveUserWithdrawalCategoryStatistics","PageHeader","xs","ListTemplate","items","item","columns","resignUserListColumns","ResignUserModal"],"sourceRoot":""}