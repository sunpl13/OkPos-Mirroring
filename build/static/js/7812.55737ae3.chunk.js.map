{"version":3,"file":"static/js/7812.55737ae3.chunk.js","mappings":"ySASA,MA2HA,EA3HeA,KACb,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAYC,IAAiBJ,EAAAA,EAAAA,WAAS,IACtCK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,KAChCO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,CAC/CS,UAAW,EACXC,MAAO,GACPC,UAAW,GACXN,QAAS,GACTO,UAAW,GACXC,SAAU,KAGNC,EAAmBC,UACvB,IACE,MAAMC,QAAaC,EAAAA,EAAUC,QAAQ,CACnCF,KAAM,CAAC,EACPG,MAAO,CAAC,EACRC,KAAM,CAAC,EACPC,OAAQC,EAAAA,EAAWC,IACnBC,IAAKC,EAAAA,EAASC,mBAEhB3B,EAAa,OAAJiB,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKW,OAAOC,UAC7B,CAAE,MAAOC,GACPC,MAAMD,EACR,IAyBFE,EAAAA,EAAAA,YAAU,KACRjB,GAAkB,GACjB,IA8BH,OACEkB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAC1B,MAAM,8BAClByB,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAAAH,UACHC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAI,GAAGL,UACXF,EAAAA,EAAAA,MAACQ,EAAAA,GAAK,CAACC,UAAU,OAAMP,SAAA,EACrBC,EAAAA,EAAAA,KAACO,EAAAA,GAAW,CAAAR,UACVC,EAAAA,EAAAA,KAACQ,EAAAA,GAAK,CAACF,UAAU,UAASP,UACxBC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAI,EAAEL,UACVC,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,QAhCCC,KAC3B1C,GAAc,GACdI,EAAgB,CACdC,UAAW,EACXC,MAAO,GACPC,UAAW,GACXN,QAAS,GACTO,UAAW,GACXC,SAAU,KAEZP,EAAW,IACXJ,GAAcD,EAAU,EAqBgCiC,SAAC,wBAIjDC,EAAAA,EAAAA,KAACY,EAAAA,GAAS,CAAAb,UACRC,EAAAA,EAAAA,KAACa,EAAAA,EAAY,CACXlD,MAAOA,EACP+C,QA5CsB9B,UAtBfA,WACnB,IACE,MAAM,KAACC,SAAcC,EAAAA,EAAUC,QAAQ,CACrCF,KAAM,CAAC,EACPG,MAAO,CAAC,EACRC,KAAM,CACJX,SAAUwC,GAEZ5B,OAAQC,EAAAA,EAAWC,IACnBC,IAAI,GAAD0B,OAAKzB,EAAAA,EAAS0B,mBAEnB3C,EAAgBQ,EAAKW,QACrBrB,EAAWU,EAAKW,OAAOtB,QACzB,CAAE,MAAOwB,GACPC,MAAMD,EACR,GAQAuB,CAAaC,EAAK5C,UAClBP,GAAcD,EAAU,EA2CZqD,QAASC,EAAAA,EACTd,UAAW,uBAMrBN,EAAAA,EAAAA,KAACqB,EAAAA,EAAY,CACXC,SAlC6BC,IAAe,IAAd,OAACC,GAAOD,EAC1C,MAAM,GAACT,EAAE,MAAEW,GAASD,EAEpBnD,EAAgB,IACXD,EACH,CAAC0C,GAAKW,GACN,EA6BEC,QAAS5D,EACT2D,MAAOrD,EACPuD,WAAY5D,EACZC,WAAYA,EACZC,cAAeA,EACf2D,QAASjD,EACTN,gBAAiBA,EACjBH,QAASA,EACTC,WAAYA,MAEb,C","sources":["pages/officialMall/notice/Notice.js"],"sourcesContent":["import {useEffect, useState} from 'react'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport {homePageNoticeColumns} from '../../../utils/columns/homePage/notice/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport NoticeDetail from '../../../components/Modal/homePage/notice/NoticeDetail'\nimport PrimaryBtn from '../../../components/common/PrimaryBtn'\nconst Notice = () => {\n  const [items, setItems] = useState([])\n  const [showModal, setShowModal] = useState(false)\n  const [isReadOnly, setIsReadOnly] = useState(true)\n  const [content, setContent] = useState('') //quill용 state\n  const [selectedItem, setSelectedItem] = useState({\n    noticeId: -1,\n    title: '',\n    createdAt: '',\n    content: '',\n    imageUrls: [],\n    fileUrls: [],\n  })\n\n  const onLoadNoticeList = async () => {\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {},\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_NOTICES,\n      })\n      setItems(data?.data.result.responses)\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  //가져오기 onLoad\n  //생성 onCreate\n  //수정 onUpdate\n  //삭제 onDelete\n  const onLoadDetail = async id => {\n    try {\n      const {data} = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {\n          noticeId: id,\n        },\n        method: HttpMethod.GET,\n        url: `${EndPoint.GET_MALL_NOTICE}`,\n      })\n      setSelectedItem(data.result)\n      setContent(data.result.content)\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  useEffect(() => {\n    onLoadNoticeList()\n  }, [])\n\n  const handleShowNoticeDetailModal = async item => {\n    onLoadDetail(item.noticeId)\n    setShowModal(!showModal)\n  }\n\n  const handleNoticeAddModal = () => {\n    setIsReadOnly(false)\n    setSelectedItem({\n      noticeId: -1,\n      title: '',\n      createdAt: '',\n      content: '',\n      imageUrls: [],\n      fileUrls: [],\n    })\n    setContent('')\n    setShowModal(!showModal)\n  }\n\n  const handleNoticeDetailOnChange = ({target}) => {\n    const {id, value} = target\n\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n\n  return (\n    <>\n      <PageHeader title='공지사항' />\n      <CRow>\n        <CCol xs={12}>\n          <CCard className='mb-4'>\n            <CCardHeader>\n              <CForm className='row g-3'>\n                <CCol xs={1}>\n                  <PrimaryBtn onClick={handleNoticeAddModal}>추가</PrimaryBtn>\n                </CCol>\n              </CForm>\n            </CCardHeader>\n            <CCardBody>\n              <ListTemplate\n                items={items}\n                onClick={handleShowNoticeDetailModal}\n                columns={homePageNoticeColumns}\n                className={'userList'}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <NoticeDetail\n        onChange={handleNoticeDetailOnChange}\n        visible={showModal}\n        value={selectedItem}\n        setVisible={setShowModal}\n        isReadOnly={isReadOnly}\n        setIsReadOnly={setIsReadOnly}\n        getList={onLoadNoticeList}\n        setSelectedItem={setSelectedItem}\n        content={content}\n        setContent={setContent}\n      />\n    </>\n  )\n}\n\nexport default Notice\n"],"names":["Notice","items","setItems","useState","showModal","setShowModal","isReadOnly","setIsReadOnly","content","setContent","selectedItem","setSelectedItem","noticeId","title","createdAt","imageUrls","fileUrls","onLoadNoticeList","async","data","ApiConfig","request","query","path","method","HttpMethod","GET","url","EndPoint","GET_MALL_NOTICES","result","responses","error","alert","useEffect","_jsxs","_Fragment","children","_jsx","PageHeader","CRow","CCol","xs","CCard","className","CCardHeader","CForm","PrimaryBtn","onClick","handleNoticeAddModal","CCardBody","ListTemplate","id","concat","GET_MALL_NOTICE","onLoadDetail","item","columns","homePageNoticeColumns","NoticeDetail","onChange","_ref","target","value","visible","setVisible","getList"],"sourceRoot":""}