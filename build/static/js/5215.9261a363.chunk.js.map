{"version":3,"file":"static/js/5215.9261a363.chunk.js","mappings":"wLA2BA,IAxBwB,SAAH,GAAwC,IAAnCA,EAAO,EAAPA,QAASC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAC1C,OACE,SAAC,KAAM,CAACD,QAASA,EAASE,UAAU,SAAQ,UAC1C,UAAC,KAAO,YACN,SAAC,KAAW,uGACZ,SAAC,KAAU,gKACX,UAAC,KAAY,YACX,SAAC,KAAO,CAACC,MAAM,SAASJ,QAASA,EAAQ,iCAGzC,SAAC,KAAO,CAACI,MAAM,UAAUJ,QAAS,kBAAME,GAAW,EAAM,EAAC,2BAOpE,C,+DCUA,IA3B4B,SAAH,GAAoE,IAA/DD,EAAO,EAAPA,QAAQ,EAAD,EAAEI,MAAAA,OAAK,MAAG,4BAAO,EAAEC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUL,EAAU,EAAVA,WAC1E,OACE,UAAC,KAAM,CAACD,QAASA,EAASE,UAAU,SAAQ,WAC1C,SAAC,KAAY,WACX,SAAC,KAAW,UAAEE,OAEhB,SAAC,KAAU,UAAGC,GAAW,oEACzB,UAAC,KAAY,YACX,SAAC,KAAO,CAACN,QAASO,EAAUH,MAAM,UAAS,2BAG3C,SAAC,KAAO,CAACA,MAAM,YAAYJ,QAAS,kBAAME,GAAW,EAAM,EAAC,+BAMpE,C,4ECPA,IARmB,SAAH,GAAwB,IAAnBG,EAAK,EAALA,MACnB,OACE,SAACG,EAAM,WACL,wBAAKH,KAGX,EAIA,IAAMG,EAASC,EAAAA,GAAAA,IAAU,sG,2GCgDzB,IA1D8B,SAAH,GAAqD,IAAhDC,EAAE,EAAFA,GAAiBC,GAAF,EAAXC,YAAkB,EAALD,OAAOE,EAAK,EAALA,MAAOC,EAAU,EAAVA,WA2B7D,OACE,iCACE,SAAC,KAAU,CAACC,QAAO,UAAKL,EAAE,UAAUM,UAAU,0BAAyB,UACrE,iBAAMA,UAAWF,EAAa,WAAa,GAAG,SAAED,GAAS,WAE3D,SAAC,KAAI,WACG,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOM,QAAS,EACfN,EAAMO,KAAI,SAACC,EAAMC,GACf,IAAMC,EAAWF,EAAKG,MAAM,KAEtBC,EAAWF,EADMA,EAASJ,OACW,GAC3C,OACE,gBAAiBD,UAAU,iBAAgB,UACzC,UAACQ,EAAS,CACRC,KAAK,OAELC,MAAMC,EAAAA,EAAAA,IAAgBR,GACtBnB,QAAS,kBA3CJ,SAAC4B,EAAKL,GACzBK,GAAMD,EAAAA,EAAAA,IAAgBC,GAEtBC,MAAMD,EAAK,CAACE,OAAQ,QACjBC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,MACb,IACCF,MAAK,SAAAE,GACJ,IAAML,EAAMM,OAAOC,IAAIC,gBAAgBH,GACjCI,EAAIC,SAASC,cAAc,KACjCF,EAAEX,KAAOE,EACTS,EAAEG,SAAWjB,EACbe,SAASG,KAAKC,YAAYL,GAC1BA,EAAEM,QACFC,YAAW,SAAAC,GACTX,OAAOC,IAAIW,gBAAgBlB,EAC7B,GAAG,KACHS,EAAEU,QACJ,IACCC,OAAM,SAAAC,GACLC,QAAQC,MAAM,QAASF,EACzB,GACJ,CAqB+BG,CAAajC,EAAMI,EAAS,EAAC,UAE3CH,EAAQ,EAAC,KAAIG,IAJTH,IAHCA,EAWd,KAEA,gBAAKJ,UAAU,iBAAgB,iFAKzC,EAGA,IAAMQ,EAAYf,EAAAA,GAAAA,KAAW,+T,yECzC7B,IArBmB,SAAH,GAA6F,IAAxF4C,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAU5C,EAAE,EAAFA,GAAIE,EAAW,EAAXA,YAAa2C,EAAK,EAALA,MAAO1C,EAAK,EAALA,MAAO2C,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAU3C,EAAU,EAAVA,WAAY4C,EAAE,EAAFA,GAClG,OACE,iCACE,SAAC,KAAU,CAAC3C,QAAO,UAAKL,EAAE,UAAUM,UAAU,0BAAyB,UACrE,iBAAMA,UAAWF,EAAa,WAAa,GAAG,SAAED,GAAS,WAE3D,SAAC,KAAI,CAACG,UAAU,qBAAqB0C,GAAIA,EAAIC,MAAO,CAACC,QAAS,QAAQ,UACpE,SAAC,KAAU,CACTP,KAAMA,GAAQ,OACd3C,GAAIA,EACJE,YAAaA,GAAe,GAC5B2C,MAAgB,SAATF,OAAkBQ,EAAYN,GAAS,GAC9CD,SAAUA,EACVE,SAAUA,EACVC,SAAUA,QAKpB,C,qLC0BA,EAhCuB,SAAH,GAAgD,IAA3CxD,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAY0B,EAAG,EAAHA,IAC5C,GAA4BkC,EAAAA,EAAAA,UAAS,IAAG,eAA3B,KAAW,KAWxB,OACE,UAAC,KAAM,CAAC3D,UAAU,SAAS4D,KAAK,KAAK9D,QAASA,EAAS+D,QAAS,kBAAM9D,GAAW,EAAM,EAAC,WAEtF,SAAC,KAAU,CAACc,UAAU,WAAU,UAC9B,SAAC,KAAM,CAACiD,MAAM,SAASC,OAAK,EAACC,KAAKxC,EAAAA,EAAAA,IAAgBC,GAAMwC,IAAI,iCAAQC,MAAO,SAO7E,SAAC,KAAY,WACX,SAAC,KAAO,CAACjE,MAAM,UAAUJ,QAAS,kBAAME,GAAW,EAAM,EAAC,wBAMlE,E,0GCdA,EAxBwB,SAAH,GAAoC,IAA/BoE,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAC/BC,EAAeC,EAAAA,EAAAA,YACtBC,IAAAA,OAAc,MAWd,OACE,SAACC,EAAU,WACT,SAAC,KAAc,CAACC,OAAQA,EAAAA,EAAO,UAC7B,SAAC,IAAK,CAACC,UAAU,WAAU,UACzB,SAACL,EAAW,CAACM,YAAY,EAAMxB,SAdZ,SAAAyB,GACrBA,GACFT,EAAaI,IAAOK,EAAK,GAAGC,IAAIC,OAAO,eACvCV,EAAWG,IAAOK,EAAK,GAAGC,IAAIC,OAAO,iBAErCX,EAAa,IACbC,EAAW,IAEf,SAWF,EAIMI,GAAalE,EAAAA,EAAAA,IAAOyE,EAAAA,GAAPzE,CAAY,8c,WC4U/B,EAvVqB,SAAH,GAYX,IAXL0E,EAAK,EAALA,MACAnF,EAAO,EAAPA,QACAoF,EAAO,EAAPA,QACApE,EAAS,EAATA,UACAT,EAAQ,EAARA,SACA8E,EAAe,EAAfA,gBAAgB,EAAD,EACfC,iBAAAA,OAAgB,OAAO,EACC,GADD,EACvBC,kBAAwB,EACxBC,mBAAAA,OAAiB,OAAO,MACxBC,oBAAAA,OAAmB,OAAQ,EAC3BC,EAAI,EAAJA,KAGA,GAAkC5B,EAAAA,EAAAA,UAAS,IAAG,eAAvC6B,EAAS,KAAEC,EAAY,KAC9B,GAAsC9B,EAAAA,EAAAA,YAAU,eAAzC+B,EAAW,KAAEC,EAAc,KAClC,GAAkChC,EAAAA,EAAAA,WAAS,GAAM,eAA1CiC,EAAS,KAAEC,EAAY,KAE9B,GAAgClC,EAAAA,EAAAA,UAAS,IAAG,eAArCmC,EAAQ,KAAEC,EAAW,KAC5B,GAAkCpC,EAAAA,EAAAA,UAAS,IAAG,eAAvCqC,EAAS,KAAE7B,EAAY,KAC9B,GAA8BR,EAAAA,EAAAA,UAAS,IAAG,eAAnCsC,EAAO,KAAE7B,EAAU,KAC1B,GAAwCT,EAAAA,EAAAA,UAAS,IAAG,eAA7CuC,EAAY,KAAEC,EAAe,KACpC,IAAsCxC,EAAAA,EAAAA,WAAS,GAAM,iBAA9CyC,GAAW,MAAEC,GAAc,MAgC5BC,GAAc,CAClBC,IAAK,WACL7F,OACE,SAAC,KAAU,CACTH,GAAI,cACJ2C,KAAM,WACNC,SAAU,SAAAqD,GAAK,OAlCnBH,IAAgBD,SAChBX,EACED,EAAUzE,KAAI,SAAAqC,GAAK,yBACdA,GAAK,IACRqD,SAASL,IAA0B,IA8BgB,EACnDK,QAASL,KAGbM,OAAQ,CAAC7F,UAAW,YACpB8F,QAAQ,EACRC,QAAQ,GAMJC,GAAgB,SAAAC,GACpB,OAAQA,GACN,IAAK,SACH,MAAO,UACT,IAAK,WACH,MAAO,SACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,SACT,QACE,MAAO,UAEb,EAGMC,GAAe,SAAAD,GACnB,OAAQA,GACN,IAAK,SACH,MAAO,qBACT,IAAK,WACH,MAAO,2BACT,KAAK,EACH,MAAO,eACT,KAAK,EACH,MAAO,qBACT,QACE,MAAO,eAEb,EAEME,GAAc,SAACR,EAAO/E,GAC1B+E,EAAMS,kBACNpB,GAAcD,GACdG,EAAYtE,EACd,GA4BAyF,EAAAA,EAAAA,YAAU,WACRzB,EAAaT,GACTC,GACFkB,EAAgBlB,EAAQ,GAAGsB,IAE/B,GAAG,CAACvB,KAEJkC,EAAAA,EAAAA,YAAU,WAGNvB,EADEM,EAEAT,EAAUoB,QACR,SAAAxD,GAAK,OACHmB,IAAOnB,EAAM+D,UAAW,kBAAkBrC,OAAO,eAAiBkB,GAClEzB,IAAOnB,EAAM+D,UAAW,kBAAkBrC,OAAO,eAAiBmB,CAAO,IAKhE,GAEnB,GAAG,CAACA,IAQJ,OACE,iCACE,UAAC,KAAI,CAACpF,UAAW,sBAAsB,UACpCwE,IACC,SAAC,KAAI,CAAC9B,GAAI,EAAE,UACV,UAAC,KAAW,YACV,UAAC,KAAS,CAACvD,UAAU,MAAMoH,QAAQ,cAAa,WAC9C,SAAC,KAAe,CAACnH,MAAM,YAAYmH,QAAQ,UAAUjG,OAAK,WACvD+E,KAEH,SAAC,KAAU,CAAC,aAAW,+CACvB,SAAC,KAAa,UACXjB,EAAQlE,KAAI,YAAY,IAAVwF,EAAG,EAAHA,IACb,GAAY,cAARA,EACF,OACE,SAAC,KAAa,CAAW1G,QAAS,kBAlBxB,SAAA0G,GAC9BJ,EAAgBI,EAClB,CAgB8Dc,CAAwBd,EAAI,EAAC,SAClEA,GADiBA,EAK1B,UAGJ,SAAC,KAAO,CAACrD,KAAK,SAASjD,MAAM,YAAYmH,QAAQ,UAAUvH,QAAS,WA5B9EkD,QAAQuE,IAAI,OA4B6F,EAAC,+BAMrGnC,IACC,SAAC,KAAI,CAAC5B,GAAI,EAAE,UACV,SAAC,EAAe,CAACY,aAAcA,EAAcC,WAAYA,UAI/D,mBACA,SAACmD,EAAA,EAAW,CACVvC,MAAOU,GAAeF,EACtBP,QAASK,EAAmB,CAAIgB,IAAW,eAAKrB,IAAWA,GAAW,KACtEuC,WAAY,EACZC,cAAY,EACZC,YAAU,EACVC,eAAa,EACbC,eAAgB,CACd3H,MAAO,WAET4H,WAAYhI,EACZiI,WAAY,CACVC,OAAO,EACPC,YAAY,EACZC,SAAS,EACTnE,MAAO,SACPjD,UAAWA,GAEbqH,cAAe,CACbC,SAAU,SAAAC,GAAI,OACZ,eAAIvI,QAAS,SAAA2G,GAAK,OAAIA,EAAMS,iBAAiB,EAAC,UAC5C,SAAC,KAAU,CAAC9D,SAAU,kBA1LL,SAAAiF,GAC3B3C,EACED,EAAUzE,KAAI,SAAAqC,GAAK,OACjBA,EAAMiF,MAAQD,EAAKC,KAAG,kBAEbjF,GAAK,IACRqD,SAAU2B,EAAK3B,UAEjBrD,CAAK,KAGRgF,EAAK3B,QAGR2B,EAAK3B,SAAU,EAFf2B,EAAK3B,SAAU,EAIjB1D,QAAQuE,IAAIc,EACd,CAyKwCE,CAAqBF,EAAK,EAAE3B,QAAS2B,EAAK3B,UAAW,KAC9E,EAEP8B,aAAc,SAAAH,GAAI,OAChB,eAAIvI,QAAS,SAAA2G,GAAK,OAAIA,EAAMS,iBAAiB,EAAC,UAC5C,SAAC,KAAU,CAAC9D,SAAU,kBAAMoC,EAAK6C,EAAK,EAAE3B,QAAS2B,EAAKG,eAAgB,KACnE,EAGPzB,OAAQ,gBAAEA,EAAM,EAANA,OAAM,OACd,yBACE,SAAC,KAAM,CAAC7G,MAAO4G,GAAcC,GAAQ,SAAEC,GAAaD,MACjD,EAGP0B,MAAO,gBAAEA,EAAK,EAALA,MAAK,OACZ,yBACE,SAAC,KAAM,CAACvI,MAAO4G,GAAc2B,GAAO,SAAEzB,GAAayB,MAChD,EAGPC,MAAO,gBAAEA,EAAK,EAALA,MAAK,OACZ,yBACE,SAAC,KAAM,CAACC,SAAO,EAACC,WAAS,EAAC3E,IAAKyE,EAAOxE,IAAI,MACvC,EAGP2E,OAAQ,gBAAEA,EAAM,EAANA,OAAM,OACd,eAAI/I,QAAS,SAAA2G,GAAK,OAAuB,IAAlBoC,EAAO9H,OAAekG,GAAYR,EAAOoC,GAAU/I,CAAO,EAAE,UACjF,SAAC,KAAM,CAAC6I,SAAO,EAAC1E,IAAuB,IAAlB4E,EAAO9H,OAAe,GAAK8H,EAAO,GAAI3E,IAAI,GAAGC,MAAO,IAAK2E,OAAQ,MACnF,EAEPC,UAAW,SAAAV,GAAI,OACb,eAAIvI,QAAS,SAAA2G,GAAK,OA9IA,SAACA,EAAO4B,GAClC5B,EAAMS,kBACN7G,EAASgI,EACX,CA2IgCW,CAAoBvC,EAAO4B,EAAK,EAAC,UACrD,SAAC,KAAM,CAACnI,MAAO,SAAS,2BACrB,EAIP+I,QAAS,gBAAEA,EAAO,EAAPA,QAAO,OAAM,wBAAK9D,EAAkBA,EAAgB8D,GAAW,IAAQ,EAClFC,UAAW,gBAAEA,EAAS,EAATA,UAAS,OAAM,wBAAK/D,EAAkBA,EAAgB+D,GAAa,IAAQ,EACxFC,YAAa,gBAAEA,EAAW,EAAXA,YAAW,OAAM,wBAAKhE,EAAkBA,EAAgBgE,GAAe,IAAQ,EAC9FC,OAAQ,gBAAEA,EAAM,EAANA,OAAM,OAAM,wBAAKjE,EAAkBA,EAAgBiE,GAAU,IAAQ,EAC/EC,QAAS,gBAAEA,EAAO,EAAPA,QAAO,OAAM,wBAAKA,EAAU,qBAAQ,6BAAa,EAC5DC,eAAgB,gBAAEA,EAAc,EAAdA,eAAc,OAC9B,yBACE,UAAC,KAAM,CAACpJ,MAAO,UAAU,UAAEiF,EAAkBA,EAAgBmE,GAAkB,WAAU,QACtF,EAEPC,WAAY,gBAAEA,EAAU,EAAVA,WAAU,OACtB,yBACE,SAAC,KAAM,CAACZ,SAAO,EAAC1E,IAAKsF,GAAc,GAAIrF,IAAI,GAAGC,MAAO,IAAK2E,OAAQ,MAC/D,EAEPU,WAAY,gBAAEA,EAAU,EAAVA,WAAU,OAAM,eAAI1I,UAAU,aAAY,UAAE2I,EAAAA,EAAAA,IAAQD,IAAiB,EAEnFE,UAAW,gBAAEA,EAAS,EAATA,UAAS,OAAM,wBAAKlF,IAAOkF,EAAW,kBAAkB3E,OAAO,iBAAqB,EACjG4E,SAAU,gBAAEA,EAAQ,EAARA,SAAQ,OAAM,wBAAKnF,IAAOmF,EAAU,kBAAkB5E,OAAO,iBAAqB,EAC9FqC,UAAW,gBAAEA,EAAS,EAATA,UAAS,OAAM,wBAAK5C,IAAO4C,EAAW,kBAAkBrC,OAAO,iBAAqB,EACjG6E,UAAW,gBAAEA,EAAS,EAATA,UAAS,OAAM,wBAAKpF,IAAOoF,EAAW,kBAAkB7E,OAAO,iBAAqB,EACjG8E,UAAW,gBAAEA,EAAS,EAATA,UAAS,OAAM,wBAAKrF,IAAOqF,EAAW,kBAAkB9E,OAAO,iBAAqB,EACjG+E,YAAa,gBAAEA,EAAW,EAAXA,YAAW,OAAM,0BAAgB,OAAXA,QAAW,IAAXA,OAAW,EAAXA,EAAa/I,OAAM,YAAQ,EAChEgJ,UAAW,gBAAEA,EAAS,EAATA,UAAS,OACpB,eACEjK,QAAS,SAAA2G,GAAK,OACS,IAArBsD,EAAUhJ,QAAiC,MAAjBgJ,EAAU,GAAa9C,GAAYR,EAAOsD,EAAU,IAAMjK,CAAO,EAC5F,SAEqB,IAArBiK,EAAUhJ,QAAiC,MAAjBgJ,EAAU,GACnC,IAEA,SAAC,KAAM,CACLpB,SAAO,EACP1E,KAAKxC,EAAAA,EAAAA,IAAgBsI,EAAU,IAC/B7F,KAAKzC,EAAAA,EAAAA,IAAgBsI,EAAU,IAC/B5F,MAAO,IACP2E,OAAQ,MAGT,GAmBTkB,aAAc,qDAEdC,aAAc,KAEfpE,GACC,SAAC,EAAc,CAAC9F,QAAS8F,EAAW7F,WAAY8F,EAAchG,QAxN/C,WACnBgG,GAAcD,EAChB,EAsN2FnE,IAAKqE,IAE1F,KAIR,C,uJC9VamE,EAAa,CACxBC,IAAK,MACLC,KAAM,OACNC,IAAK,MACLC,MAAO,SAIYC,EAAS,wCAmD3B,OAnD2B,oCAC5B,YAAkD,IAAlCC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAM9I,EAAM,EAANA,OAAQF,EAAG,EAAHA,IACzC,IACE,IAAIiJ,EAAAA,EAAAA,IAAQ/I,KAAW+I,EAAAA,EAAAA,IAAQjJ,GAE7B,YADAkJ,MAAM,uEAUR,GAAIF,EACF,cAA2BG,OAAOC,QAAQJ,GAAK,eAAE,CAA5C,sBAAOlE,EAAG,KAAEnD,EAAK,KACpB3B,EAAMA,EAAIqJ,QAAQ,IAAD,OAAKvE,GAAOnD,EAC/B,EAGGsH,EAAAA,EAAAA,IAAQF,KACX/I,GACE,IACAmJ,OAAOG,KAAKP,GACTzJ,KAAI,SAAAwF,GAAG,OAAIA,EAAM,IAAMiE,EAAMjE,EAAI,IACjCyE,KAAK,MAGZ,IAAMC,EAAU,CACdC,OAAQ,mBACR,eAAgB,mBAChB,iBAAkBnJ,OAAOoJ,eAAeC,QAAQ,QAGlD,OAAQzJ,GACN,KAAKsI,EAAWC,IACd,OAAOmB,EAAAA,GAAAA,IAAU5J,EAAK,CAACwJ,QAASA,IAClC,KAAKhB,EAAWE,KACd,OAAOkB,EAAAA,GAAAA,KAAW5J,EAAK8I,EAAM,CAACU,QAASA,IACzC,KAAKhB,EAAWI,MACd,OAAOgB,EAAAA,GAAAA,MAAY5J,EAAK8I,EAAM,CAACU,QAASA,IAC1C,KAAKhB,EAAWG,IACd,OAAOiB,EAAAA,GAAAA,IAAU5J,EAAK8I,EAAM,CAACU,QAASA,IAQ5C,CAFE,MAAOjI,GACP2H,MAAM3H,EAAMsI,QACd,CACF,KAAC,EAnD2B,E,yFCXxBC,EAAMC,uBAECC,EAAW,CAEtBC,uBAAuB,GAAD,OAAKH,EAAG,gCAC9BI,WAAW,GAAD,OAAKJ,EAAG,gBAClBK,sBAAsB,GAAD,OAAKL,EAAG,qBAC7BM,YAAY,GAAD,OAAKN,EAAG,sBACnBO,WAAW,GAAD,OAAKP,EAAG,sBAClBQ,OAAO,GAAD,OAAKR,EAAG,iBACdS,aAAa,GAAD,OAAKT,EAAG,kBACpBU,qBAAqB,GAAD,OAAKV,EAAG,0BAC5BW,OAAO,GAAD,OAAKX,EAAG,iBACdY,UAAU,GAAD,OAAKZ,EAAG,4BACjBa,YAAY,GAAD,OAAKb,EAAG,iBACnBc,eAAe,GAAD,OAAKd,EAAG,yBAGtBe,kBAAkB,GAAD,OAAKf,EAAG,wBACzBgB,2BAA2B,GAAD,OAAKhB,EAAG,iCAClCiB,sBAAsB,GAAD,OAAKjB,EAAG,4BAC7BkB,oBAAoB,GAAD,OAAKlB,EAAG,0BAC3BmB,4BAA4B,GAAD,OAAKnB,EAAG,0CACnCoB,sBAAsB,GAAD,OAAKpB,EAAG,4BAC7BqB,mBAAmB,GAAD,OAAKrB,EAAG,yBAC1BsB,yBAAyB,GAAD,OAAKtB,EAAG,+BAChCuB,sBAAsB,GAAD,OAAKvB,EAAG,uCAG7BwB,eAAe,GAAD,OAAKxB,EAAG,qBACtByB,cAAc,GAAD,OAAKzB,EAAG,6BACrB0B,qBAAqB,GAAD,OAAK1B,EAAG,4BAC5B2B,oBAAoB,GAAD,OAAK3B,EAAG,oCAE3B4B,mBAAmB,GAAD,OAAK5B,EAAG,yBAC1B6B,iBAAiB,GAAD,OAAK7B,EAAG,oCACxB8B,wBAAwB,GAAD,OAAK9B,EAAG,8BAC/B+B,gCAAgC,GAAD,OAAK/B,EAAG,8BACvCgC,0BAA0B,GAAD,OAAKhC,EAAG,oCAEjCiC,cAAc,GAAD,OAAKjC,EAAG,oBACrBkC,aAAa,GAAD,OAAKlC,EAAG,2BACpBmC,cAAc,GAAD,OAAKnC,EAAG,oBACrBoC,sBAAsB,GAAD,OAAKpC,EAAG,oBAC7BqC,sBAAsB,GAAD,OAAKrC,EAAG,2BAE7BsC,mBAAmB,GAAD,OAAKtC,EAAG,yBAC1BuC,kBAAkB,GAAD,OAAKvC,EAAG,qCACzBwC,mBAAmB,GAAD,OAAKxC,EAAG,yBAC1ByC,2BAA2B,GAAD,OAAKzC,EAAG,yBAClC0C,2BAA2B,GAAD,OAAK1C,EAAG,qCAElC2C,iBAAiB,GAAD,OAAK3C,EAAG,uBACxB4C,gBAAgB,GAAD,OAAK5C,EAAG,iCACvB6C,iBAAiB,GAAD,OAAK7C,EAAG,uBACxB8C,yBAAyB,GAAD,OAAK9C,EAAG,uBAChC+C,yBAAyB,GAAD,OAAK/C,EAAG,iCAEhCgD,gBAAgB,GAAD,OAAKhD,EAAG,sBACvBiD,uBAAuB,GAAD,OAAKjD,EAAG,6BAC9BkD,yBAAyB,GAAD,OAAKlD,EAAG,+BAGhCmD,cAAc,GAAD,OAAKnD,EAAG,gBAIlB,eACAE,EAASC,uBAAyB,CAAC,IAAC,SAGpCD,EAASsB,eAAiB,CAAC,IAAC,SAC5BtB,EAASuB,cAAgB,CAAC,IAAC,SAC3BvB,EAASwB,qBAAuB,CAAC,IAAC,SAClCxB,EAASyB,oBAAsB,CAAC,IAAC,SACjCzB,EAAS0B,mBAAqB,CAAC,IAAC,SAChC1B,EAAS2B,iBAAmB,CAAC,IAAC,SAC9B3B,EAAS+B,cAAgB,CAAC,IAAC,SAC3B/B,EAASgC,aAAe,CAAC,IAAC,SAC1BhC,EAASoC,mBAAqB,CAAC,IAAC,SAChCpC,EAASqC,kBAAoB,CAAC,IAAC,SAC/BrC,EAASyC,iBAAmB,CAAC,IAAC,SAC9BzC,EAAS0C,gBAAkB,CAAC,IAAC,SAC7B1C,EAAS8C,gBAAkB,CAAC,IAAC,SAC7B9C,EAAS+C,uBAAyB,CAAC,IAAC,SACpC/C,EAASgD,yBAA2B,CAAC,IAAC,SAGtChD,EAASa,kBAAoB,CAAC,IAAC,SAC/Bb,EAASc,2BAA6B,CAAC,IAAC,SACxCd,EAASe,sBAAwB,CAAC,IAAC,SACnCf,EAASgB,oBAAsB,CAAC,IAAC,SACjChB,EAASiB,4BAA8B,CAAC,IAAC,SACzCjB,EAASmB,mBAAqB,CAAC,IAAC,SAChCnB,EAASoB,yBAA2B,CAAC,IAAC,SACtCpB,EAASqB,sBAAwB,CAAC,GAEjC,eACDrB,EAASE,WAAa,CAAC,IAAC,SACxBF,EAASiD,cAAgB,CAAC,IAAC,SAG3BjD,EAAS4B,wBAA0B,CAAC,IAAC,SACrC5B,EAASiC,cAAgB,CAAC,IAAC,SAC3BjC,EAASsC,mBAAqB,CAAC,IAAC,SAChCtC,EAAS2C,iBAAmB,CAAC,GAE3B,eAEF3C,EAAS6B,gCAAkC,CAAC,IAAC,SAC7C7B,EAAS8B,0BAA4B,CAAC,IAAC,SACvC9B,EAASkC,sBAAwB,CAAC,IAAC,SACnClC,EAASmC,sBAAwB,CAAC,IAAC,SACnCnC,EAASuC,2BAA6B,CAAC,IAAC,SACxCvC,EAASwC,2BAA6B,CAAC,IAAC,SACxCxC,EAAS4C,yBAA2B,CAAC,IAAC,SACtC5C,EAAS6C,yBAA2B,CAAC,E,uLCpH7BK,EAAa,CACxB,CACEpI,IAAK,KACL7F,MAAO,KACPgG,OAAQ,CAACzG,MAAO,UAAWY,UAAW,OAExC,CACE0F,IAAK,OACL7F,MAAO,eACPgG,OAAQ,CAACzG,MAAO,UAAWY,UAAW,SAExC,CACE0F,IAAK,QACL7F,MAAO,qBACPgG,OAAQ,CAACzG,MAAO,UAAWY,UAAW,UAExC,CACE0F,IAAK,SACL7F,MAAO,2BACPgG,OAAQ,CAACzG,MAAO,UAAWY,UAAW,WAExC,CACE0F,IAAK,iBACL7F,MAAO,4BACPgG,OAAQ,CAACzG,MAAO,UAAWY,UAAW,oB,iGC4I1C,EAxIkB,SAAH,GAAoF,IAA/E+N,EAAO,EAAPA,QAASxL,EAAK,EAALA,MAAOtD,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYoD,EAAQ,EAARA,SAAU0L,EAAU,EAAVA,WAAYC,EAAa,EAAbA,cAC7E,GAA8CnL,EAAAA,EAAAA,WAAS,GAAM,eAAtDoL,EAAe,KAAEC,EAAkB,KAC1C,GAAwDrL,EAAAA,EAAAA,WAAS,GAAM,eAAhEsL,EAAoB,KAAEC,EAAuB,KAC9CC,GAAWC,EAAAA,EAAAA,MACXhP,EAAQ,yCAAG,oHAEQkK,EAAAA,EAAAA,QAAkB,CACrCC,KAAM,CAAC,EACPC,MAAO,CAAC,EACRC,KAAM,CACJlK,GAAI6C,EAAMiM,WAEZ1N,OAAQsI,EAAAA,EAAAA,MACRxI,IAAI,GAAD,OAAKgK,EAAAA,EAAAA,aAAqB,YAC7B,iBARKlB,EAAI,EAAJA,MASE+E,YACPV,IACAI,GAAmB,GACnBE,GAAwB,GACxBJ,GAAc,GACd/O,GAAW,GACXoP,EAAS,CACPjM,KAAM,kBACNqM,cAAc,EACdC,WAAY,UACZC,UAAW,QACXC,KAAK,GAAD,OAAKnF,EAAKoF,WAEjB,gDAEDhF,MAAM,EAAD,IAAO,yDAEf,kBA5Ba,mCA4Cd,OACE,iCACE,UAAC,KAAM,CAAC3K,UAAU,SAAS4D,KAAK,KAAK9D,QAASA,EAAQ,WACpD,SAAC,KAAY,WACX,SAAC,KAAW,+CAEd,UAAC,KAAU,YACT,UAAC,KAAI,CAACe,UAAU,OAAM,WACpB,SAAC+O,EAAA,EAAU,CACTzM,SAAUA,EACV5C,GAAG,YACHE,YAAY,MACZC,MAAM,KACN2C,UAAU,EACVC,UAAU,EACVF,OAA4B,IAArBA,EAAMiM,UAAmB,GAAKjM,EAAMiM,aAE7C,SAACO,EAAA,EAAU,CACTzM,SAAUA,EACV5C,GAAG,OACHE,YAAY,0DACZC,MAAM,eACN0C,MAAOA,EAAMyM,KACbxM,SAAUwL,EACVvL,SAAUuL,QAId,UAAC,KAAI,CAAChO,UAAU,OAAM,WACpB,SAAC+O,EAAA,EAAU,CACTzM,SAAUA,EACV5C,GAAG,QACHE,YAAY,QACZC,MAAM,qBACN0C,MAAOA,EAAM0M,MACbzM,SAAUwL,EACVvL,SAAUuL,KAEZ,SAACe,EAAA,EAAU,CACTzM,SAAUA,EACV5C,GAAG,SACHE,YAAY,eACZC,MAAM,2BACN0C,MAAOA,EAAM2M,OACb1M,SAAUwL,EACVvL,SAAUuL,QAGd,UAAC,KAAI,YACH,SAAC,KAAU,yCACX,SAAC,KAAa,CACZpO,YAAY,4BACZ4C,SAAUwL,EACVvL,SAAUuL,EACV1L,SAAUA,EACVC,MAAOA,EAAM4M,QACbC,KAAM,GACN1P,GAAG,gBAGP,SAAC,KAAI,WACH,SAAC2P,EAAA,EAAqB,CAAC1P,MAAO4C,EAAM+M,QAAS5P,GAAG,UAAUG,MAAM,mCAGpE,UAAC,KAAY,YACX,SAAC,KAAO,CAACT,MAAM,SAASJ,QAAS,kBAAMmP,GAAmB,EAAK,EAAC,2BAIhE,SAAC,KAAO,CAAC/O,MAAM,UAAUJ,QAnFZ,WACdgP,IAA4B,IAAdzL,EAAMgN,IAGvBrQ,GAAW,GACX+O,GAAc,IAHdI,GAAwB,EAK5B,EA4EuD,2BAKnD,SAACmB,EAAA,EAAmB,CAACjQ,SAAUA,EAAUN,QAASiP,EAAiBhP,WAAYiP,KAC/E,SAACsB,EAAA,EAAe,CAACzQ,QAhFL,WACdqP,GAAwB,GACxBnP,GAAW,GACX+O,GAAc,EAChB,EA4EuChP,QAASmP,EAAsBlP,WAAYmP,MAGpF,ECzCA,EAxGgB,WACd,OAA0BvL,EAAAA,EAAAA,UAAS,IAAG,eAA/BqB,EAAK,KAAEuL,EAAQ,KACtB,GAAkC5M,EAAAA,EAAAA,WAAS,GAAM,eAA1CiC,EAAS,KAAEC,EAAY,KAC9B,GAAoClC,EAAAA,EAAAA,WAAS,GAAK,eAA3CkL,EAAU,KAAEC,EAAa,KAChC,GAAwCnL,EAAAA,EAAAA,UAAS,CAC/C0L,WAAY,EACZW,QAAS,GACTH,KAAM,GACNC,MAAO,GACPU,KAAM,GACNtH,YAAa,GACbiH,QAAS,KACT,eARKM,EAAY,KAAEC,EAAe,KAU9BC,EAAiB,yCAAG,kHAEHrG,EAAAA,EAAAA,QAAkB,CACnCC,KAAM,CAAC,EACPC,MAAO,CAAC,EACRC,KAAM,CAAC,EACP9I,OAAQsI,EAAAA,EAAAA,IACRxI,IAAKgK,EAAAA,EAAAA,eACL,OANIlB,EAAI,OAOVgG,EAAa,OAAJhG,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKoF,OAAOiB,WAAU,gDAErCjG,MAAM,EAAD,IAAO,yDAEf,kBAbsB,mCAejBkG,EAAY,yCAAG,WAAMtQ,GAAE,uGAEJ+J,EAAAA,EAAAA,QAAkB,CACrCC,KAAM,CAAC,EACPC,MAAO,CAAC,EACRC,KAAM,CACJlK,GAAIA,GAENoB,OAAQsI,EAAAA,EAAAA,IACRxI,IAAI,GAAD,OAAKgK,EAAAA,EAAAA,aAAqB,UAC7B,gBARKlB,EAAI,EAAJA,KAUPmG,EAAgBnG,EAAKoF,QAAO,gDAE5BhF,MAAM,EAAD,IAAO,yDAEf,gBAhBiB,uCAkBlBzD,EAAAA,EAAAA,YAAU,WACRyJ,GACF,GAAG,IAEH,IAAMG,EAA4B,yCAAG,WAAM1I,GAAI,sEAC7CyI,EAAazI,EAAKiH,WAClBxJ,GAAcD,GAAU,2CACzB,gBAHiC,sCAYlC,OACE,6BACE,SAACmL,EAAA,EAAU,CAAC7Q,MAAM,sBAClB,SAAC,KAAI,WACH,SAAC,KAAI,CAACqD,GAAI,GAAG,UACX,UAAC,KAAK,CAAC1C,UAAU,OAAM,WACrB,SAAC,KAAW,WACV,SAAC,KAAK,CAACA,UAAU,UAAS,UACxB,SAAC,KAAI,CAAC0C,GAAI,EAAE,UACV,SAAC,KAAO,CAACtD,MAAM,UAAUJ,QAAS8Q,EAAkB,6CAM1D,SAAC,KAAS,WACR,SAACK,EAAA,EAAY,CACXhM,MAAOA,EACPnF,QAASiR,EACT5L,gBAAiB+L,EAAAA,EACjBhM,QAAS0J,EACT9N,UAAU,cACVsE,kBAAkB,cAM5B,SAAC,EAAS,CACRhC,SApC8B,SAAH,GAAkB,IAAb+N,EAAM,EAANA,OAC7B3Q,EAAa2Q,EAAb3Q,GAAI6C,EAAS8N,EAAT9N,MACXsN,GAAgB,kBACXD,GAAY,cACdlQ,EAAK6C,IAEV,EA+BMtD,QAAS8F,EACTxC,MAAOqN,EACP1Q,WAAY8F,EACZgJ,WAAYA,EACZC,cAAeA,EACfF,QAAS+B,MAIjB,C,8IC9GO,IAAMQ,EAAqB,SAAAC,GAChC,OAAOA,EAAMrQ,KAAI,SAAAqH,GACf,OAAOA,EAAK3G,IAAIN,MAAM,SAAS,EACjC,GACF,EAEakQ,EAAmB,SAAAC,GAC9B,MAAM,GAAN,OAAU9F,yBAAqC,yBAAiB8F,EAClE,EAEa9P,EAAkB,SAAAiJ,GAC7B,MAAM,WAAN,OAAkBe,yBAAqC,eAAOA,iBAAgC,0BAAkBf,EAClH,EAEa8G,EAAuB,SAAAD,GAClC,MAAM,GAAN,OAAU9F,yBAAqC,wBAAgB8F,EACjE,C,sBCjBAE,EAAQ,EAAW,CACjBtP,EAAG,eACHuP,EAAG,kCACHC,EAAG,gBACHC,EAAG,eACHC,EAAG,e","sources":["components/Modal/CloseCheckModal.js","components/Modal/DeleteModalTemplate.js","components/common/PageHeader.tsx","components/forms/downloadForm/MultiFileDownloadForm.js","components/forms/inputForm/ModalInput.js","components/list/ThumbnailModal.tsx","components/common/RangeDatePicker.js","components/list/ListTemplate.js","dataManager/apiConfig.js","dataManager/apiMapper.js","utils/columns/homePage/qna/Columns.js","components/Modal/homePage/QnA/QnADetail.js","pages/homePage/QnA/QnAList.js","utils/awsCustom.js","utils/columns/homePage/qna/ColumnsSelectedValue.js"],"sourcesContent":["import {CButton, CHeader, CModal, CModalBody, CModalFooter, CModalTitle} from '@coreui/react'\nimport PropTypes from 'prop-types'\n\nconst CloseCheckModal = ({onClick, visible, setVisible}) => {\n  return (\n    <CModal visible={visible} alignment='center'>\n      <CHeader>\n        <CModalTitle>정말 페이지에서 나가시겠습니까?</CModalTitle>\n        <CModalBody>지금 페이지를 나가시면 변경사항이 저장되지 않습니다.</CModalBody>\n        <CModalFooter>\n          <CButton color='danger' onClick={onClick}>\n            나가기\n          </CButton>\n          <CButton color='primary' onClick={() => setVisible(false)}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CHeader>\n    </CModal>\n  )\n}\n\nCloseCheckModal.propTypes = {\n  onClick: PropTypes.func,\n  visible: PropTypes.bool,\n  setVisible: PropTypes.func,\n}\nexport default CloseCheckModal\n","import {CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle} from '@coreui/react'\nimport PropTypes from 'prop-types'\n\nconst DeleteModalTemplate = ({visible, title = '삭제 확인', children, onDelete, setVisible}) => {\n  return (\n    <CModal visible={visible} alignment='center'>\n      <CModalHeader>\n        <CModalTitle>{title}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>{!children ? '정말 삭제하시겠습니까?' : children}</CModalBody>\n      <CModalFooter>\n        <CButton onClick={onDelete} color='primary'>\n          확인\n        </CButton>\n        <CButton color='secondary' onClick={() => setVisible(false)}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nDeleteModalTemplate.propTypes = {\n  visible: PropTypes.bool,\n  title: PropTypes.string,\n  children: PropTypes.any,\n  onDelete: PropTypes.func,\n  setVisible: PropTypes.func,\n}\n\nexport default DeleteModalTemplate\n","import styled from 'styled-components'\ntype Props = {\n  title: string\n}\n\nconst PageHeader = ({title}: Props) => {\n  return (\n    <Header>\n      <h1>{title}</h1>\n    </Header>\n  )\n}\n\nexport default PageHeader\n\nconst Header = styled.div`\n  border-bottom: 1px solid #ccc;\n  margin-bottom: 40px;\n  margin-top: 20px;\n`\n","import {CCol, CFormLabel} from '@coreui/react'\nimport {map} from 'lodash'\nimport styled from 'styled-components'\nimport {antdImageFormat} from '../../../utils/awsCustom'\n\nconst MultiFileDownloadForm = ({id, placeholder, files, label, isRequired}) => {\n  const downloadFile = (url, fileName) => {\n    url = antdImageFormat(url)\n\n    fetch(url, {method: 'GET'})\n      .then(res => {\n        return res.blob()\n      })\n      .then(blob => {\n        const url = window.URL.createObjectURL(blob)\n        const a = document.createElement('a')\n        a.href = url\n        a.download = fileName\n        document.body.appendChild(a)\n        a.click()\n        setTimeout(_ => {\n          window.URL.revokeObjectURL(url)\n        }, 60000)\n        a.remove()\n      })\n      .catch(err => {\n        console.error('err: ', err)\n      })\n  }\n\n  //onClick={() => downloadFile(file, fileName)}\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol>\n        {files?.length > 0 ? (\n          files.map((file, index) => {\n            const splitUrl = file.split('/') //   \"/\" 로 전체 url 을 나눈다\n            const splitUrlLength = splitUrl.length\n            const fileName = splitUrl[splitUrlLength - 1] // 나누어진 배열의 맨 끝이 파일명이다\n            return (\n              <div key={index} className='col-form-label'>\n                <SpanStyle\n                  role='link'\n                  key={index}\n                  href={antdImageFormat(file)}\n                  onClick={() => downloadFile(file, fileName)}\n                >\n                  {index + 1}. {fileName}\n                </SpanStyle>\n              </div>\n            )\n          })\n        ) : (\n          <div className='col-form-label'>등록된 파일이 없습니다.</div>\n        )}\n      </CCol>\n    </>\n  )\n}\nexport default MultiFileDownloadForm\n\nconst SpanStyle = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  padding: 0 8px;\n  line-height: 1.5714285714285714;\n  flex: auto;\n  transition: all 0.3s;\n  color: #1677ff !important;\n  text-decoration: none;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n`\n","import {CCol, CFormInput, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\nconst ModalInput = ({type, onChange, id, placeholder, value, label, readOnly, disabled, isRequired, xs}) => {\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' xs={xs} style={{display: 'flex'}}>\n        <CFormInput\n          type={type || 'text'}\n          id={id}\n          placeholder={placeholder || ''}\n          value={type === 'file' ? undefined : value || ''}\n          onChange={onChange}\n          readOnly={readOnly}\n          disabled={disabled}\n        />\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalInput\n","import {CButton, CImage, CModal, CModalBody, CModalFooter} from '@coreui/react'\nimport {useState} from 'react'\nimport {antdImageFormat} from '../../utils/awsCustom'\n\nexport interface IImage {\n  img: string\n  altName: string\n}\n\ninterface IThumbnail {\n  thumbnails: any\n  visible: boolean\n  url: string\n  setVisible: (state: boolean) => void\n}\n\nconst ThumbnailModal = ({visible, setVisible, url}: IThumbnail) => {\n  const [imgUrl, setImgUrl] = useState('')\n  // useEffect(() => {\n  //   setImgUrl(thumbnails[0].img)\n\n  //   return () => {\n  //     setImgUrl(thumbnails[0].img)\n  //   }\n  // }, [thumbnails])\n  //const onChangeImg = (selectedUrl: string) => {\n  //     setImgUrl(selectedUrl)\n  //   }\n  return (\n    <CModal alignment='center' size='xl' visible={visible} onClose={() => setVisible(false)}>\n      {/*<CModalHeader></CModalHeader>*/}\n      <CModalBody className='clearfix'>\n        <CImage align='center' fluid src={antdImageFormat(url)} alt='안녕하세요' width={600} />\n        {/* <MultipleRows>\n          {thumbnails.map(item => (\n            <CImage key={item.img} src={item.img} alt={item.altName} width={80} height={60} />\n          ))}\n        </MultipleRows> */}\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='primary' onClick={() => setVisible(false)}>\n          Cancel\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ThumbnailModal\n\n//const MultipleRows = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   flex-wrap: wrap;\n//   gap: 0 10px;\n//   margin-top: 20px;\n//   & img {\n//     width: 80px;\n//     height: 60px;\n//   }\n// `\n","import {ConfigProvider, DatePicker, Space} from 'antd'\nimport locale from 'antd/lib/locale/ko_KR'\nimport 'antd/dist/antd.min.css'\nimport moment from 'moment'\nimport 'moment/locale/ko'\nimport {CCol} from '@coreui/react'\nimport styled from 'styled-components'\n\nconst RangeDatePicker = ({setStartDate, setEndDate}) => {\n  const {RangePicker} = DatePicker\n  moment.locale('ko')\n  const datePickerOnChange = date => {\n    if (date) {\n      setStartDate(moment(date[0]._d).format('YYYY-MM-DD'))\n      setEndDate(moment(date[1]._d).format('YYYY-MM-DD'))\n    } else {\n      setStartDate('')\n      setEndDate('')\n    }\n  }\n\n  return (\n    <PickerCCol>\n      <ConfigProvider locale={locale}>\n        <Space direction='vertical'>\n          <RangePicker allowClear={true} onChange={datePickerOnChange} />\n        </Space>\n      </ConfigProvider>\n    </PickerCCol>\n  )\n}\n\nexport default RangeDatePicker\n\nconst PickerCCol = styled(CCol)`\n  display: flex;\n  flex-direction: row;\n  align-content: end;\n  justify-content: end;\n  height: 100%;\n  width: 100%;\n  & div {\n    height: 100%;\n  }\n  & .ant-space-item {\n    width: 100%;\n  }\n  & .ant-picker {\n    border-radius: 0.375rem;\n    border: solid 1px #9da5b1;\n  }\n  & .ant-space-item {\n    width: 100%;\n    & > div {\n      width: 100%;\n    }\n  }\n  & .ant-space.ant-space-vertical {\n    width: 100%;\n  }\n`\n","import React, {useEffect, useState} from 'react'\nimport {CSmartTable} from '../custom/smart-table/CSmartTable'\nimport PropTypes from 'prop-types'\nimport {\n  CBadge,\n  CButton,\n  CCol,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CFormCheck,\n  CFormInput,\n  CImage,\n  CInputGroup,\n  CRow,\n} from '@coreui/react'\nimport ThumbnailModal from './ThumbnailModal'\nimport RangeDatePicker from '../common/RangeDatePicker'\nimport moment from 'moment'\nimport {isPrice} from '../../utils/utility'\nimport {antdImageFormat} from '../../utils/awsCustom'\n\nconst ListTemplate = ({\n  items, // 리스트 아이템\n  onClick, // 리스트 클릭 이벤트 ex) Modal\n  columns, // 리스트의 헤더\n  className, // 리스트의 클레스 네임\n  onDelete, // 리스트 아이템 삭제\n  selectedOptions, // 리스트의 selectBox 옵션\n  datePickerHidden = true, // 기간선택 데이터 피커 출력 유무\n  itemPerPageHidden = true, // 리스트의 페이지마다 출력될 아이템 개수 선택 박스 출력 유무\n  searchInputHidden = true, // 검색창 출력 유무\n  checkBoxInputHidden = false, // 체크박스 출력 유무\n  func, //보낼 함수\n}) => {\n  // Local state 선언\n  const [listItems, setListItems] = useState([])\n  const [filterItems, setFilterItems] = useState()\n  const [showModal, setShowModal] = useState(false)\n\n  const [imgClick, setImgClick] = useState('')\n  const [startDate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n  const [searchOption, setSearchOption] = useState('')\n  const [allSelected, setAllSelected] = useState(false)\n\n  // 리스트 헤더 전체 체크박스\n  const handleAllSelectedOnChange = () => {\n    setAllSelected(!allSelected)\n    setListItems(\n      listItems.map(value => ({\n        ...value,\n        checked: allSelected ? false : true,\n      })),\n    )\n  }\n  // 리스트 아이템 체크박스\n  const handleItemOnSelected = item => {\n    setListItems(\n      listItems.map(value =>\n        value._id === item._id\n          ? {\n              ...value,\n              checked: !item.checked,\n            }\n          : value,\n      ),\n    )\n    if (!item.checked) {\n      item.checked = true\n    } else {\n      item.checked = false\n    }\n    console.log(item)\n  }\n  // 테이블 헤더의 전체 체크박스\n  const allCheckBox = {\n    key: 'checkBox',\n    label: (\n      <CFormCheck\n        id={'allSelected'}\n        type={'checkbox'}\n        onChange={event => handleAllSelectedOnChange(event)}\n        checked={allSelected}\n      />\n    ),\n    _props: {className: 'checkBox'},\n    sorter: false,\n    filter: false,\n  }\n\n  // 함수 선언\n\n  // 상태값 Color get 함수\n  const getBadgeColor = status => {\n    switch (status) {\n      case 'ACTIVE':\n        return 'success'\n      case 'INACTIVE':\n        return 'danger'\n      case true:\n        return 'success'\n      case false:\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  // 상태값 Text get 함수\n  const getBadgeText = status => {\n    switch (status) {\n      case 'ACTIVE':\n        return '활성화'\n      case 'INACTIVE':\n        return '비활성화'\n      case true:\n        return '완료'\n      case false:\n        return '미완료'\n      default:\n        return '기타'\n    }\n  }\n\n  const testOnClick = (event, url) => {\n    event.stopPropagation()\n    setShowModal(!showModal)\n    setImgClick(url)\n  }\n  const modalOnClick = () => {\n    setShowModal(!showModal)\n  }\n\n  const handleDeleteOnClick = (event, item) => {\n    event.stopPropagation()\n    onDelete(item)\n  }\n\n  const handleOnCheckedApi = async item => {\n    console.log(item)\n    // try {\n    //   const data = await ApiConfig.request({\n    //     data: {\n    //       editorIds: [item.editorId],\n    //     },\n    //     query: {},\n    //     path: {},\n    //     method: HttpMethod.PATCH,\n    //     url: `${EndPoint.EDITOR}/auth`,\n    //   })\n    //   console.log(data)\n    // } catch (error) {\n    //   alert(error)\n    // }\n  }\n\n  useEffect(() => {\n    setListItems(items)\n    if (columns) {\n      setSearchOption(columns[0].key)\n    }\n  }, [items])\n\n  useEffect(() => {\n    // data picker 에 선택된 값\n    if (endDate) {\n      setFilterItems(\n        listItems.filter(\n          value =>\n            moment(value.createdAt, 'YYYYMMDDHHmmss').format('YYYY-MM-DD') >= startDate &&\n            moment(value.createdAt, 'YYYYMMDDHHmmss').format('YYYY-MM-DD') <= endDate,\n        ),\n      )\n      // 생성일로 필터\n    } else {\n      setFilterItems('')\n    }\n  }, [endDate])\n\n  const handleSearchOnClick = () => {\n    console.log('test')\n  }\n  const handleSearchItemOnClick = key => {\n    setSearchOption(key)\n  }\n  return (\n    <>\n      <CRow className={'justify-content-end'}>\n        {searchInputHidden && (\n          <CCol xs={4}>\n            <CInputGroup>\n              <CDropdown alignment='end' variant='input-group'>\n                <CDropdownToggle color='secondary' variant='outline' split>\n                  {searchOption}\n                </CDropdownToggle>\n                <CFormInput aria-label='Text input with segmented dropdown button' />\n                <CDropdownMenu>\n                  {columns.map(({key}) => {\n                    if (key !== 'createdAt') {\n                      return (\n                        <CDropdownItem key={key} onClick={() => handleSearchItemOnClick(key)}>\n                          {key}\n                        </CDropdownItem>\n                      )\n                    }\n                  })}\n                </CDropdownMenu>\n              </CDropdown>\n              <CButton type='button' color='secondary' variant='outline' onClick={() => handleSearchOnClick()}>\n                검색\n              </CButton>\n            </CInputGroup>\n          </CCol>\n        )}\n        {datePickerHidden && (\n          <CCol xs={4}>\n            <RangeDatePicker setStartDate={setStartDate} setEndDate={setEndDate} />\n          </CCol>\n        )}\n      </CRow>\n      <br />\n      <CSmartTable\n        items={filterItems || listItems}\n        columns={checkBoxInputHidden ? [allCheckBox, ...columns] : columns || null}\n        activePage={1}\n        columnSorter\n        pagination\n        clickableRows\n        tableHeadProps={{\n          color: 'primary',\n        }}\n        onRowClick={onClick}\n        tableProps={{\n          hover: true,\n          responsive: true,\n          striped: true,\n          align: 'middle',\n          className: className,\n        }}\n        scopedColumns={{\n          checkBox: item => (\n            <td onClick={event => event.stopPropagation()}>\n              <CFormCheck onChange={() => handleItemOnSelected(item)} checked={item.checked || false} />\n            </td>\n          ),\n          isAuthorized: item => (\n            <td onClick={event => event.stopPropagation()}>\n              <CFormCheck onChange={() => func(item)} checked={item.isAuthorized || false} />\n            </td>\n          ),\n          // 상태\n          status: ({status}) => (\n            <td>\n              <CBadge color={getBadgeColor(status)}>{getBadgeText(status)}</CBadge>\n            </td>\n          ),\n          // 1:1 문의 답변 상태\n          reply: ({reply}) => (\n            <td>\n              <CBadge color={getBadgeColor(reply)}>{getBadgeText(reply)}</CBadge>\n            </td>\n          ),\n          // 단일 이미지\n          image: ({image}) => (\n            <td>\n              <CImage rounded thumbnail src={image} alt='' />\n            </td>\n          ),\n          // 이미지 리스트\n          images: ({images}) => (\n            <td onClick={event => (images.length !== 0 ? testOnClick(event, images) : onClick)}>\n              <CImage rounded src={images.length === 0 ? '' : images[0]} alt='' width={100} height={60} />\n            </td>\n          ),\n          deleteBtn: item => (\n            <td onClick={event => handleDeleteOnClick(event, item)}>\n              <CBadge color={'danger'}>삭제</CBadge>\n            </td>\n          ),\n          //\n          //category: ({category}) => <td>{selectedOptions ? selectedOptions[category] : ''}</td>,\n          jobType: ({jobType}) => <td>{selectedOptions ? selectedOptions[jobType] : ''}</td>,\n          education: ({education}) => <td>{selectedOptions ? selectedOptions[education] : ''}</td>,\n          inquiryType: ({inquiryType}) => <td>{selectedOptions ? selectedOptions[inquiryType] : ''}</td>,\n          career: ({career}) => <td>{selectedOptions ? selectedOptions[career] : ''}</td>,\n          proceed: ({proceed}) => <td>{proceed ? '채용중' : '채용 마감'}</td>,\n          deliveryStatus: ({deliveryStatus}) => (\n            <td>\n              <CBadge color={'primary'}>{selectedOptions ? selectedOptions[deliveryStatus] : 'Not Data'} </CBadge>\n            </td>\n          ),\n          productImg: ({productImg}) => (\n            <td>\n              <CImage rounded src={productImg || ''} alt='' width={100} height={60} />\n            </td>\n          ),\n          totalPrice: ({totalPrice}) => <td className='totalPrice'>{isPrice(totalPrice)}</td>,\n\n          startedAt: ({startedAt}) => <td>{moment(startedAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          closedAt: ({closedAt}) => <td>{moment(closedAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          createdAt: ({createdAt}) => <td>{moment(createdAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          deletedAt: ({deletedAt}) => <td>{moment(deletedAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          updatedAt: ({updatedAt}) => <td>{moment(updatedAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          noticeFiles: ({noticeFiles}) => <td>{noticeFiles?.length} 개</td>,\n          imageUrls: ({imageUrls}) => (\n            <td\n              onClick={event =>\n                imageUrls.length !== 0 && imageUrls[0] !== '.' ? testOnClick(event, imageUrls[0]) : onClick\n              }\n            >\n              {imageUrls.length === 0 || imageUrls[0] === '.' ? (\n                ''\n              ) : (\n                <CImage\n                  rounded\n                  src={antdImageFormat(imageUrls[0])}\n                  alt={antdImageFormat(imageUrls[0])}\n                  width={100}\n                  height={60}\n                />\n              )}\n            </td>\n          ),\n          // 변수명 겹침\n          // image: ({image}) => (\n          //   <td onClick={event => (image.length !== 0 && image[0] !== '.' ? testOnClick(event, image[0]) : onClick)}>\n          //     {image.length === 0 || image[0] === '.' ? (\n          //       ''\n          //     ) : (\n          //       <CImage\n          //         rounded\n          //         src={antdImageFormat(image[0])}\n          //         alt={antdImageFormat(image[0])}\n          //         width={100}\n          //         height={60}\n          //       />\n          //     )}\n          //   </td>\n          // ),\n        }}\n        noItemsLabel={'데이터가 없습니다.'}\n        //itemsPerPageSelect={itemPerPageHidden}\n        itemsPerPage={20}\n      />\n      {showModal ? (\n        <ThumbnailModal visible={showModal} setVisible={setShowModal} onClick={modalOnClick} url={imgClick} />\n      ) : (\n        ''\n      )}\n    </>\n  )\n}\n\nListTemplate.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n  selectedOptions: PropTypes.object,\n  datePickerHidden: PropTypes.bool,\n  itemPerPageHidden: PropTypes.bool,\n}\n\nexport default ListTemplate\n","import Axios from 'axios'\nimport {isEmpty} from '../utils/utility'\n\nexport const HttpMethod = {\n  GET: 'get',\n  POST: 'post',\n  PUT: 'put',\n  PATCH: 'patch',\n  // DELETE: \"delete\",\n}\n\nexport default class ApiConfig {\n  static request({data, query, path, method, url}) {\n    try {\n      if (isEmpty(method) || isEmpty(url)) {\n        alert('HTTP Method 와 URL 을 확인해주세요.')\n        return\n      }\n\n      // const api = ApiMapper[method][url]\n      // if (isEmpty(api)) {\n      //   alert(`요청하신 API가 존재하지 않습니다.\\n[METHOD: ${method}]\\n[URL:${url}]`)\n      //   return\n      // }\n\n      if (path) {\n        for (const [key, value] of Object.entries(path)) {\n          url = url.replace(`:${key}`, value)\n        }\n      }\n\n      if (!isEmpty(query)) {\n        url +=\n          '?' +\n          Object.keys(query)\n            .map(key => key + '=' + query[key])\n            .join('&')\n      }\n\n      const headers = {\n        accept: 'application/json',\n        'Content-Type': 'application/json',\n        'X-Access-Token': window.sessionStorage.getItem('jwt'),\n      }\n\n      switch (method) {\n        case HttpMethod.GET:\n          return Axios.get(url, {headers: headers})\n        case HttpMethod.POST:\n          return Axios.post(url, data, {headers: headers})\n        case HttpMethod.PATCH:\n          return Axios.patch(url, data, {headers: headers})\n        case HttpMethod.PUT:\n          return Axios.put(url, data, {headers: headers})\n        // case HttpMethod.DELETE:\n        //   return Axios.delete(url, data, {headers: headers})\n        default:\n          break\n      }\n    } catch (error) {\n      alert(error.message)\n    }\n  }\n}\n","const API = process.env.REACT_APP_API\n\nexport const EndPoint = {\n  // ------ 오케이포스 홈페이지\n  GET_V1_TEST_AUTO_LOGIN: `${API}/test/v1/jwt/check/:isManual`,\n  POST_LOGIN: `${API}/admin/login`,\n  POST_TEST_V1_REGISTER: `${API}/test/v1/register`,\n  RECRUITMENT: `${API}/admin/recruitment`,\n  TALENTPOOL: `${API}/admin/talent-pool`,\n  EDITOR: `${API}/admin/editor`,\n  HOME_INQUIRY: `${API}/admin/inquiry`,\n  ENGLISH_HOME_INQUIRY: `${API}/admin/english/inquiry`,\n  NOTICE: `${API}/admin/notice`,\n  DATA_ROOM: `${API}/admin/english/data-room`,\n  HOME_BANNER: `${API}/admin/banner`,\n  ENGLISH_BANNER: `${API}/admin/english/banner`,\n\n  // ------ 파트너 센터 페이지\n  GET_PARTNER_USERS: `${API}/admin/partner/users`, // 유저 리스트\n  GET_PARTNER_INACTIVE_USERS: `${API}/admin/partner/users/inactive`, // 탈퇴 유저 리스트\n  GET_PARTNER_INQUIRIES: `${API}/admin/partner/inquiries`, // 1:1 문의 리스트\n  GET_PARTNER_NOTICES: `${API}/admin/partner/notices`, // 공지사항 리스트\n  GET_PARTNER_AGENCYAPPLICANT: `${API}/admin/partner/notices/agencyApplicant`, // 영업점 딜러 지원 리스트\n  GET_PARTNER_DATAROOMS: `${API}/admin/partner/dataRooms`, // 자료실 리스트\n  GET_PARTNER_ORDERS: `${API}/admin/partner/orders`, // 발주신청 리스트\n  GET_PARTNER_MAINTENANCES: `${API}/admin/partner/maintenances`, // 유지보수 신청 리스트\n  GET_PARTNER_SCHEDULES: `${API}/admin/partner/educations/schedules`, // 교육일정 리스트\n\n  // ------ 가맹점 전용 공식몰 페이지\n  GET_MALL_USERS: `${API}/admin/mall/users`,\n  GET_MALL_USER: `${API}/admin/mall/users/:userId`,\n  GET_MALL_RESIGNUSERS: `${API}/admin/mall/users/resign`,\n  GET_MALL_RESIGNUSER: `${API}/admin/mall/users/resign/:userId`,\n\n  GET_MALL_INQUIRIES: `${API}/admin/mall/inquiries`,\n  GET_MALL_INQUIRY: `${API}/admin/mall/inquiries/:inquiryId`,\n  POST_MALL_INQUIRY_REPLY: `${API}/admin/mall/inquiryReplies`,\n  PATCH_MALL_UPDATE_INQUIRY_REPLY: `${API}/admin/mall/inquiryReplies`,\n  PATCH_MALL_DELETE_INQUIRY: `${API}/admin/mall/inquiries/:inquiryId`,\n\n  GET_MALL_FAQS: `${API}/admin/mall/faqs`,\n  GET_MALL_FAQ: `${API}/admin/mall/faqs/:faqId`,\n  POST_MALL_FAQ: `${API}/admin/mall/faqs`,\n  PATCH_MALL_UPDATE_FAQ: `${API}/admin/mall/faqs`,\n  PATCH_MALL_DELETE_FAQ: `${API}/admin/mall/faqs/:faqId`,\n\n  GET_MALL_DATAROOMS: `${API}/admin/mall/datarooms`,\n  GET_MALL_DATAROOM: `${API}/admin/mall/datarooms/:dataRoomId`,\n  POST_MALL_DATAROOM: `${API}/admin/mall/datarooms`,\n  PATCH_MALL_UPDATE_DATAROOM: `${API}/admin/mall/datarooms`,\n  PATCH_MALL_DELETE_DATAROOM: `${API}/admin/mall/datarooms/:dataRoomId`,\n\n  GET_MALL_BANNERS: `${API}/admin/mall/banners`,\n  GET_MALL_BANNER: `${API}/admin/mall/banners/:bannerId`,\n  POST_MALL_BANNER: `${API}/admin/mall/banners`,\n  PATCH_MALL_UPDATE_BANNER: `${API}/admin/mall/banners`,\n  PATCH_MALL_DELETE_BANNER: `${API}/admin/mall/banners/:bannerId`,\n\n  GET_MALL_ORDERS: `${API}/admin/mall/orders`,\n  GET_MALL_CANCEL_ORDERS: `${API}/admin/mall/orders/cancel`,\n  GET_MALL_EXCHANGE_ORDERS: `${API}/admin/mall/orders/exchange`,\n\n  // ------ 대리점 전용 파트너 센터\n  POST_REGISTER: `${API}/admin/join`,\n}\n\nconst ApiMapper = {\n  get: {\n    [EndPoint.GET_V1_TEST_AUTO_LOGIN]: {},\n\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.GET_MALL_USERS]: {},\n    [EndPoint.GET_MALL_USER]: {},\n    [EndPoint.GET_MALL_RESIGNUSERS]: {},\n    [EndPoint.GET_MALL_RESIGNUSER]: {},\n    [EndPoint.GET_MALL_INQUIRIES]: {},\n    [EndPoint.GET_MALL_INQUIRY]: {},\n    [EndPoint.GET_MALL_FAQS]: {},\n    [EndPoint.GET_MALL_FAQ]: {},\n    [EndPoint.GET_MALL_DATAROOMS]: {},\n    [EndPoint.GET_MALL_DATAROOM]: {},\n    [EndPoint.GET_MALL_BANNERS]: {},\n    [EndPoint.GET_MALL_BANNER]: {},\n    [EndPoint.GET_MALL_ORDERS]: {},\n    [EndPoint.GET_MALL_CANCEL_ORDERS]: {},\n    [EndPoint.GET_MALL_EXCHANGE_ORDERS]: {},\n\n    // ------ 파트너센터 페이지\n    [EndPoint.GET_PARTNER_USERS]: {},\n    [EndPoint.GET_PARTNER_INACTIVE_USERS]: {},\n    [EndPoint.GET_PARTNER_INQUIRIES]: {},\n    [EndPoint.GET_PARTNER_NOTICES]: {},\n    [EndPoint.GET_PARTNER_AGENCYAPPLICANT]: {},\n    [EndPoint.GET_PARTNER_ORDERS]: {},\n    [EndPoint.GET_PARTNER_MAINTENANCES]: {},\n    [EndPoint.GET_PARTNER_SCHEDULES]: {},\n  },\n  post: {\n    [EndPoint.POST_LOGIN]: {},\n    [EndPoint.POST_REGISTER]: {},\n\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.POST_MALL_INQUIRY_REPLY]: {},\n    [EndPoint.POST_MALL_FAQ]: {},\n    [EndPoint.POST_MALL_DATAROOM]: {},\n    [EndPoint.POST_MALL_BANNER]: {},\n  },\n  patch: {\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.PATCH_MALL_UPDATE_INQUIRY_REPLY]: {},\n    [EndPoint.PATCH_MALL_DELETE_INQUIRY]: {},\n    [EndPoint.PATCH_MALL_UPDATE_FAQ]: {},\n    [EndPoint.PATCH_MALL_DELETE_FAQ]: {},\n    [EndPoint.PATCH_MALL_UPDATE_DATAROOM]: {},\n    [EndPoint.PATCH_MALL_DELETE_DATAROOM]: {},\n    [EndPoint.PATCH_MALL_UPDATE_BANNER]: {},\n    [EndPoint.PATCH_MALL_DELETE_BANNER]: {},\n  },\n  put: {},\n  delete: {},\n}\n\nexport default ApiMapper\n","export const qnaColumns = [\n  {\n    key: 'no',\n    label: 'No',\n    _props: {color: 'primary', className: 'no'},\n  },\n  {\n    key: 'name',\n    label: '이름',\n    _props: {color: 'primary', className: 'name'},\n  },\n  {\n    key: 'email',\n    label: '이메일',\n    _props: {color: 'primary', className: 'email'},\n  },\n  {\n    key: 'number',\n    label: '전화번호',\n    _props: {color: 'primary', className: 'number'},\n  },\n  {\n    key: 'categoryKorean',\n    label: '문의 유형',\n    _props: {color: 'primary', className: 'categoryKorean'},\n  },\n]\n","import {useState} from 'react'\nimport {\n  CFormLabel,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n  CModalFooter,\n  CButton,\n  CFormTextarea,\n} from '@coreui/react'\nimport ModalInput from '../../../forms/inputForm/ModalInput'\nimport CloseCheckModal from '../../CloseCheckModal'\nimport DeleteModalTemplate from '../../DeleteModalTemplate'\nimport PropTypes from 'prop-types'\nimport MultiFileDownloadForm from '../../../forms/downloadForm/MultiFileDownloadForm'\nimport ApiConfig, {HttpMethod} from '../../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../../dataManager/apiMapper'\nimport {useDispatch} from 'react-redux'\nconst inquiries = [\n  {key: 'PRODUCTS', value: '상품'},\n  {key: 'ADDITIONAL_SERVICES', value: '부가 서비스'},\n  {key: 'RECRUITMENT', value: '채용'},\n  {key: 'PARTNERSHIPS', value: '제휴'},\n  {key: 'ETC', value: '기타'},\n]\n\nconst QnADetail = ({getList, value, visible, setVisible, onChange, isReadOnly, setIsReadOnly}) => {\n  const [showDeleteModal, setshowDeleteModal] = useState(false)\n  const [closeCheckModalState, setCloseCheckModalState] = useState(false)\n  const dispatch = useDispatch()\n  const onDelete = async () => {\n    try {\n      const {data} = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {\n          id: value.inquiryId,\n        },\n        method: HttpMethod.PATCH,\n        url: `${EndPoint.HOME_INQUIRY}/:id/d`,\n      })\n      if (data.isSuccess) {\n        getList()\n        setshowDeleteModal(false)\n        setCloseCheckModalState(false)\n        setIsReadOnly(true)\n        setVisible(false)\n        dispatch({\n          type: 'SET_TOAST_STATE',\n          visibleState: true,\n          toastColor: 'success',\n          textColor: 'white',\n          text: `${data.result}`,\n        })\n      }\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  const onCloseCheck = () => {\n    if (!isReadOnly && value.No !== -1) {\n      setCloseCheckModalState(true)\n    } else {\n      setVisible(false)\n      setIsReadOnly(true)\n    }\n  }\n\n  const onClose = () => {\n    setCloseCheckModalState(false)\n    setVisible(false)\n    setIsReadOnly(true)\n  }\n  return (\n    <>\n      <CModal alignment='center' size='lg' visible={visible}>\n        <CModalHeader>\n          <CModalTitle>1:1 문의 상세</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CRow className='mb-3'>\n            <ModalInput\n              onChange={onChange}\n              id='inquiryId'\n              placeholder='No.'\n              label='ID'\n              readOnly={true}\n              disabled={true}\n              value={value.inquiryId === -1 ? '' : value.inquiryId}\n            />\n            <ModalInput\n              onChange={onChange}\n              id='name'\n              placeholder='이름을 입력해주세요'\n              label='이름'\n              value={value.name}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n\n          <CRow className='mb-3'>\n            <ModalInput\n              onChange={onChange}\n              id='email'\n              placeholder='email'\n              label='이메일'\n              value={value.email}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n            <ModalInput\n              onChange={onChange}\n              id='number'\n              placeholder='phone number'\n              label='전화번호'\n              value={value.number}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <CRow>\n            <CFormLabel>문의 내용</CFormLabel>\n            <CFormTextarea\n              placeholder='문의 내용'\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n              onChange={onChange}\n              value={value.content}\n              rows={15}\n              id='content'\n            />\n          </CRow>\n          <CRow>\n            <MultiFileDownloadForm files={value.fileUrl} id='fileUrl' label='첨부파일' />\n          </CRow>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color='danger' onClick={() => setshowDeleteModal(true)}>\n            삭제\n          </CButton>\n\n          <CButton color='primary' onClick={onCloseCheck}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <DeleteModalTemplate onDelete={onDelete} visible={showDeleteModal} setVisible={setshowDeleteModal} />\n      <CloseCheckModal onClick={onClose} visible={closeCheckModalState} setVisible={setCloseCheckModalState} />\n    </>\n  )\n}\nQnADetail.propTypes = {\n  value: PropTypes.any,\n  visible: PropTypes.bool,\n  setVisible: PropTypes.func,\n  onChange: PropTypes.func,\n  isReadOnly: PropTypes.bool,\n  setIsReadOnly: PropTypes.func,\n}\n\nexport default QnADetail\n","import {useState, useEffect} from 'react'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport {qnaColumns} from '../../../utils/columns/homePage/qna/Columns'\nimport {inquirys} from '../../../utils/columns/homePage/qna/ColumnsSelectedValue'\nimport QnADetail from '../../../components/Modal/homePage/QnA/QnADetail'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nconst QnAList = () => {\n  const [items, setItems] = useState([])\n  const [showModal, setShowModal] = useState(false)\n  const [isReadOnly, setIsReadOnly] = useState(true)\n  const [selectedItem, setSelectedItem] = useState({\n    inquiryId: -1,\n    content: '',\n    name: '',\n    email: '',\n    pNum: '',\n    inquiryType: '',\n    fileUrl: [],\n  })\n\n  const onLoadInquiryList = async () => {\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {},\n        method: HttpMethod.GET,\n        url: EndPoint.HOME_INQUIRY,\n      })\n      setItems(data?.data.result.responses)\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  const onLoadDetail = async id => {\n    try {\n      const {data} = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {\n          id: id,\n        },\n        method: HttpMethod.GET,\n        url: `${EndPoint.HOME_INQUIRY}/:id`,\n      })\n\n      setSelectedItem(data.result)\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  useEffect(() => {\n    onLoadInquiryList()\n  }, [])\n\n  const handleShowInquiryDetailModal = async item => {\n    onLoadDetail(item.inquiryId)\n    setShowModal(!showModal)\n  }\n\n  const handleInquiryDetailOnChange = ({target}) => {\n    const {id, value} = target\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n  return (\n    <main>\n      <PageHeader title='1:1 문의' />\n      <CRow>\n        <CCol xs={12}>\n          <CCard className='mb-4'>\n            <CCardHeader>\n              <CForm className='row g-3'>\n                <CCol xs={1}>\n                  <CButton color='primary' onClick={onLoadInquiryList}>\n                    조회하기\n                  </CButton>\n                </CCol>\n              </CForm>\n            </CCardHeader>\n            <CCardBody>\n              <ListTemplate\n                items={items}\n                onClick={handleShowInquiryDetailModal}\n                selectedOptions={inquirys}\n                columns={qnaColumns}\n                className='inquiryList'\n                datePickerHidden={false}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <QnADetail\n        onChange={handleInquiryDetailOnChange}\n        visible={showModal}\n        value={selectedItem}\n        setVisible={setShowModal}\n        isReadOnly={isReadOnly}\n        setIsReadOnly={setIsReadOnly}\n        getList={onLoadInquiryList}\n      />\n    </main>\n  )\n}\n\nexport default QnAList\n","//url 리스트를 보낼 때 커스텀 해주는 함수\nexport const sendImageUrlFormat = array => {\n  return array.map(item => {\n    return item.url.split('.com/')[1]\n  })\n}\n\nexport const returnBucketName = imgPath => {\n  return `${process.env.REACT_APP_AWS_BUCKET_NAME}/admin/images/${imgPath}`\n}\n\nexport const antdImageFormat = path => {\n  return `https://${process.env.REACT_APP_AWS_BUCKET_NAME}.s3.${process.env.REACT_APP_AWS_REGION}.amazonaws.com/${path}`\n}\n\nexport const returnBucketNameFile = imgPath => {\n  return `${process.env.REACT_APP_AWS_BUCKET_NAME}/admin/files/${imgPath}`\n}\n","exports.inquirys = {\n  a: '제품',\n  b: '부가 서비스',\n  c: '채용 ',\n  d: '제휴',\n  e: '기타',\n}\n"],"names":["onClick","visible","setVisible","alignment","color","title","children","onDelete","Header","styled","id","files","placeholder","label","isRequired","htmlFor","className","length","map","file","index","splitUrl","split","fileName","SpanStyle","role","href","antdImageFormat","url","fetch","method","then","res","blob","window","URL","createObjectURL","a","document","createElement","download","body","appendChild","click","setTimeout","_","revokeObjectURL","remove","catch","err","console","error","downloadFile","type","onChange","value","readOnly","disabled","xs","style","display","undefined","useState","size","onClose","align","fluid","src","alt","width","setStartDate","setEndDate","RangePicker","DatePicker","moment","PickerCCol","locale","direction","allowClear","date","_d","format","CCol","items","columns","selectedOptions","datePickerHidden","itemPerPageHidden","searchInputHidden","checkBoxInputHidden","func","listItems","setListItems","filterItems","setFilterItems","showModal","setShowModal","imgClick","setImgClick","startDate","endDate","searchOption","setSearchOption","allSelected","setAllSelected","allCheckBox","key","event","checked","_props","sorter","filter","getBadgeColor","status","getBadgeText","testOnClick","stopPropagation","useEffect","createdAt","variant","handleSearchItemOnClick","log","CSmartTable","activePage","columnSorter","pagination","clickableRows","tableHeadProps","onRowClick","tableProps","hover","responsive","striped","scopedColumns","checkBox","item","_id","handleItemOnSelected","isAuthorized","reply","image","rounded","thumbnail","images","height","deleteBtn","handleDeleteOnClick","jobType","education","inquiryType","career","proceed","deliveryStatus","productImg","totalPrice","isPrice","startedAt","closedAt","deletedAt","updatedAt","noticeFiles","imageUrls","noItemsLabel","itemsPerPage","HttpMethod","GET","POST","PUT","PATCH","ApiConfig","data","query","path","isEmpty","alert","Object","entries","replace","keys","join","headers","accept","sessionStorage","getItem","Axios","message","API","process","EndPoint","GET_V1_TEST_AUTO_LOGIN","POST_LOGIN","POST_TEST_V1_REGISTER","RECRUITMENT","TALENTPOOL","EDITOR","HOME_INQUIRY","ENGLISH_HOME_INQUIRY","NOTICE","DATA_ROOM","HOME_BANNER","ENGLISH_BANNER","GET_PARTNER_USERS","GET_PARTNER_INACTIVE_USERS","GET_PARTNER_INQUIRIES","GET_PARTNER_NOTICES","GET_PARTNER_AGENCYAPPLICANT","GET_PARTNER_DATAROOMS","GET_PARTNER_ORDERS","GET_PARTNER_MAINTENANCES","GET_PARTNER_SCHEDULES","GET_MALL_USERS","GET_MALL_USER","GET_MALL_RESIGNUSERS","GET_MALL_RESIGNUSER","GET_MALL_INQUIRIES","GET_MALL_INQUIRY","POST_MALL_INQUIRY_REPLY","PATCH_MALL_UPDATE_INQUIRY_REPLY","PATCH_MALL_DELETE_INQUIRY","GET_MALL_FAQS","GET_MALL_FAQ","POST_MALL_FAQ","PATCH_MALL_UPDATE_FAQ","PATCH_MALL_DELETE_FAQ","GET_MALL_DATAROOMS","GET_MALL_DATAROOM","POST_MALL_DATAROOM","PATCH_MALL_UPDATE_DATAROOM","PATCH_MALL_DELETE_DATAROOM","GET_MALL_BANNERS","GET_MALL_BANNER","POST_MALL_BANNER","PATCH_MALL_UPDATE_BANNER","PATCH_MALL_DELETE_BANNER","GET_MALL_ORDERS","GET_MALL_CANCEL_ORDERS","GET_MALL_EXCHANGE_ORDERS","POST_REGISTER","qnaColumns","getList","isReadOnly","setIsReadOnly","showDeleteModal","setshowDeleteModal","closeCheckModalState","setCloseCheckModalState","dispatch","useDispatch","inquiryId","isSuccess","visibleState","toastColor","textColor","text","result","ModalInput","name","email","number","content","rows","MultiFileDownloadForm","fileUrl","No","DeleteModalTemplate","CloseCheckModal","setItems","pNum","selectedItem","setSelectedItem","onLoadInquiryList","responses","onLoadDetail","handleShowInquiryDetailModal","PageHeader","ListTemplate","inquirys","target","sendImageUrlFormat","array","returnBucketName","imgPath","returnBucketNameFile","exports","b","c","d","e"],"sourceRoot":""}