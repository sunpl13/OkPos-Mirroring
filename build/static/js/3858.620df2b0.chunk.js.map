{"version":3,"file":"static/js/3858.620df2b0.chunk.js","mappings":"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","sources":["components/chart/BarChartTemplate.js","components/chart/DoughnutChartTemplate.js","components/Modal/officialMall/ResignUserModal.js","pages/officialMall/users/ResignUserList.js"],"sourcesContent":["import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\nimport PropTypes, {object} from 'prop-types'\n\nconst BarChartTemplate = ({title, labels, data}) => {\n  const dataSet = {\n    labels: [' '],\n    datasets: [\n      {\n        label: '서비스 이용 불편',\n        data: [data[0]],\n        backgroundColor: 'rgb(255, 99, 132)',\n      },\n      {\n        label: '가격 불만족',\n        data: [data[1]],\n        backgroundColor: 'rgb(54, 162, 235)',\n      },\n      {\n        label: '제품 기능 불만족',\n        data: [data[2]],\n        backgroundColor: 'rgb(255, 205, 86)',\n      },\n      {\n        label: '기타(직접 입력)',\n        backgroundColor: 'rgba(255, 159, 64)',\n        data: [data[3]],\n      },\n    ],\n  }\n\n  const options = {\n    plugins: {\n      //responsive: true,\n      hoverBorderWidth: 2,\n      legend: {\n        display: true,\n        position: 'right',\n        align: 'start',\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  }\n  return (\n    // <CChart\n    //   type='doughnut'\n    //   customTooltips={false}\n    //   labels={labels}\n    //   data={data}\n    //   options={{\n    //     responsive: true,\n    //     hoverBorderWidth: 2,\n    //     plugins: {\n    //       title: {\n    //         display: true,\n    //         text: title || '',\n    //         font: {\n    //           size: 24,\n    //         },\n    //       },\n    //     },\n    //     borderRadius: 10,\n    //     inflateAmount: 1,\n    //   }}\n    // />\n    <CChart type='bar' data={dataSet} customTooltips={false} options={options} />\n  )\n}\n\nexport default React.memo(BarChartTemplate)\n","import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\n\nconst DoughnutChartTemplate = ({title, labels, data}) => {\n  const dataSet = {\n    labels: labels,\n    datasets: [\n      {\n        label: title,\n        data: data,\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)', 'rgba(255, 159, 64)'],\n        hoverOffset: 4,\n      },\n    ],\n  }\n\n  const options = {\n    plugins: {\n      responsive: true,\n      hoverBorderWidth: 2,\n      legend: {\n        display: true,\n        position: 'right',\n        align: 'start',\n      },\n    },\n  }\n  return (\n    // <CChart\n    //   type='doughnut'\n    //   customTooltips={false}\n    //   labels={labels}\n    //   data={data}\n    //   options={{\n    //     responsive: true,\n    //     hoverBorderWidth: 2,\n    //     plugins: {\n    //       title: {\n    //         display: true,\n    //         text: title || '',\n    //         font: {\n    //           size: 24,\n    //         },\n    //       },\n    //     },\n    //     borderRadius: 10,\n    //     inflateAmount: 1,\n    //   }}\n    // />\n    <CChart type='doughnut' data={dataSet} customTooltips={false} options={options} />\n  )\n}\nexport default React.memo(DoughnutChartTemplate)\n","import {CButton, CFormTextarea, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow} from '@coreui/react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport {useEffect, useState} from 'react'\nimport ModalStatus from '../../forms/ModalStatus'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport BasicFileDownloadForm from '../../forms/downloadForm/BasicFileDownloadForm'\n\nconst UserDetailModal = ({value, visible, setVisible}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [resignUser, setResignUser] = useState({\n    userId: 2,\n    name: '',\n    email: '',\n    createdAt: '',\n    updatedAt: '',\n    status: '',\n    phoneNumber: '',\n    resignReason: '',\n    businessName: '',\n    businessRegistration: '',\n    businessNumber: '',\n    businessAddress: '',\n  })\n\n  // API 통신 함수\n  const onloadMallResignUser = async value => {\n    const {userId} = value\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {userId},\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_RESIGNUSER,\n      })\n      if (!data?.data?.isSuccess || isEmpty(data?.data?.result)) {\n        console.log('onloadMallResignUser error')\n        if (data?.data?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(data?.data?.message)\n        }\n        return\n      }\n      setResignUser(data.data.result)\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    if (visible) {\n      onloadMallResignUser(value)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible])\n\n  const closeModal = () => {\n    setVisible(false)\n  }\n  return (\n    <CModal size='lg' visible={visible} onClose={closeModal}>\n      <CModalHeader>\n        <CModalTitle>탈퇴회원 상세정보</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput id={'id'} placeholder={'User Id'} label={'No'} value={value.no} readOnly disabled />\n          <ModalInput id={'userName'} placeholder={'이름'} label={'이름'} value={resignUser.name} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput id={'email'} placeholder={'이메일'} label={'이메일'} value={resignUser.email} readOnly disabled />\n          <ModalInput\n            id={'createdAt'}\n            placeholder={'최초등록일'}\n            label={'최초등록일'}\n            value={resignUser.createdAt}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'phoneNumber'}\n            placeholder={'휴대전화번호'}\n            label={'휴대전화번호'}\n            value={resignUser.phoneNumber}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'businessName'}\n            placeholder={'상호명'}\n            label={'상호명'}\n            value={resignUser.businessName}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'updatedAt'}\n            placeholder={'계정탈퇴일'}\n            label={'계정탈퇴일'}\n            value={resignUser.updatedAt}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'businessNumber'}\n            placeholder={'사업자등록번호'}\n            label={'사업자등록번호'}\n            value={resignUser.businessNumber}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessAddress'}\n            placeholder={'사업장주소'}\n            label={'사업장주소'}\n            value={resignUser.businessAddress}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <BasicFileDownloadForm\n            id={'businessRegistration'}\n            placeholder={'사업자등록증'}\n            label={'사업자등록증'}\n            value={resignUser.businessRegistration}\n          />\n        </CRow>\n\n        <CRow className={'p-2'}>\n          {resignUser?.resignReason.length < 20 ? (\n            <ModalInput\n              id={'resignReason'}\n              placeholder={'탈퇴사유'}\n              label={'탈퇴사유'}\n              value={resignUser.resignReason}\n              readOnly\n              disabled\n            />\n          ) : (\n            <CFormTextarea\n              id={'resignReason'}\n              placeholder={'탈퇴사유'}\n              label={'탈퇴사유'}\n              value={resignUser.resignReason}\n              rows='4'\n              readOnly\n              disabled\n            />\n          )}\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalStatus id={'userStatus'} placeholder={'상태'} label={'상태'} value={resignUser.status} />\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={closeModal}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport ResignUserModal from '../../../components/Modal/officialMall/ResignUserModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {resignUserListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport DoughnutChartTemplate from '../../../components/chart/DoughnutChartTemplate'\nimport BarChartTemplate from '../../../components/chart/BarChartTemplate'\n\nconst ResignUserList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [resignUserList, setResignUserList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n\n  const [showModal, setShowModal] = useState(false)\n  const [chartLabels, setChartLabels] = useState([\n    '서비스 이용 불편',\n    '가격 불만족',\n    '제품 기능 불만족',\n    '기타(직접 입력)',\n  ])\n  const [chartData, setChartData] = useState([])\n\n  // const chartList = {\n  //   countResignReasonByService: {\n  //     value: '서비스 이용 불편',\n  //     backgroundColor: 'rgba(255, 99, 132, 0.2)',\n  //     borderColor: 'rgb(255, 159, 64)',\n  //   },\n  //   countResignReasonByPrice: {\n  //     value: '가격 불만족',\n  //     backgroundColor: 'rgba(255, 159, 64, 0.2)',\n  //     borderColor: 'rgb(201, 203, 207)',\n  //   },\n  //   countResignReasonByItem: {\n  //     value: '제품 기능에 불만족',\n  //     backgroundColor: 'rgba(201, 203, 207, 0.2)',\n  //     borderColor: 'rgb(255, 205, 86)',\n  //   },\n  //   countResignReasonBySelf: {\n  //     value: '직접 입력',\n  //     backgroundColor: 'rgba(255, 205, 86, 0.2)',\n  //     borderColor: 'rgb(75, 192, 192)',\n  //   },\n  // }\n\n  const resignUserOptions = [\n    {\n      key: 'createdAt',\n      value: '최초등록일',\n    },\n    {key: 'updatedAt', value: '계정탈퇴일'},\n  ]\n\n  // API 통신 함수\n  const onLoadMallReginUserList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_RESIGNUSERS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('onLoadMallReginUserList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setResignUserList(\n        res.result.resignUserInfos.map((item, index) => {\n          return {...item, no: res.result.resignUserInfos.length - index}\n        }),\n      )\n      setChartData([\n        res.result.countResignReasonByService,\n        res.result.countResignReasonByPrice,\n        res.result.countResignReasonByItem,\n        res.result.countResignReasonBySelf || 0,\n      ])\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallReginUserList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowUserDetailModal = item => {\n    setSelectedItem(item)\n    setShowModal(!showModal)\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='탈퇴 회원 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <CRow>\n              <CCol xs={4}>\n                <CCardBody>\n                  <DoughnutChartTemplate title={'탈퇴 사유'} labels={chartLabels} data={chartData} />\n                </CCardBody>\n              </CCol>\n              <CCol xs={8}>\n                <CCardBody>\n                  <BarChartTemplate title={'탈퇴 사유'} labels={chartLabels} data={chartData} />\n                </CCardBody>\n              </CCol>\n            </CRow>\n            <div>서비스 이용 불편 : {chartData[0]}</div>\n            <div> 가격 불만족 : {chartData[1]}</div>\n            <div> 제품 기능 불만족 : {chartData[2]}</div>\n            <div>기타(직접 입력) : {chartData[3]}</div>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={resignUserList}\n              onClick={handleShowUserDetailModal}\n              columns={resignUserListColumns}\n              className={'userList'}\n              datePickerOptions={resignUserOptions}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <ResignUserModal value={selectedItem} visible={showModal} setVisible={setShowModal} readOnly />\n    </CRow>\n  )\n}\nexport default ResignUserList\n"],"names":["BarChartTemplate","_ref","title","labels","data","dataSet","datasets","label","backgroundColor","_jsx","CChart","type","customTooltips","options","plugins","hoverBorderWidth","legend","display","position","align","scales","y","beginAtZero","React","DoughnutChartTemplate","hoverOffset","responsive","value","visible","setVisible","navigate","useNavigate","_useState","useState","userId","name","email","createdAt","updatedAt","status","phoneNumber","resignReason","businessName","businessRegistration","businessNumber","businessAddress","_useState2","_slicedToArray","resignUser","setResignUser","onloadMallResignUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_data$data2","_data$data3","_data$data4","wrap","_context","prev","next","ApiConfig","request","query","path","method","HttpMethod","GET","url","EndPoint","GET_MALL_RESIGNUSER","sent","isSuccess","isEmpty","result","console","log","code","alert","message","abrupt","t0","stop","_x","apply","arguments","useEffect","closeModal","_jsxs","CModal","size","onClose","children","CModalHeader","CModalTitle","CModalBody","CRow","className","ModalInput","id","placeholder","no","readOnly","disabled","BasicFileDownloadForm","length","CFormTextarea","rows","ModalStatus","CModalFooter","CButton","color","onClick","resignUserList","setResignUserList","_useState3","_useState4","selectedItem","setSelectedItem","_useState5","_useState6","showModal","setShowModal","_useState7","_useState8","chartLabels","_useState9","_useState10","chartData","setChartData","onLoadMallReginUserList","_yield$ApiConfig$requ","res","GET_MALL_RESIGNUSERS","resignUserInfos","map","item","index","_objectSpread","countResignReasonByService","countResignReasonByPrice","countResignReasonByItem","countResignReasonBySelf","PageHeader","CCol","xs","CCard","CCardBody","ListTemplate","items","columns","resignUserListColumns","datePickerOptions","key","ResignUserModal"],"sourceRoot":""}