{"version":3,"file":"static/js/3715.26277534.chunk.js","mappings":"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","sources":["components/Modal/officialMall/ExchangeModal.js","pages/officialMall/order/ExchangeList.js"],"sourcesContent":["import {\n  CButton,\n  CFormSelect,\n  CFormTextarea,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport {useEffect, useState} from 'react'\nimport {isPrice} from '../../../utils/utility'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\n\nconst ExchangeModal = ({value, visible, setVisible, exchangeList, setExchangeList, onLoadMallexchangeList}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [order, setOrder] = useState({\n    orderId: 0,\n    orderNumber: '',\n    name: '',\n    paymentMethod: '',\n    totalPrice: 0,\n    exchangePrice: 0,\n    orderDate: '',\n    payDate: '',\n    exchangeDate: '',\n    receiver: '',\n    address: '',\n    normalNumber: '',\n    phoneNumber: '',\n    totalCount: '',\n  })\n\n  const [orderStatus, setOrderStatus] = useState('')\n\n  // Life Cycle 선언\n  useEffect(() => {\n    if (visible) {\n      setOrder(value)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible])\n\n  const closeModal = () => {\n    setOrderStatus('')\n    setVisible(false)\n  }\n\n  // 함수 선언\n  // Update OrderStatus\n  const onUpdateOrderStatus = async (orderExchangeId, orderStatus) => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_EXCHANGE_ORDERS_STATUS,\n        path: {\n          orderExchangeId: orderExchangeId,\n        },\n        query: {\n          orderStatus: orderStatus,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n\n      setOrder(order => ({...order, orderStatus: orderStatus}))\n\n      const findIndex = exchangeList.findIndex(product => product.orderExchangeId === orderExchangeId)\n      exchangeList[findIndex].orderStatus = orderStatus\n      setExchangeList(exchangeList => [...exchangeList])\n      await onLoadMallexchangeList()\n\n      alert(res?.message)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 주문 상태 값 저장\n  const orderStatusChange = e => {\n    const {value} = e.target\n    setOrderStatus(value)\n  }\n\n  // 주문상태 변경 함수\n  const handleOrderStatus = () => {\n    if (!orderStatus) return alert('주문상태를 선택해주세요.')\n    onUpdateOrderStatus(order.orderExchangeId, orderStatus)\n    setOrderStatus('')\n  }\n\n  // 송장조회\n  const handleInvoicCheck = () => {\n    if (order?.invoiceNumber) {\n      const {invoiceNumber} = order\n      window.open('https://www.ilogen.com/web/personal/trace/' + invoiceNumber)\n    } else {\n      window.open('https://www.ilogen.com/web/personal/tkSearch')\n    }\n  }\n\n  return (\n    <CModal size='lg' visible={visible} onClose={closeModal}>\n      <CModalHeader>\n        <CModalTitle>교환 상세정보</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'orderExchangeId'}\n            placeholder={'orderExchangeId'}\n            label={'No'}\n            value={order.no}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'orderNumber'}\n            placeholder={''}\n            label={'주문번호'}\n            value={order.orderNumber}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'itemName'}\n            placeholder={'제품명'}\n            label={'제품명'}\n            value={order.itemName}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput id={'sender'} placeholder={''} label={'보내는이'} value={order.sender} readOnly disabled />\n          <ModalInput id={'receiver'} placeholder={''} label={'수취인'} value={order.receiver} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'orderItemCount'}\n            placeholder={''}\n            label={'주문제품수량'}\n            value={order.orderItemCount}\n            readOnly\n            disabled\n          />\n          <ModalInput id={'orderDate'} placeholder={''} label={'주문일'} value={order.orderDate} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'paymentMethod'}\n            placeholder={''}\n            label={'결제수단'}\n            value={order.paymentMethod}\n            readOnly\n            disabled\n          />\n          <ModalInput id={'payDate'} placeholder={''} label={'결제일'} value={order.payDate} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'orderStatus'}\n            placeholder={''}\n            label={'주문상태'}\n            value={order.orderStatus}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'exchangeDate'}\n            placeholder={''}\n            label={'교환 요청일'}\n            value={order.exchangeDate}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'exchangePrice'}\n            placeholder={''}\n            label={'교환금액'}\n            value={isPrice(order.exchangePrice)}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'totalPrice'}\n            placeholder={''}\n            label={'총 결제금액'}\n            value={isPrice(order.totalPrice)}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'invoiceNumber'}\n            placeholder={'송장번호'}\n            label={'송장번호'}\n            value={order.invoiceNumber}\n            readOnly\n            disabled\n          />\n          <CButton className='me-md-3 invoiceSearchBtn' color='warning' size='sm' onClick={handleInvoicCheck}>\n            송장조회\n          </CButton>\n        </CRow>\n        <CRow className={'p-2'}>\n          <CFormTextarea\n            id='exchangeReason'\n            placeholder={'교환사유'}\n            label='교환사유'\n            rows='3'\n            value={order.exchangeReason}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <div className={'pb-2 d-md-flex justify-content-md-end'}>\n          <CFormSelect value={orderStatus} className='me-md-2 orderStatusForm' size='sm' onChange={orderStatusChange}>\n            <option>주문상태 선택</option>\n            <option value='결제 대기'>결제 대기</option>\n            <option value='결제 완료'>결제 완료</option>\n            <option value='배송 준비중'>배송 준비중</option>\n            <option value='배송중'>배송중</option>\n            <option value='배송 완료'>배송 완료</option>\n            <option value='교환 처리중'>교환 처리중</option>\n            <option value='교환 완료'>교환 완료</option>\n          </CFormSelect>\n          <CButton className='me-md-2' color='success' size='sm' onClick={handleOrderStatus}>\n            주문상태 변경\n          </CButton>\n        </div>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={closeModal}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ExchangeModal\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {exchangeListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport OrderTableList from '../../../components/list/mall/OrderTableList'\nimport ExchangeModal from '../../../components/Modal/officialMall/ExchangeModal'\n\nconst ExchangeList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [exchangeList, setExchangeList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n\n  // API 통신 함수\n  const onLoadMallexchangeList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_EXCHANGE_ORDERS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('loadMallExchangeList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setExchangeList(\n        res.result.responses.map((item, index) => {\n          return {...item, no: res.result.responses.length - index}\n        }),\n      )\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallexchangeList()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowUserDetailModal = item => {\n    setSelectedItem(item)\n    setShowModal(!showModal)\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='교환 요청 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <OrderTableList\n              items={exchangeList}\n              onClick={handleShowUserDetailModal}\n              columns={exchangeListColumns}\n              className={'exchangeList'}\n              datePicker\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <ExchangeModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        exchangeList={exchangeList}\n        setExchangeList={setExchangeList}\n        onLoadMallexchangeList={onLoadMallexchangeList}\n        readOnly\n      />\n    </CRow>\n  )\n}\n\nexport default ExchangeList\n"],"names":["value","visible","setVisible","exchangeList","setExchangeList","onLoadMallexchangeList","navigate","useNavigate","useState","orderId","orderNumber","name","paymentMethod","totalPrice","exchangePrice","orderDate","payDate","exchangeDate","receiver","address","normalNumber","phoneNumber","totalCount","order","setOrder","orderStatus","setOrderStatus","useEffect","closeModal","onUpdateOrderStatus","orderExchangeId","ApiConfig","method","HttpMethod","url","EndPoint","path","query","res","data","isSuccess","code","alert","message","findIndex","product","size","onClose","className","ModalInput","id","placeholder","label","no","readOnly","disabled","itemName","sender","orderItemCount","isPrice","invoiceNumber","color","onClick","window","open","rows","exchangeReason","onChange","e","target","selectedItem","setSelectedItem","showModal","setShowModal","isEmpty","result","console","log","responses","map","item","index","length","PageHeader","title","xs","OrderTableList","items","columns","exchangeListColumns","datePicker"],"sourceRoot":""}