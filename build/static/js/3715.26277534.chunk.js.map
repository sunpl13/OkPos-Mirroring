{"version":3,"file":"static/js/3715.26277534.chunk.js","mappings":"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","sources":["components/Modal/officialMall/ExchangeModal.js","pages/officialMall/order/ExchangeList.js"],"sourcesContent":["import {\n  CButton,\n  CFormSelect,\n  CFormTextarea,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport {useEffect, useState} from 'react'\nimport {isPrice} from '../../../utils/utility'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\n\nconst ExchangeModal = ({value, visible, setVisible, exchangeList, setExchangeList, onLoadMallexchangeList}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [order, setOrder] = useState({\n    orderId: 0,\n    orderNumber: '',\n    name: '',\n    paymentMethod: '',\n    totalPrice: 0,\n    exchangePrice: 0,\n    orderDate: '',\n    payDate: '',\n    exchangeDate: '',\n    receiver: '',\n    address: '',\n    normalNumber: '',\n    phoneNumber: '',\n    totalCount: '',\n  })\n\n  const [orderStatus, setOrderStatus] = useState('')\n\n  // Life Cycle 선언\n  useEffect(() => {\n    if (visible) {\n      setOrder(value)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible])\n\n  const closeModal = () => {\n    setOrderStatus('')\n    setVisible(false)\n  }\n\n  // 함수 선언\n  // Update OrderStatus\n  const onUpdateOrderStatus = async (orderExchangeId, orderStatus) => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_EXCHANGE_ORDERS_STATUS,\n        path: {\n          orderExchangeId: orderExchangeId,\n        },\n        query: {\n          orderStatus: orderStatus,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n\n      setOrder(order => ({...order, orderStatus: orderStatus}))\n\n      const findIndex = exchangeList.findIndex(product => product.orderExchangeId === orderExchangeId)\n      exchangeList[findIndex].orderStatus = orderStatus\n      setExchangeList(exchangeList => [...exchangeList])\n      await onLoadMallexchangeList()\n\n      alert(res?.message)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 주문 상태 값 저장\n  const orderStatusChange = e => {\n    const {value} = e.target\n    setOrderStatus(value)\n  }\n\n  // 주문상태 변경 함수\n  const handleOrderStatus = () => {\n    if (!orderStatus) return alert('주문상태를 선택해주세요.')\n    onUpdateOrderStatus(order.orderExchangeId, orderStatus)\n    setOrderStatus('')\n  }\n\n  // 송장조회\n  const handleInvoicCheck = () => {\n    if (order?.invoiceNumber) {\n      const {invoiceNumber} = order\n      window.open('https://www.ilogen.com/web/personal/trace/' + invoiceNumber)\n    } else {\n      window.open('https://www.ilogen.com/web/personal/tkSearch')\n    }\n  }\n\n  return (\n    <CModal size='lg' visible={visible} onClose={closeModal}>\n      <CModalHeader>\n        <CModalTitle>교환 상세정보</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'orderExchangeId'}\n            placeholder={'orderExchangeId'}\n            label={'No'}\n            value={order.no}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'orderNumber'}\n            placeholder={''}\n            label={'주문번호'}\n            value={order.orderNumber}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'itemName'}\n            placeholder={'제품명'}\n            label={'제품명'}\n            value={order.itemName}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput id={'sender'} placeholder={''} label={'보내는이'} value={order.sender} readOnly disabled />\n          <ModalInput id={'receiver'} placeholder={''} label={'수취인'} value={order.receiver} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'orderItemCount'}\n            placeholder={''}\n            label={'주문제품수량'}\n            value={order.orderItemCount}\n            readOnly\n            disabled\n          />\n          <ModalInput id={'orderDate'} placeholder={''} label={'주문일'} value={order.orderDate} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'paymentMethod'}\n            placeholder={''}\n            label={'결제수단'}\n            value={order.paymentMethod}\n            readOnly\n            disabled\n          />\n          <ModalInput id={'payDate'} placeholder={''} label={'결제일'} value={order.payDate} readOnly disabled />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'orderStatus'}\n            placeholder={''}\n            label={'주문상태'}\n            value={order.orderStatus}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'exchangeDate'}\n            placeholder={''}\n            label={'교환 요청일'}\n            value={order.exchangeDate}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'exchangePrice'}\n            placeholder={''}\n            label={'교환금액'}\n            value={isPrice(order.exchangePrice)}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'totalPrice'}\n            placeholder={''}\n            label={'총 결제금액'}\n            value={isPrice(order.totalPrice)}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'invoiceNumber'}\n            placeholder={'송장번호'}\n            label={'송장번호'}\n            value={order.invoiceNumber}\n            readOnly\n            disabled\n          />\n          <CButton className='me-md-3 invoiceSearchBtn' color='warning' size='sm' onClick={handleInvoicCheck}>\n            송장조회\n          </CButton>\n        </CRow>\n        <CRow className={'p-2'}>\n          <CFormTextarea\n            id='exchangeReason'\n            placeholder={'교환사유'}\n            label='교환사유'\n            rows='3'\n            value={order.exchangeReason}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <div className={'pb-2 d-md-flex justify-content-md-end'}>\n          <CFormSelect value={orderStatus} className='me-md-2 orderStatusForm' size='sm' onChange={orderStatusChange}>\n            <option>주문상태 선택</option>\n            <option value='결제 대기'>결제 대기</option>\n            <option value='결제 완료'>결제 완료</option>\n            <option value='배송 준비중'>배송 준비중</option>\n            <option value='배송중'>배송중</option>\n            <option value='배송 완료'>배송 완료</option>\n            <option value='교환 처리중'>교환 처리중</option>\n            <option value='교환 완료'>교환 완료</option>\n          </CFormSelect>\n          <CButton className='me-md-2' color='success' size='sm' onClick={handleOrderStatus}>\n            주문상태 변경\n          </CButton>\n        </div>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={closeModal}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ExchangeModal\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {exchangeListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport OrderTableList from '../../../components/list/mall/OrderTableList'\nimport ExchangeModal from '../../../components/Modal/officialMall/ExchangeModal'\n\nconst ExchangeList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [exchangeList, setExchangeList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n\n  // API 통신 함수\n  const onLoadMallexchangeList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_EXCHANGE_ORDERS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('loadMallExchangeList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setExchangeList(\n        res.result.responses.map((item, index) => {\n          return {...item, no: res.result.responses.length - index}\n        }),\n      )\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallexchangeList()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowUserDetailModal = item => {\n    setSelectedItem(item)\n    setShowModal(!showModal)\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='교환 요청 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <OrderTableList\n              items={exchangeList}\n              onClick={handleShowUserDetailModal}\n              columns={exchangeListColumns}\n              className={'exchangeList'}\n              datePicker\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <ExchangeModal\n        value={selectedItem}\n        visible={showModal}\n        setVisible={setShowModal}\n        exchangeList={exchangeList}\n        setExchangeList={setExchangeList}\n        onLoadMallexchangeList={onLoadMallexchangeList}\n        readOnly\n      />\n    </CRow>\n  )\n}\n\nexport default ExchangeList\n"],"names":["_ref","value","visible","setVisible","exchangeList","setExchangeList","onLoadMallexchangeList","navigate","useNavigate","_useState","useState","orderId","orderNumber","name","paymentMethod","totalPrice","exchangePrice","orderDate","payDate","exchangeDate","receiver","address","normalNumber","phoneNumber","totalCount","_useState2","_slicedToArray","order","setOrder","_useState3","_useState4","orderStatus","setOrderStatus","useEffect","closeModal","onUpdateOrderStatus","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderExchangeId","_yield$ApiConfig$requ","res","findIndex","wrap","_context","prev","next","ApiConfig","request","method","HttpMethod","PATCH","url","EndPoint","PATCH_MALL_EXCHANGE_ORDERS_STATUS","path","query","sent","data","isSuccess","code","alert","message","abrupt","_objectSpread","product","_toConsumableArray","t0","stop","_x","_x2","apply","arguments","_jsxs","CModal","size","onClose","children","_jsx","CModalHeader","CModalTitle","CModalBody","CRow","className","ModalInput","id","placeholder","label","no","readOnly","disabled","itemName","sender","orderItemCount","isPrice","invoiceNumber","CButton","color","onClick","window","open","CFormTextarea","rows","exchangeReason","CFormSelect","onChange","e","target","CModalFooter","selectedItem","setSelectedItem","_useState5","_useState6","showModal","setShowModal","GET","GET_MALL_EXCHANGE_ORDERS","isEmpty","result","console","log","responses","map","item","index","length","PageHeader","title","CCol","xs","CCard","CCardBody","OrderTableList","items","columns","exchangeListColumns","datePicker","ExchangeModal"],"sourceRoot":""}