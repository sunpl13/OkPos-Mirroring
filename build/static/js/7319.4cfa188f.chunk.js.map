{"version":3,"file":"static/js/7319.4cfa188f.chunk.js","mappings":"6RAAaA,EAAgB,CAC3B,CACEC,IAAK,eACLC,MAAO,GACPC,OAAQ,CAACC,MAAO,UAAWC,UAAW,gBACtCC,QAAQ,EACRC,QAAQ,GAEV,CACEN,IAAK,SACLC,MAAO,KACPC,OAAQ,CAACC,MAAO,UAAWC,UAAW,UACtCC,QAAQ,GAEV,CACEL,IAAK,UACLC,MAAO,qBACPC,OAAQ,CAACC,MAAO,UAAWC,UAAW,YAExC,CACEJ,IAAK,YACLC,MAAO,kCACPC,OAAQ,CAACC,MAAO,UAAWC,UAAW,aACtCC,QAAQ,GAEV,CACEL,IAAK,sBACLC,MAAO,eACPC,OAAQ,CAACC,MAAO,UAAWC,UAAW,uBACtCC,QAAQ,I,iCC6DZ,EAlFyB,WACvB,OAA0BE,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAkCF,EAAAA,EAAAA,WAAS,GAAM,eAA1CG,EAAS,KAAEC,EAAY,KAGxBC,EAA0B,yCAAG,kHAEZC,EAAAA,EAAAA,QAAkB,CACnCC,KAAM,CAAC,EACPC,MAAO,CAAC,EACRC,KAAM,CAAC,EACPC,OAAQC,EAAAA,EAAAA,IACRC,IAAKC,EAAAA,EAAAA,SACL,OACmC,OAP/BN,EAAI,OAOVL,EAAa,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKO,OAAOC,WAAU,kBAC1B,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKO,OAAOC,WAAS,gCAElCC,MAAM,EAAD,IAAO,yDAEf,kBAd+B,mCAe1BC,EAAkB,yCAAG,WAAMC,GAAI,4EACkD,OAA/EC,EAAqC,IAAtBD,EAAKE,aAAqB,kBAAoB,mBAAkB,kBAEhEd,EAAAA,EAAAA,QAAkB,CACnCC,KAAM,CACJ,CACEc,SAAUH,EAAKG,SACfC,gBAAiBH,IAGrBX,MAAO,CAAC,EACRC,KAAM,CAAC,EACPC,OAAQC,EAAAA,EAAAA,MACRC,IAAI,GAAD,OAAKC,EAAAA,EAAAA,OAAe,WACvB,OAXQ,WAYDN,KAAKgB,UAAU,CAAD,wCACdlB,KAA4B,uDAGrCW,MAAM,EAAD,IAAO,yDAEf,gBArBuB,uCA2BxBQ,EAAAA,EAAAA,YAAU,WAC+B,UAAnCC,eAAeC,QAAQ,SACzBrB,GAEJ,GAAG,IAEH,IAAMsB,EAAqC,yCAAG,WAAMT,GAAI,sEACtDd,GAAcD,GAAU,2CACzB,gBAF0C,sCAI3C,GAAuC,UAAnCsB,eAAeC,QAAQ,QAE3B,OACE,iCACE,SAACE,EAAA,EAAU,CAACC,MAAM,8BAClB,SAAC,KAAI,WACH,SAAC,KAAI,CAACC,GAAI,GAAG,UACX,SAAC,KAAK,CAACjC,UAAU,OAAM,UACrB,SAAC,KAAS,WACR,SAACkC,EAAA,EAAY,CACX9B,MAAOA,EACP+B,QAASL,EACTM,QAASzC,EACTK,UAAW,WACXqC,KAAMjB,EACNkB,kBArEQ,CAAC,CAAC1C,IAAK,YAAa2C,MAAO,gDA6EnD,C","sources":["utils/columns/member/Columns.js","pages/member/MemberMagement.js"],"sourcesContent":["export const EditorColumns = [\n  {\n    key: 'isAuthorized',\n    label: '',\n    _props: {color: 'primary', className: 'isAuthorized'},\n    filter: false,\n    sorter: false,\n  },\n  {\n    key: 'number',\n    label: 'No',\n    _props: {color: 'primary', className: 'number'},\n    filter: false,\n  },\n  {\n    key: 'loginId',\n    label: '아이디',\n    _props: {color: 'primary', className: 'loginId'},\n  },\n  {\n    key: 'createdAt',\n    label: '최초 등록일',\n    _props: {color: 'primary', className: 'createdAt'},\n    filter: false,\n  },\n  {\n    key: 'editAuthorityKorean',\n    label: '권한',\n    _props: {color: 'primary', className: 'editAuthorityKorean'},\n    filter: false,\n  },\n]\n","import {useEffect, useState} from 'react'\nimport PageHeader from '../../components/common/PageHeader'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../components/list/ListTemplate'\nimport {EditorColumns} from '../../utils/columns/member/Columns'\nimport ApiConfig, {HttpMethod} from '../../dataManager/apiConfig'\nimport {EndPoint} from '../../dataManager/apiMapper'\n\nconst MemberManageMent = () => {\n  const [items, setItems] = useState([])\n  const [showModal, setShowModal] = useState(false)\n  const datePickerOps = [{key: 'createdAt', value: '최초 등록일'}]\n\n  const onLoadMemberManageMentList = async () => {\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {},\n        method: HttpMethod.GET,\n        url: EndPoint.EDITOR,\n      })\n      setItems(data?.data.result.responses)\n      return data?.data.result.responses\n    } catch (error) {\n      alert(error)\n    }\n  }\n  const handleOnCheckedApi = async item => {\n    const sendAuthType = item.isAuthorized === 1 ? 'EDITOR_PROHIBIT' : 'EDITOR_AUTHORIZE'\n    try {\n      const data = await ApiConfig.request({\n        data: [\n          {\n            editorId: item.editorId,\n            editorAuthority: sendAuthType,\n          },\n        ],\n        query: {},\n        path: {},\n        method: HttpMethod.PATCH,\n        url: `${EndPoint.EDITOR}/auth`,\n      })\n      if (data.data.isSuccess) {\n        return onLoadMemberManageMentList()\n      }\n    } catch (error) {\n      alert(error)\n    }\n  }\n  //가져오기 onLoad\n  //생성 onCreate\n  //수정 onUpdate\n  //삭제 onDelete\n\n  useEffect(() => {\n    if (sessionStorage.getItem('auth') === 'ADMIN') {\n      onLoadMemberManageMentList()\n    }\n  }, [])\n\n  const handleShowMemberManageMentDetailModal = async item => {\n    setShowModal(!showModal)\n  }\n\n  if (sessionStorage.getItem('auth') !== 'ADMIN') return\n\n  return (\n    <>\n      <PageHeader title='회원관리' />\n      <CRow>\n        <CCol xs={12}>\n          <CCard className='mb-4'>\n            <CCardBody>\n              <ListTemplate\n                items={items}\n                onClick={handleShowMemberManageMentDetailModal}\n                columns={EditorColumns}\n                className={'userList'}\n                func={handleOnCheckedApi}\n                datePickerOptions={datePickerOps}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default MemberManageMent\n"],"names":["EditorColumns","key","label","_props","color","className","filter","sorter","useState","items","setItems","showModal","setShowModal","onLoadMemberManageMentList","ApiConfig","data","query","path","method","HttpMethod","url","EndPoint","result","responses","alert","handleOnCheckedApi","item","sendAuthType","isAuthorized","editorId","editorAuthority","isSuccess","useEffect","sessionStorage","getItem","handleShowMemberManageMentDetailModal","PageHeader","title","xs","ListTemplate","onClick","columns","func","datePickerOptions","value"],"sourceRoot":""}