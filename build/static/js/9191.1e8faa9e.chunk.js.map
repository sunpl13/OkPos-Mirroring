{"version":3,"file":"static/js/9191.1e8faa9e.chunk.js","mappings":"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","sources":["components/forms/ModalStatus.tsx","components/forms/downloadForm/BasicFileDownloadForm.js","components/Modal/officialMall/UserModal.js","pages/officialMall/users/UserList.js"],"sourcesContent":["import {CBadge, CCol, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\ninterface ModalInputProps {\n  type?: string\n  onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void\n  id: string\n  placeholder: string\n  value: string\n  label: string\n  readOnly?: boolean\n  disabled?: boolean\n  status?: boolean\n}\n\nconst ModalStatus = ({id, value, label}: ModalInputProps) => {\n  const getBadgeColor = (status: string) => {\n    switch (status) {\n      case 'ACTIVE':\n        return 'success'\n      case 'INACTIVE':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  // 상태값 Text get 함수\n  const getBadgeText = (status: string) => {\n    switch (status) {\n      case 'ACTIVE':\n        return '활성화'\n      case 'INACTIVE':\n        return '비활성화'\n      default:\n        return '기타'\n    }\n  }\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        {label || ' * '}\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        <CBadge color={getBadgeColor(value)}>{getBadgeText(value)}</CBadge>\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalStatus\n","import {CCol, CFormLabel} from '@coreui/react'\nimport {useEffect, useState} from 'react'\n\nconst BasicFileDownloadForm = ({id, placeholder, value, label, isRequired}) => {\n  // Local state\n  const [fileName, setFileName] = useState('')\n\n  // Life Cycle\n  useEffect(() => {\n    if (value) {\n      const arSplitUrl = value.split('/') //   \"/\" 로 전체 url 을 나눈다\n      const nArLength = arSplitUrl.length\n      const arFileName = arSplitUrl[nArLength - 1] // 나누어진 배열의 맨 끝이 파일명이다\n      setFileName(arFileName)\n    }\n  }, [value])\n\n  const downloadFile = ({value}) => {\n    const element = document.createElement('a')\n    const file = new Blob([document.getElementById('input').value], {\n      type: 'text/plain;charset=utf-8}',\n    })\n    element.href = value\n    element.click()\n  }\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        {value ? (\n          <div className='col-form-label'>\n            <a href={value} download>\n              {fileName}\n            </a>\n          </div>\n        ) : (\n          <div className='col-form-label'>등록된 파일이 없습니다.</div>\n        )}\n      </CCol>\n    </>\n  )\n}\n\nexport default BasicFileDownloadForm\n","import {CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow} from '@coreui/react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport {useEffect, useState} from 'react'\nimport ModalStatus from '../../forms/ModalStatus'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport BasicFileDownloadForm from '../../forms/downloadForm/BasicFileDownloadForm'\nimport {isEmpty} from '../../../utils/utility'\n\nconst UserDetailModal = ({value, visible, setVisible, onChange}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [user, setUser] = useState({\n    userId: 0,\n    name: '',\n    email: '',\n    createdAt: '',\n    status: '',\n    phoneNumber: '',\n    businessName: '',\n    businessRegistration: '',\n    businessNumber: '',\n    businessAddress: '',\n  })\n\n  // API 통신 함수\n  const onloadMallUser = async value => {\n    const {userId} = value\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {userId},\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_USER,\n      })\n      if (!data?.data?.isSuccess || isEmpty(data?.data?.result)) {\n        console.log('onloadMallUser error')\n        if (data?.data?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(data?.data?.message)\n        }\n        return\n      }\n      setUser(data.data.result)\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    if (visible) {\n      onloadMallUser(value)\n    }\n  }, [visible])\n\n  const closeModal = () => {\n    setVisible(false)\n  }\n  return (\n    <CModal size='lg' visible={visible} onClose={closeModal}>\n      <CModalHeader>\n        <CModalTitle>회원 상세정보</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'id'}\n            placeholder={'User Id'}\n            label={'No'}\n            value={value.userId}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'userName'}\n            placeholder={''}\n            label={'이름'}\n            value={user.name}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'email'}\n            placeholder={'이메일'}\n            label={'이메일'}\n            value={user.email}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'createdAt'}\n            placeholder={'최초등록일'}\n            label={'최초등록일'}\n            value={user.createdAt}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'phoneNumber'}\n            placeholder={'휴대전화번호'}\n            label={'휴대전화번호'}\n            value={user.phoneNumber}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'businessName'}\n            placeholder={'상호명'}\n            label={'상호명'}\n            value={user.businessName}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessNumber'}\n            placeholder={'사업자등록번호'}\n            label={'사업자등록번호'}\n            value={user.businessNumber}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessAddress'}\n            placeholder={'사업장주소'}\n            label={'사업장주소'}\n            value={user.businessAddress}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <BasicFileDownloadForm\n            id={'businessRegistration'}\n            placeholder={'사업자등록증'}\n            label={'사업자등록증'}\n            value={user.businessRegistration || ''}\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalStatus id={'userStatus'} placeholder={'상태'} label={'상태'} value={user.status} />\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={closeModal}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport UserModal from '../../../components/Modal/officialMall/UserModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {userListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\n\nconst UserList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [userList, setUserList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n\n  // API 통신 함수\n  const onLoadMallUserList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_USERS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('loadMallUserList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      setUserList(res.result.userInfos)\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallUserList()\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowUserDetailModal = item => {\n    setSelectedItem(item)\n    setShowModal(!showModal)\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='회원 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={userList}\n              onClick={handleShowUserDetailModal}\n              columns={userListColumns}\n              className={'userList'}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <UserModal value={selectedItem} visible={showModal} setVisible={setShowModal} readOnly />\n    </CRow>\n  )\n}\n\nexport default UserList\n"],"names":["id","value","label","htmlFor","className","style","display","color","status","getBadgeColor","getBadgeText","placeholder","isRequired","useState","fileName","setFileName","useEffect","arSplitUrl","split","arFileName","length","href","download","visible","setVisible","onChange","navigate","useNavigate","userId","name","email","createdAt","phoneNumber","businessName","businessRegistration","businessNumber","businessAddress","user","setUser","onloadMallUser","ApiConfig","data","query","path","method","HttpMethod","url","EndPoint","isSuccess","isEmpty","result","console","log","code","alert","message","closeModal","size","onClose","ModalInput","readOnly","disabled","BasicFileDownloadForm","ModalStatus","onClick","userList","setUserList","selectedItem","setSelectedItem","showModal","setShowModal","onLoadMallUserList","res","userInfos","PageHeader","title","xs","ListTemplate","items","item","columns","userListColumns","UserModal"],"sourceRoot":""}