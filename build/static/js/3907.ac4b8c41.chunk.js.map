{"version":3,"file":"static/js/3907.ac4b8c41.chunk.js","mappings":"4NA8DA,IA1D8B,SAAH,GAAwC,IAAnCA,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAU,EAAVA,WA2BhD,OACE,iCACE,SAAC,KAAU,CAACC,QAAO,UAAKJ,EAAE,UAAUK,UAAU,0BAAyB,UACrE,iBAAMA,UAAWF,EAAa,WAAa,GAAG,SAAED,GAAS,WAE3D,SAAC,KAAI,WACG,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOK,QAAS,EACfL,EAAMM,KAAI,SAACC,EAAMC,GACf,IAAMC,EAAWF,EAAKG,MAAM,KAEtBC,EAAWF,EADMA,EAASJ,OACW,GAC3C,OACE,gBAAiBD,UAAU,iBAAgB,UACzC,UAACQ,EAAS,CACRC,KAAK,OAELC,MAAMC,EAAAA,EAAAA,IAAgBR,GACtBS,QAAS,kBA3CJ,SAACC,EAAKN,GACzBM,GAAMF,EAAAA,EAAAA,IAAgBE,GAEtBC,MAAMD,EAAK,CAACE,OAAQ,QACjBC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,MACb,IACCF,MAAK,SAAAE,GACJ,IAAML,EAAMM,OAAOC,IAAIC,gBAAgBH,GACjCI,EAAIC,SAASC,cAAc,KACjCF,EAAEZ,KAAOG,EACTS,EAAEG,SAAWlB,EACbgB,SAASG,KAAKC,YAAYL,GAC1BA,EAAEM,QACFC,YAAW,SAAAC,GACTX,OAAOC,IAAIW,gBAAgBlB,EAC7B,GAAG,KACHS,EAAEU,QACJ,IACCC,OAAM,SAAAC,GACLC,QAAQC,MAAM,QAASF,EACzB,GACJ,CAqB+BG,CAAalC,EAAMI,EAAS,EAAC,UAE3CH,EAAQ,EAAC,KAAIG,IAJTH,IAHCA,EAWd,KAEA,gBAAKJ,UAAU,iBAAgB,iFAKzC,EAGA,IAAMQ,EAAY8B,EAAAA,GAAAA,KAAW,+T,oHC9D7B,EADoB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uhBAA2hB,KAAQ,QAAS,MAAS,Y,WCK5sBC,EAAgB,SAAuBC,EAAOC,GAChD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,CAAC,EAAGJ,GAAQ,CAAC,EAAG,CAC5FC,IAAKA,EACLI,KAAMC,IAEV,EACAP,EAAcQ,YAAc,gBAC5B,I,EAAA,EAA4BL,EAAAA,WAAiBH,G,sFCuG7C,EA3GwB,SAAH,GAAmF,IAA9E3C,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOF,EAAE,EAAFA,GAAIqD,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAAUrD,EAAU,EAAVA,YAErFsD,EAAAA,EAAAA,YAAU,WACJxD,GAASA,EAAMK,OAAS,GAC1BiD,EACEtD,EAAMM,KAAI,SAACC,EAAMC,GAAK,MAAM,CAC1BiD,IAAKjD,EACLkD,IAAKlD,EACLmD,KAAMpD,EAAKqD,UAAYrD,EAAKqD,UAAYC,UAAUtD,EAAKG,MAAM,KAAKH,EAAKG,MAAM,KAAKL,OAAS,IAC3FyD,OAAQ,OACR7C,IAAKV,EAAKA,MAAOQ,EAAAA,EAAAA,IAAgBR,EAAKA,OAAQQ,EAAAA,EAAAA,IAAgBR,GAC/D,IAGP,GAAG,CAACP,IAEJ,IA4DM4C,EAAQ,CACZe,KAAM,OACNI,UAAU,EACVX,SAAUA,EACVC,SAAUA,EACVW,cAAa,SAACC,IAzCE,SAAH,GAAgD,IAA3C1D,EAAI,EAAJA,KAAM2D,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAC7CC,IAAAA,OAAAA,OAAkB,CAChBC,OAAQC,iBACRC,YAAaD,uBACbE,gBAAiBF,6CAGnB,IAAMG,EAAK,IAAIL,IAAAA,IACT1D,EAAWJ,EAAKoD,KAAKgB,WAAW,IAAK,IACrCC,EAAY,CAChBC,QAAQC,EAAAA,EAAAA,IAAqBvB,GAC7BwB,IAAKpE,EACLqE,KAAMzE,EACN0E,YAAa1E,EAAK2E,MAGLR,EAAGS,UAAUP,GACzBQ,GAAG,sBAAsB,gBAAEC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAK,OAAMnB,EAAW,CAACoB,QAAUF,EAASC,EAAS,KAAK,IAC3FE,UACIpE,MACL,SAAU6C,GACRG,EAAUH,EAAKwB,UACjB,IACA,SAAUjD,GACR0B,IACA3B,QAAQmD,IAAIlD,EAAMmD,MAClBpD,QAAQmD,IAAIlD,EAAMoD,QACpB,GAEJ,CAaIC,CAAU5B,EACZ,EACAG,UAAS,SAACH,IA3DM,SAAA6B,GAChB,IAAMC,EAAcD,EAAYE,QAAQD,YAClCxF,EAAOwF,EAAYjE,KACzB,EAAyBiE,EAAYE,SAA9BC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAEXC,EAAW,CACf1C,IAAKoC,EAAYE,QAAQK,OAAOtB,IAChCpB,KAAMpD,EAAKoD,KACXG,OAAQ,OACR7C,IAAI,GAAD,OAAKiF,EAAQ,aAAKC,GAAI,OAAGJ,EAAYO,OAE1ChD,EAAY,GAAD,eAAKD,GAAQ,CAAE+C,IAC5B,CAgDIhC,CAAUH,EACZ,EACAsC,SAAQ,SAACtC,GAfM,IAAAuC,IAgBJvC,EAfXX,EAAYD,EAASoD,QAAO,SAAAlG,GAAI,OAAIA,EAAKmD,MAAQ8C,EAAK9C,GAAG,IAgBzD,GAGF,OACE,+BACE,UAACgD,EAAM,CAACtG,UAAWgD,EAAS,WAC1B,SAAC,KAAU,CAAChD,UAAWF,EAAa,WAAa,GAAG,SAAED,GAAS,MAC/D,UAAC,aAAc,kBAAK2C,GAAK,IAAE7C,GAAIA,EAAG,WAChC,cAAGK,UAAU,uBAAsB,UACjC,SAAC,EAAa,OAEhB,cAAGA,UAAU,kBAAiB,kLAKxC,EAIMsG,EAAShE,EAAAA,GAAAA,IAAU,qR,mMC9GnBiE,EAAY,SAAApG,GAAI,OACpB,IAAIqG,SAAQ,SAACC,EAASC,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAc1G,GACrBwG,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,OAAO,EAC5CJ,EAAOK,QAAU,SAAA5E,GAAK,OAAIsE,EAAOtE,EAAM,CACzC,GAAE,EAoIJ,IAlIwB,SAAH,GAAyF,IAApF6E,EAAM,EAANA,OAAQtH,EAAE,EAAFA,GAAIE,EAAK,EAALA,MAAOoD,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAagE,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAAS,EAAD,EAAEC,SAAAA,OAAQ,OAAQ,EACrG,GAAsCC,EAAAA,EAAAA,WAAS,GAAM,eAAjCC,GAAF,KAAgB,MAClC,GAAwCD,EAAAA,EAAAA,UAAS,IAAG,eAA7CE,EAAY,KAAEC,EAAe,KACpC,GAAwCH,EAAAA,EAAAA,UAAS,IAAG,eAA7CI,EAAY,KAAEC,EAAe,MAEpCtE,EAAAA,EAAAA,YAAU,WACJ6D,GAAUA,EAAOhH,OAAS,GAC5BiD,EACE+D,EAAO/G,KAAI,SAAAgG,GAAI,MAAK,CAClB5C,IAAK4C,EACL3C,KAAME,UAAUyC,EAAK5F,MAAM,KAAK4F,EAAK5F,MAAM,KAAKL,OAAS,IACzDyD,OAAQ,OACR7C,KAAKF,EAAAA,EAAAA,IAAgBuF,GACtB,IAGP,GAAG,CAACe,EAAQ/D,IAEZ,IAIMyE,EAAa,yCAAG,WAAMxH,GAAI,yEACzBA,EAAKU,KAAQV,EAAKyH,QAAO,gCACPrB,EAAUpG,EAAK0H,eAAc,OAAlD1H,EAAKyH,QAAO,cAGdJ,EAAgBrH,EAAKU,KAAOV,EAAKyH,SACjCN,GAAe,GACfI,EAAgBvH,EAAKoD,MAAQpD,EAAKU,IAAIiH,UAAU3H,EAAKU,IAAIkH,YAAY,KAAO,IAAG,2CAChF,gBARkB,sCAgEbC,GACJ,4BACE,SAAC,IAAY,KACb,gBAAKC,MAAO,CAACC,UAAW,GAAG,uBAG/B,OACE,iCACE,SAAC,KAAU,CAACnI,QAAO,UAAKJ,EAAE,UAAUK,UAAU,0BAAyB,UACrE,0BAAOH,GAAS,WAElB,SAAC,IAAM,CACLsI,SAAS,eACTlF,SAAUA,EACVmF,UAAWT,EACX3D,UAAW,SAAAH,GAAI,OArEH,SAAA6B,GAChB,IAAMC,EAAcD,EAAYE,QAAQD,YAClCxF,EAAOwF,EAAYjE,KACzB,EAAyBiE,EAAYE,SAA9BC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAEXC,EAAW,CACf1C,IAAKoC,EAAYE,QAAQK,OAAOtB,IAChCpB,KAAMpD,EAAKoD,KACXG,OAAQ,OACR7C,IAAI,GAAD,OAAKiF,EAAQ,aAAKC,GAAI,OAAGJ,EAAYO,OAG1ChD,EAAY,GAAD,eAAKD,GAAQ,CAAE+C,IAC5B,CAwDyBhC,CAAUH,EAAK,EAClCsC,SAAU,SAAAtC,GAAI,OAnBHuC,EAmBgBvC,OAlB/BX,EAAYD,EAASoD,QAAO,SAAAlG,GAAI,OAAIA,EAAKmD,MAAQ8C,EAAK9C,GAAG,KAD1C,IAAA8C,CAmBqB,EAChCxC,cAAe,SAAAyE,GAAO,OAxDV,SAAH,GAAgD,IAA3ClI,EAAI,EAAJA,KAAM2D,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAC7C,GAAIoD,GAAgC,IAApBnE,EAAShD,OACvBqI,MAAM,gGADR,CAIArE,IAAAA,OAAAA,OAAkB,CAChBC,OAAQC,iBACRC,YAAaD,uBACbE,gBAAiBF,6CAGnB,IAAMG,EAAK,IAAIL,IAAAA,IACT1D,EAAWJ,EAAKoD,KAAKgB,WAAW,IAAK,IAErCC,EAAY,CAChBC,QAAQ8D,EAAAA,EAAAA,IAAiBrB,GACzBvC,IAAKpE,EACLqE,KAAMzE,EACN0E,YAAa1E,EAAK2E,MAGLR,EAAGS,UAAUP,GACzBQ,GAAG,sBAAsB,gBAAEC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAK,OAAMnB,EAAW,CAACoB,QAAUF,EAASC,EAAS,KAAK,IAC3FE,UACIpE,MACL,SAAU6C,GACRG,EAAUH,EAAKwB,UACjB,IACA,SAAUjD,GACR0B,IACA3B,QAAQmD,IAAIlD,EAAMmD,MAClBpD,QAAQmD,IAAIlD,EAAMoD,QACpB,GA5BF,CA8BF,CAsBgCC,CAAU4C,EAAQ,EAC5CrF,SAAUmE,EAAS,UAEV,OAARlE,QAAQ,IAARA,OAAQ,EAARA,EAAUhD,SAAU,EAAI,KAAO+H,IAGjCT,IACC,UAAC,KAAI,YACH,SAAC,KAAU,CAACvH,UAAU,iBAAgB,UACpC,0BAAOyH,GAAgB,QAEzB,SAACe,EAAe,CAACxI,UAAW,kBAAkB,UAC5C,SAAC,KAAM,CACLyI,SAAO,EACPC,IAAI,UACJ9H,QAAS,WAnGnB4G,EAAgB,GAmG2B,EACjCmB,IAAKpB,EACLqB,MAAO,IACPC,OAAQ,aAOtB,EAIA,IAAML,GAAkBlG,EAAAA,EAAAA,IAAOwG,EAAAA,GAAPxG,CAAY,iK,yEC5HpC,IArBmB,SAAH,GAA6F,IAAxFwC,EAAI,EAAJA,KAAMiE,EAAQ,EAARA,SAAUpJ,EAAE,EAAFA,GAAIqJ,EAAW,EAAXA,YAAaC,EAAK,EAALA,MAAOpJ,EAAK,EAALA,MAAOsH,EAAQ,EAARA,SAAUnE,EAAQ,EAARA,SAAUlD,EAAU,EAAVA,WAAYoJ,EAAE,EAAFA,GAClG,OACE,iCACE,SAAC,KAAU,CAACnJ,QAAO,UAAKJ,EAAE,UAAUK,UAAU,0BAAyB,UACrE,iBAAMA,UAAWF,EAAa,WAAa,GAAG,SAAED,GAAS,WAE3D,SAAC,KAAI,CAACG,UAAU,qBAAqBkJ,GAAIA,EAAIjB,MAAO,CAACkB,QAAS,QAAQ,UACpE,SAAC,KAAU,CACTrE,KAAMA,GAAQ,OACdnF,GAAIA,EACJqJ,YAAaA,GAAe,GAC5BC,MAAgB,SAATnE,OAAkBsE,EAAYH,GAAS,GAC9CF,SAAUA,EACV5B,SAAUA,EACVnE,SAAUA,QAKpB,C,+DC4BA,IA/CoB,SAAH,GAYV,IAXL+F,EAAQ,EAARA,SACAM,EAAI,EAAJA,KACAL,EAAW,EAAXA,YACAnJ,EAAK,EAALA,MACAoJ,EAAK,EAALA,MACA9B,EAAQ,EAARA,SACAxH,EAAE,EAAFA,GACAuJ,EAAE,EAAFA,GAAG,EAAD,EACFlG,SAAAA,OAAQ,OAAQ,EAChBlD,EAAU,EAAVA,WAGMwJ,EAFC,EAAPC,QAE2BrJ,KAAI,SAAAkG,GAAI,OACjC,mBAAuB6C,MAAO7C,EAAK/C,IAAI,SACpC+C,EAAK6C,OADK7C,EAAK/C,IAET,IAGX,OACE,iCACE,SAAC,KAAU,CAACtD,QAAQ,cAAcC,UAAU,0BAAyB,UACnE,iBAAMA,UAAWF,EAAa,WAAa,GAAG,SAAED,GAAS,WAE3D,SAAC,KAAI,CAACqJ,GAAIA,EAAG,UACX,UAAC,KAAW,CAACD,MAAOA,EAAOjG,SAAUA,EAAUrD,GAAIA,EAAI0J,KAAMA,EAAMN,SAAUA,EAAU5B,SAAUA,EAAS,WACxG,4BAAS6B,IACRM,SAKX,C,wKCmGA,IA/H8B,SAAH,GAA2E,IAAtEE,EAAK,EAALA,MAAOC,EAAa,EAAbA,cAAe5J,EAAK,EAALA,MAAOF,EAAE,EAAFA,GAAIqD,EAAQ,EAARA,SAAUG,EAAQ,EAARA,SAAUrD,EAAU,EAAVA,WACnF,GAA8BuH,EAAAA,EAAAA,WAAS,GAAM,eAAtCqC,EAAO,KAkER1B,GAlEoB,MAmExB,iBACEC,MAAO,CACL0B,OAAQ,oBACRC,UAAW,SACXhB,MAAO,IACP,UAEDc,GAAU,SAAC,IAAe,KAAM,SAAC,IAAY,KAC9C,gBACEzB,MAAO,CACLC,UAAW,SAMb1F,EAAQ,CACZe,KAAM,SACN4E,SAAU,UACVnI,UAAW,kBACX6J,gBAAgB,EAChB7G,SAAUA,EACVwG,MAAOA,EACPM,aAxFmB,SAAA3J,GACnB,IAAM4J,EAA2B,eAAd5J,EAAK2E,MAAuC,cAAd3E,EAAK2E,KACjDiF,GACH5I,OAAOmH,MAAM,kFAEf,IAAM0B,EAAU7J,EAAKkJ,KAAO,KAAO,KAAO,GAI1C,OAHKW,GACHxE,EAAAA,GAAAA,MAAc,uDAETuE,GAAcC,CACvB,EA+EEpG,cAAa,SAACC,IA9DE,SAAH,GAAgD,IAA3C1D,EAAI,EAAJA,KAAM2D,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAC7CC,IAAAA,OAAAA,OAAkB,CAChBC,OAAQC,iBACRC,YAAaD,uBACbE,gBAAiBF,6CAGnB,IAAMG,EAAK,IAAIL,IAAAA,IACT1D,EAAWJ,EAAKoD,KAAKgB,WAAW,IAAK,IACrCC,EAAY,CAChBC,QAAQC,EAAAA,EAAAA,IAAqBvB,GAC7BwB,IAAKpE,EACLqE,KAAMzE,EACN0E,YAAa1E,EAAK2E,MAGLR,EAAGS,UAAUP,GACzBQ,GAAG,sBAAsB,gBAAEC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAK,OAAMnB,EAAW,CAACoB,QAAUF,EAASC,EAAS,KAAK,IAC3FE,UACIpE,MACL,SAAU6C,GACRG,EAAUH,EAAKwB,UACjB,IACA,SAAUjD,GACR0B,IACA3B,QAAQmD,IAAIlD,EAAMmD,MAClBpD,QAAQmD,IAAIlD,EAAMoD,QACpB,GAEJ,CAkCIC,CAAU5B,EACZ,EACAG,UAAS,SAACH,IAhFM,SAAA6B,GAChB,IAAMC,EAAcD,EAAYE,QAAQD,YAClCxF,EAAOwF,EAAYjE,KACzB,EAAyBiE,EAAYE,SAA9BC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAEXC,EAAW,CACf1C,IAAKoC,EAAYE,QAAQK,OAAOtB,IAChCpB,KAAMpD,EAAKoD,KACXG,OAAQ,OACR7C,IAAI,GAAD,OAAKiF,EAAQ,aAAKC,GAAI,OAAGJ,EAAYO,OAE1CuD,EAAczD,EAASnF,IACzB,CAqEImD,CAAUH,EACZ,EACAsC,SAAQ,SAACtC,GAnCT4F,EAAc,GAqCd,GAGF,OACE,iCACE,SAAC,KAAU,CAAC1J,QAAO,UAAKJ,EAAE,UAAUK,UAAU,0BAAyB,UACrE,iBAAMA,UAAWF,EAAa,WAAa,GAAG,SAAED,GAAS,WAE3D,SAAC,KAAI,CAACG,UAAU,qBAAqBiI,MAAO,CAACkB,QAAS,QAAQ,UAC5D,SAAC,KAAM,kBAAK3G,GAAK,aACdgH,GACC,gBACEb,IAAKa,EACLd,IAAI,SACJT,MAAO,CACLW,MAAO,UAIXZ,SAMZ,C,0EChHA,IAjB4B,SAAH,GAAsE,IAAjErI,EAAE,EAAFA,GAAIsJ,EAAK,EAALA,MAAOgB,EAAI,EAAJA,KAAMpK,EAAK,EAALA,MAAOkJ,EAAQ,EAARA,SAAUmB,EAAI,EAAJA,KAAM/C,EAAQ,EAARA,SAAUnE,EAAQ,EAARA,SAC9E,OACE,SAAC,KAAI,WACH,SAAC,KAAa,CACZrD,GAAIA,GAAM,GACVE,MAAOA,GAAS,GAChBoK,KAAMA,GAAQ,GACdhB,MAAOA,GAAS,GAChBF,SAAUA,EACVmB,KAAMA,GAAQ,GACd/C,SAAUA,EACVnE,SAAUA,KAIlB,C,kSCjBamH,EAA0B,CACrC,CACE9G,IAAK,2BACL4F,MAAO,4BAET,CACE5F,IAAK,2BACL4F,MAAO,4BAET,CACE5F,IAAK,qBACL4F,MAAO,sBAET,CACE5F,IAAK,qBACL4F,MAAO,sBAET,CACE5F,IAAK,2BACL4F,MAAO,4BAET,CACE5F,IAAK,eACL4F,MAAO,iB,iCCqIX,EAnJsB,SAAH,GAgBZ,IAfLF,EAAQ,EAARA,SAEA3C,GADa,EAAbqD,cACI,EAAJrD,MACAgE,EAAO,EAAPA,QACAC,EAAU,EAAVA,WACAC,EAAQ,EAARA,SACAC,EAAQ,EAARA,SACAtH,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAsH,EAAS,EAATA,UACAC,EAAY,EAAZA,aACAC,EAAW,EAAXA,YACAC,EAAQ,EAARA,SACAC,EAAa,EAAbA,cACAC,EAAU,EAAVA,WAGOC,EAAiE1E,EAAjE0E,SAAUC,EAAuD3E,EAAvD2E,WAAYC,EAA2C5E,EAA3C4E,MAAOC,EAAoC7E,EAApC6E,QAASzB,EAA2BpD,EAA3BoD,MAAO5J,EAAoBwG,EAApBxG,MAGhDsL,GAHoE9E,EAAb+E,UAG1C,6BACbR,IAAUO,EAAa,6BACvBL,IAAYK,EAAa,2CAE7B9H,EAAAA,EAAAA,YAAU,WAGV,GAAG,CAACgH,IAQJ,OACE,UAAC,KAAM,CAACf,KAAK,KAAKe,QAASA,EAASgB,QAAS,kBAAMf,GAAW,EAAM,EAAC,WACnE,SAAC,KAAY,WACX,SAAC,KAAW,UAAEa,OAEhB,SAAC,KAAU,WACT,UAAC,KAAK,YACJ,UAAC,KAAI,CAAClL,UAAW,MAAM,WACnB6K,GAAcF,KACd,SAACU,EAAA,EAAU,CACT1L,GAAI,KACJqJ,YAAa,KACbnJ,MAAO,KACPoJ,MAAO8B,EACPhC,SAAUA,EACV5B,UAAQ,EACRnE,UAAQ,KAGZ,SAACsI,EAAA,EAAW,CACV/B,QAASY,EACTpB,SAAUA,EACVM,KAAK,KACL1J,GAAG,WACHsJ,MAAO6B,EACPhL,YAAY,EACZkJ,YAAY,uCACZnJ,MAAM,2BACNsH,SAAU0D,EACV7H,SAAU6H,QAGd,SAAC,KAAI,CAAC7K,UAAW,MAAM,UACrB,SAACqL,EAAA,EAAU,CACT1L,GAAI,QACJqJ,YAAa,eACbnJ,MAAO,eACPoJ,MAAO+B,EACPjC,SAAUA,EACV5B,SAAU0D,EACV7H,SAAU6H,EACV/K,YAAU,OAGd,SAAC,KAAI,CAACE,UAAW,MAAM,UACrB,SAACuL,EAAA,EAAe,CACd5L,GAAG,QACHE,MAAM,kCACNoD,SAAUuH,EACVtH,YAAauH,EACbxD,OAAQuC,EACRtC,QAAQ,wBACRC,SAAU0D,MAEN,KACR,SAAC,KAAI,CAAC7K,UAAW,MAAM,UACrB,SAACwL,EAAA,EAAmB,CAClB7L,GAAG,UACHE,MAAO,eACPoJ,MAAOgC,EACPlC,SAAUA,EACVkB,KAAM,EACN9C,SAAU0D,EACV7H,SAAU6H,OAGd,SAAC,KAAI,CAAC7K,UAAW,MAAM,UACrB,SAACyL,EAAA,EAAe,CACd9L,GAAI,WACJsD,SAAUA,EACVC,YAAaA,EACbtD,MAAOA,EACPC,MAAO,2BACPsD,SAAU,sBACVgE,SAAU0D,EACV7H,SAAU6H,EACV/K,YAAU,OAGd,wBAGJ,UAAC,KAAY,YACT+K,IAAeF,IACf,SAAC,KAAO,CAAC/J,QAAS0J,EAAUoB,MAAM,UAAS,0BAI5Cf,IACC,SAAC,KAAO,CAAC/J,QAAS0J,EAAUoB,MAAM,UAAS,0BAI5Cb,IACC,iCACE,SAAC,KAAO,CAACa,MAAOb,EAAa,UAAY,UAAWjK,QApGvC,WACrBgK,GAAc,GACdF,GAAY,EACd,EAiGsF,2BAG5E,SAAC,KAAO,CAAC9J,QAAS2J,EAAUmB,MAAM,SAAQ,8BAK9C,SAAC,KAAO,CAACA,MAAM,YAAY9K,QAAS,kBAAMyJ,GAAW,EAAM,EAAC,+BAMpE,E,WC0IA,EAxRqB,WACnB,IAAMsB,GAAWC,EAAAA,EAAAA,MACjB,GAAoCvE,EAAAA,EAAAA,WAAS,GAAM,eAA5CwD,EAAU,KAAED,EAAa,KAChC,GAAgCvD,EAAAA,EAAAA,WAAS,GAAM,eAAxCsD,EAAQ,KAAED,EAAW,KAC5B,GAA0BrD,EAAAA,EAAAA,UAAS,IAAG,eAA/BwE,EAAK,KAAEC,EAAQ,KACtB,GAAwCzE,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7C0E,EAAY,KAAEC,EAAe,KACpC,GAAkC3E,EAAAA,EAAAA,WAAS,GAAM,eAA1C4E,EAAS,KAAEC,EAAY,KAC9B,GAAgC7E,EAAAA,EAAAA,UAAS,IAAG,eAArCpE,EAAQ,KAAEC,EAAW,KAC5B,GAAkCmE,EAAAA,EAAAA,UAAS,IAAG,eAAvCmD,EAAS,KAAEC,EAAY,KAKxB0B,EAAsB,yCAAG,oHAEDC,EAAAA,EAAAA,QAAkB,CAC1CrL,OAAQsL,EAAAA,EAAAA,IACRxL,IAAKyL,EAAAA,EAAAA,qBACL,gBAEM,QALKrL,EAAG,EAAT4C,YAKC,IAAH5C,IAAAA,EAAKsL,YAAaC,EAAAA,EAAAA,IAAW,OAAHvL,QAAG,IAAHA,OAAG,EAAHA,EAAK8F,QAChB,QAAX,OAAH9F,QAAG,IAAHA,OAAG,EAAHA,EAAKsE,MACPoG,EAAS,UAETrD,MAAS,OAAHrH,QAAG,IAAHA,OAAG,EAAHA,EAAKuE,SAGbsG,EAAS7K,EAAI8F,OAAO0F,eACrB,gDAEDnE,MAAM,6HAA6B,yDAEtC,kBAnB2B,mCAsBtBoE,EAAkB,yCAAG,WAAM3B,GAAU,uGAEbqB,EAAAA,EAAAA,QAAkB,CAC1CrL,OAAQsL,EAAAA,EAAAA,IACRxL,IAAKyL,EAAAA,EAAAA,kBACLpG,KAAM,CAAC6E,WAAAA,KACP,OAJS,GAIT,SAEM,QANK9J,EAAG,EAAT4C,YAMC,IAAH5C,GAAAA,EAAKsL,aAAaC,EAAAA,EAAAA,IAAW,OAAHvL,QAAG,IAAHA,OAAG,EAAHA,EAAK8F,QAAO,gBAKxC,OAJiB,QAAX,OAAH9F,QAAG,IAAHA,OAAG,EAAHA,EAAKsE,MACPoG,EAAS,UAETrD,MAAS,OAAHrH,QAAG,IAAHA,OAAG,EAAHA,EAAKuE,SACZ,0BAIHvE,EAAI8F,OAAOgE,WAAaA,EACxBiB,EAAgB/K,EAAI8F,QAAO,kDAE3BuB,MAAM,6HAA6B,0DAEtC,gBAtBuB,sCAyBlBqE,EAAoB,yCAAG,WAAMvG,GAAI,uGAETgG,EAAAA,EAAAA,QAAkB,CAC1CrL,OAAQsL,EAAAA,EAAAA,KACRxL,IAAKyL,EAAAA,EAAAA,mBACLzI,KAAM,CACJiH,SAAU1E,EAAK0E,SACfE,MAAO5E,EAAK4E,MACZC,QAAS7E,EAAK6E,QACdhE,OAAQb,EAAKoD,MACb5J,MAAOwG,EAAKxG,SAEd,OAVS,GAUT,SAEM,QAZKqB,EAAG,EAAT4C,YAYC,IAAH5C,GAAAA,EAAKsL,UAAU,CAAD,eAKhB,OAJiB,QAAX,OAAHtL,QAAG,IAAHA,OAAG,EAAHA,EAAKsE,MACPoG,EAAS,UAETrD,MAAS,OAAHrH,QAAG,IAAHA,OAAG,EAAHA,EAAKuE,SACZ,0BAGH8C,MAAS,OAAHrH,QAAG,IAAHA,OAAG,EAAHA,EAAKuE,SACXwG,EAAgBY,GAAY,kDAE5BtE,MAAM,6HAA6B,0DAEtC,gBA3ByB,sCA8BpBuE,EAAoB,yCAAG,WAAMzG,GAAI,8EACpB,OAAjBjE,QAAQmD,IAAIc,GAAK,kBAEWgG,EAAAA,EAAAA,QAAkB,CAC1CrL,OAAQsL,EAAAA,EAAAA,MACRxL,IAAKyL,EAAAA,EAAAA,2BACLzI,KAAM,CACJkH,WAAY3E,EAAK2E,WACjBD,SAAU1E,EAAK0E,SACfE,MAAO5E,EAAK4E,MACZC,QAAS7E,EAAK6E,QACdzB,MAAOpD,EAAKoD,MACZ5J,MAAOwG,EAAKxG,SAEd,OAXS,GAWT,SAEM,QAbKqB,EAAG,EAAT4C,YAaC,IAAH5C,GAAAA,EAAKsL,UAAU,CAAD,eAKhB,OAJiB,QAAX,OAAHtL,QAAG,IAAHA,OAAG,EAAHA,EAAKsE,MACPoG,EAAS,UAETrD,MAAS,OAAHrH,QAAG,IAAHA,OAAG,EAAHA,EAAKuE,SACZ,0BAGH8C,MAAS,OAAHrH,QAAG,IAAHA,OAAG,EAAHA,EAAKuE,SAAQ,kDAEnB8C,MAAM,6HAA6B,0DAEtC,gBA5ByB,sCA+BpBwE,EAAoB,yCAAG,WAAM/B,GAAU,uGAEfqB,EAAAA,EAAAA,QAAkB,CAC1CrL,OAAQsL,EAAAA,EAAAA,MACRxL,IAAKyL,EAAAA,EAAAA,2BACLpG,KAAM,CAAC6E,WAAAA,KACP,gBAEM,QANK9J,EAAG,EAAT4C,YAMC,IAAH5C,GAAAA,EAAKsL,YACU,QAAX,OAAHtL,QAAG,IAAHA,OAAG,EAAHA,EAAKsE,MACPoG,EAAS,UAETrD,MAAS,OAAHrH,QAAG,IAAHA,OAAG,EAAHA,EAAKuE,UAGf8C,MAAS,OAAHrH,QAAG,IAAHA,OAAG,EAAHA,EAAKuE,SAAQ,gDAEnB8C,MAAM,6HAA6B,yDAEtC,gBAnByB,uCAqB1BlF,EAAAA,EAAAA,YAAU,WACR+I,GACF,GAAG,IAEH,IAAMS,EAAc,WAAO,IAAD,EACxB,OAAO,EAAP,CACE5B,MAAO,GACPC,QAAS,GACTH,SAAU,KAAE,mBACH,KAAE,iBACJ,KAAE,iBACF,IAAE,CAEb,EAyCMiC,EAAuB,yCAAG,+FAG9B,GAFOhC,EAAwCgB,EAAxChB,WAAYC,EAA4Be,EAA5Bf,MAAOC,EAAqBc,EAArBd,QAASH,EAAYiB,EAAZjB,SAG9BE,EAAM,CAAD,wCAAS1C,MAAM,4DAAa,UACjCwC,EAAS,CAAD,wCAASxC,MAAM,wEAAe,UACtC2C,EAAQ,CAAD,wCAAS3C,MAAM,4DAAa,UACnCkC,EAAU,CAAD,wCAASlC,MAAM,kEAAc,UACtCrF,EAAS,CAAD,yCAASqF,MAAM,4DAAa,QAKhB,GAHzByD,EAAanM,MAA2BqD,EAhBhB+J,QAAO,SAACC,EAAahE,GAC3C,OAAO,kBAAIgE,GAAW,cAAGhE,EAAM1F,KAAO0F,EAAMpI,KAC9C,GAAG,CAAC,GAeJkL,EAAavC,OAAQ0D,EAAAA,EAAAA,IAAmB1C,GAExCrI,QAAQmD,IAAIyG,IAER5K,OAAOgM,QAAQ,sDAAc,CAAD,oBAC1BpC,EAAW,CAAD,iCAEN8B,EAAqBd,GAAa,yBAClCW,EAAmB3B,GAAW,QACpCH,GAAc,GACdF,GAAY,GAAM,yCAGZiC,EAAqBZ,GAAa,QACxCG,GAAa,GAAM,yBAEfhJ,EAAY,IAAG,yBACfiJ,IAAwB,4CAEjC,kBA9B4B,mCAsC7B,OACE,UAAC,KAAI,YACH,SAACiB,EAAA,EAAU,CAACpC,MAAM,qCAClB,SAAC,KAAI,CAAC9B,GAAI,GAAG,UACX,UAAC,KAAK,CAAClJ,UAAU,OAAM,WACrB,SAAC,KAAW,WACV,SAAC,KAAK,CAACA,UAAU,UAAS,UACxB,SAAC,KAAI,CAACkJ,GAAI,EAAE,UACV,SAAC,KAAO,CAACwC,MAAM,UAAU9K,QApFL,WAChCoL,EAAgBY,GAChB1J,EAAY,IACZ0H,GAAc,GACdF,GAAY,GACZwB,GAAcD,EAChB,EA8E0E,iCAMlE,SAAC,KAAS,WACR,SAACoB,EAAA,EAAY,CACXxB,MAAOA,EACPjL,QAtF0B,SAAAwF,GACpCsG,EAAmBtG,EAAK2E,YACxBH,GAAc,GACdF,GAAY,GACZwB,GAAcD,EAChB,EAkFYqB,QAASC,EAAAA,GACTvN,UAAW,eACXwN,kBAAkB,YAK1B,SAAC,EAAa,CACZpH,KAAM2F,EACNzB,SAAUyC,EACVxC,SAlC0B,WAC1BpJ,OAAOgM,QAAQ,mEACjBL,EAAqBf,EAAahB,YAAY/J,KAAKmL,EAAwBD,GAAa,GAE5F,EA+BMnD,SA1FkC,SAAA0E,GACtC,MAAoBA,EAAEC,OAAf/N,EAAE,EAAFA,GAAIsJ,EAAK,EAALA,MACX+C,GAAgB,kBACXD,GAAY,cACdpM,EAAKsJ,IAEV,EAqFMQ,cAnF8B,SAAA5I,GAClCmL,GAAgB,kBACXD,GAAY,IACfvC,MAAO3I,IAEX,EA+EMuJ,QAAS6B,EACT5B,WAAY6B,EACZjJ,SAAUA,EACVC,YAAaA,EACbsH,UAAWA,EACXC,aAAcA,EACdI,WAAYA,EACZD,cAAeA,EACfD,SAAUA,EACVD,YAAaA,MAIrB,C,8OClSO,IAAMiD,EAAkB,CAC7B,CAACtK,IAAK,SAAUxD,MAAO,KAAM+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,OAC/E,CAACqD,IAAK,OAAQxD,MAAO,eAAMgO,OAAQ,CAAC7N,UAAW,SAC/C,CAACqD,IAAK,QAASxD,MAAO,qBAAOgO,OAAQ,CAAC7N,UAAW,UACjD,CAACqD,IAAK,cAAexD,MAAO,uCAAUgO,OAAQ,CAAC7N,UAAW,gBAC1D,CAACqD,IAAK,YAAaxD,MAAO,iCAAS+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,cACrF,CAACqD,IAAK,SAAUxD,MAAO,eAAM+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,YAIpE8N,EAAwB,CACnC,CAACzK,IAAK,SAAUxD,MAAO,KAAM+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,OAC/E,CAACqD,IAAK,OAAQxD,MAAO,eAAMgO,OAAQ,CAAC7N,UAAW,SAC/C,CAACqD,IAAK,QAASxD,MAAO,qBAAOgO,OAAQ,CAAC7N,UAAW,UACjD,CAACqD,IAAK,cAAexD,MAAO,uCAAUgO,OAAQ,CAAC7N,UAAW,gBAC1D,CAACqD,IAAK,eAAgBxD,MAAO,2BAAQgO,OAAQ,CAAC7N,UAAW,iBACzD,CAACqD,IAAK,YAAaxD,MAAO,iCAAS+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,cACrF,CAACqD,IAAK,YAAaxD,MAAO,iCAAS+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,cACrF,CAACqD,IAAK,SAAUxD,MAAO,eAAM+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,YAIpE+N,EAAqB,CAChC,CAAC1K,IAAK,YAAaxD,MAAO,KAAM+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,OAClF,CAACqD,IAAK,WAAYxD,MAAO,4BAASgO,OAAQ,CAAC7N,UAAW,aACtD,CAACqD,IAAK,OAAQxD,MAAO,eAAMgO,OAAQ,CAAC7N,UAAW,SAC/C,CAACqD,IAAK,cAAexD,MAAO,uCAAUgO,OAAQ,CAAC7N,UAAW,gBAC1D,CAACqD,IAAK,QAASxD,MAAO,eAAM+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,WAInEgO,EAAiB,CAC5B,CAAC3K,IAAK,QAASxD,MAAO,KAAM+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,OAC9E,CAACqD,IAAK,WAAYxD,MAAO,2BAAQgO,OAAQ,CAAC7N,UAAW,aACrD,CAACqD,IAAK,QAASxD,MAAO,eAAMgO,OAAQ,CAAC7N,UAAW,WAIrCuN,EAAsB,CACjC,CAAClK,IAAK,aAAcxD,MAAO,KAAM+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,OACnF,CAACqD,IAAK,WAAYxD,MAAO,2BAAQgO,OAAQ,CAAC7N,UAAW,aACrD,CAACqD,IAAK,QAASxD,MAAO,eAAMgO,OAAQ,CAAC7N,UAAW,UAChD,CAACqD,IAAK,YAAaxD,MAAO,qBAAO+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,eAIxEiO,EAAmB,CAC9B,CAAC5K,IAAK,UAAWxD,MAAO,KAAM+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,OAChF,CAACqD,IAAK,cAAexD,MAAO,2BAAQ+N,QAAQ,EAAOC,OAAQ,CAAC7N,UAAW,gBACvE,CAACqD,IAAK,WAAYxD,MAAO,qBAAOgO,OAAQ,CAAC7N,UAAW,aACpD,CAACqD,IAAK,cAAexD,MAAO,uCAAUgO,OAAQ,CAAC7N,UAAW,gBAC1D,CAACqD,IAAK,WAAYxD,MAAO,2BAAQgO,OAAQ,CAAC7N,UAAW,aACrD,CAACqD,IAAK,aAAcxD,MAAO,2BAAQgO,OAAQ,CAAC7N,UAAW,eACvD,CAACqD,IAAK,YAAaxD,MAAO,qBAAO+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,eAIxEkO,EAAqB,CAChC,CAAC7K,IAAK,WAAYxD,MAAO,qBAAO+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,aAClF,CAACqD,IAAK,iBAAkBuK,QAAQ,EAAOvH,QAAQ,EAAOxG,MAAO,2BAAQgO,OAAQ,CAAC7N,UAAW,mBACzF,CAACqD,IAAK,cAAexD,MAAO,2BAAQ+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,gBACtF,CAACqD,IAAK,gBAAiBuK,QAAQ,EAAOvH,QAAQ,EAAOxG,MAAO,2BAAQgO,OAAQ,CAAC7N,UAAW,mBAI7EmO,EAAoB,CAC/B,CAAC9K,IAAK,WAAYxD,MAAO,KAAM+N,QAAQ,EAAOvH,QAAQ,EAAOwH,OAAQ,CAAC7N,UAAW,OACjF,CAACqD,IAAK,QAASxD,MAAO,qBAAOgO,OAAQ,CAAC7N,UAAW,UACjD,CAACqD,IAAK,QAASxD,MAAO,kCAAUgO,OAAQ,CAAC7N,UAAW,U,8FCnEtD,EADmB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAC,EAAG,SAAY,CAAC,CAAE,IAAO,QAAS,MAAS,CAAC,KAAQ,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,8DAAiE,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gEAAoE,KAAQ,OAAQ,MAAS,Y,WCKpaoO,EAAe,SAAsB5L,EAAOC,GAC9C,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,CAAC,EAAGJ,GAAQ,CAAC,EAAG,CAC5FC,IAAKA,EACLI,KAAMwL,IAEV,EACAD,EAAarL,YAAc,eAC3B,MAA4BL,EAAAA,WAAiB0L,E","sources":["components/forms/downloadForm/MultiFileDownloadForm.js","../node_modules/@ant-design/icons-svg/es/asn/InboxOutlined.js","../node_modules/@ant-design/icons/es/icons/InboxOutlined.js","components/forms/inputForm/ModalFilesInput.js","components/forms/inputForm/ModalImageInput.js","components/forms/inputForm/ModalInput.js","components/forms/inputForm/ModalSelect.js","components/forms/inputForm/ModalSingleImageInput.js","components/forms/inputForm/ModalTextArrayInput.js","utils/categoryOptions/officailMall/categoryOptions.js","components/Modal/officialMall/DataRoomModal.js","pages/officialMall/dataRoom/DataRoomList.js","utils/columns/officialMall/Columns.js","../node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js"],"sourcesContent":["import {CCol, CFormLabel} from '@coreui/react'\nimport styled from 'styled-components'\nimport {antdImageFormat} from '../../../utils/awsCustom'\n\nconst MultiFileDownloadForm = ({id, files, label, isRequired}) => {\n  const downloadFile = (url, fileName) => {\n    url = antdImageFormat(url)\n\n    fetch(url, {method: 'GET'})\n      .then(res => {\n        return res.blob()\n      })\n      .then(blob => {\n        const url = window.URL.createObjectURL(blob)\n        const a = document.createElement('a')\n        a.href = url\n        a.download = fileName\n        document.body.appendChild(a)\n        a.click()\n        setTimeout(_ => {\n          window.URL.revokeObjectURL(url)\n        }, 60000)\n        a.remove()\n      })\n      .catch(err => {\n        console.error('err: ', err)\n      })\n  }\n\n  //onClick={() => downloadFile(file, fileName)}\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol>\n        {files?.length > 0 ? (\n          files.map((file, index) => {\n            const splitUrl = file.split('/') //   \"/\" 로 전체 url 을 나눈다\n            const splitUrlLength = splitUrl.length\n            const fileName = splitUrl[splitUrlLength - 1] // 나누어진 배열의 맨 끝이 파일명이다\n            return (\n              <div key={index} className='col-form-label'>\n                <SpanStyle\n                  role='link'\n                  key={index}\n                  href={antdImageFormat(file)}\n                  onClick={() => downloadFile(file, fileName)}\n                >\n                  {index + 1}. {fileName}\n                </SpanStyle>\n              </div>\n            )\n          })\n        ) : (\n          <div className='col-form-label'>등록된 파일이 없습니다.</div>\n        )}\n      </CCol>\n    </>\n  )\n}\nexport default MultiFileDownloadForm\n\nconst SpanStyle = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  padding: 0 8px;\n  line-height: 1.5714285714285714;\n  flex: auto;\n  transition: all 0.3s;\n  color: #1677ff !important;\n  text-decoration: none;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n`\n","// This icon file is generated automatically.\nvar InboxOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M885.2 446.3l-.2-.8-112.2-285.1c-5-16.1-19.9-27.2-36.8-27.2H281.2c-17 0-32.1 11.3-36.9 27.6L139.4 443l-.3.7-.2.8c-1.3 4.9-1.7 9.9-1 14.8-.1 1.6-.2 3.2-.2 4.8V830a60.9 60.9 0 0060.8 60.8h627.2c33.5 0 60.8-27.3 60.9-60.8V464.1c0-1.3 0-2.6-.1-3.7.4-4.9 0-9.6-1.3-14.1zm-295.8-43l-.3 15.7c-.8 44.9-31.8 75.1-77.1 75.1-22.1 0-41.1-7.1-54.8-20.6S436 441.2 435.6 419l-.3-15.7H229.5L309 210h399.2l81.7 193.3H589.4zm-375 76.8h157.3c24.3 57.1 76 90.8 140.4 90.8 33.7 0 65-9.4 90.3-27.2 22.2-15.6 39.5-37.4 50.7-63.6h156.5V814H214.4V480.1z\" } }] }, \"name\": \"inbox\", \"theme\": \"outlined\" };\nexport default InboxOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport InboxOutlinedSvg from \"@ant-design/icons-svg/es/asn/InboxOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar InboxOutlined = function InboxOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: InboxOutlinedSvg\n  }));\n};\nInboxOutlined.displayName = 'InboxOutlined';\nexport default /*#__PURE__*/React.forwardRef(InboxOutlined);","import {InboxOutlined} from '@ant-design/icons'\nimport {Upload} from 'antd'\nimport styled from 'styled-components'\nimport {CFormLabel} from '@coreui/react'\nimport AWS from 'aws-sdk'\nimport {useEffect} from 'react'\nimport {antdImageFormat, returnBucketNameFile} from '../../../utils/awsCustom'\nimport MultiFileDownloadForm from '../downloadForm/MultiFileDownloadForm'\n\nconst ModalFilesInput = ({files, label, id, disabled, fileList, setFileList, filePath, isRequired}) => {\n  // files = 조회를 통해 가져온 데이터가 있는 경우\n  useEffect(() => {\n    if (files && files.length > 0) {\n      setFileList(\n        files.map((file, index) => ({\n          key: index,\n          uid: index,\n          name: file.fileTitle ? file.fileTitle : decodeURI(file.split('/')[file.split('/').length - 1]),\n          status: 'done',\n          url: file.file ? antdImageFormat(file.file) : antdImageFormat(file),\n        })),\n      )\n    }\n  }, [files])\n\n  const getFileNameFromURL = url => {\n    //   \"/\" 로 전체 url 을 나눈다\n    const splitUrl = url.split('/')\n    const splitUrlLength = splitUrl.length\n    // 나누어진 배열의 맨 끝이 파일명이다\n    const fileName = splitUrl[splitUrlLength - 1]\n    return fileName\n  }\n\n  const onSuccess = successData => {\n    const httpRequest = successData.request.httpRequest\n    const file = httpRequest.body\n    const {protocol, host} = httpRequest.endpoint\n\n    const fileData = {\n      uid: successData.request.params.Key,\n      name: file.name,\n      status: 'done',\n      url: `${protocol}//${host}${httpRequest.path}`,\n    }\n    setFileList([...fileList, fileData])\n  }\n\n  // 파일 업로드\n  const customReq = ({file, onError, onProgress, onSuccess}) => {\n    AWS.config.update({\n      region: process.env.REACT_APP_AWS_REGION,\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n    })\n\n    const S3 = new AWS.S3()\n    const fileName = file.name.replaceAll(' ', '')\n    const objParams = {\n      Bucket: returnBucketNameFile(filePath),\n      Key: fileName,\n      Body: file,\n      ContentType: file.type, // TODO: You should set content-type because AWS SDK will not automatically set file MIME\n    }\n\n    const upload = S3.putObject(objParams)\n      .on('httpUploadProgress', ({loaded, total}) => onProgress({percent: (loaded / total) * 100}))\n      .promise()\n    upload.then(\n      function (data) {\n        onSuccess(data.$response)\n      },\n      function (error) {\n        onError()\n        console.log(error.code)\n        console.log(error.message)\n      },\n    )\n  }\n\n  // 파일 삭제\n  const onDelete = item => {\n    setFileList(fileList.filter(file => file.uid !== item.uid))\n  }\n\n  const props = {\n    name: 'file',\n    multiple: true,\n    disabled: disabled,\n    fileList: fileList,\n    customRequest(data) {\n      customReq(data)\n    },\n    onSuccess(data) {\n      onSuccess(data)\n    },\n    onRemove(data) {\n      onDelete(data)\n    },\n  }\n\n  return (\n    <>\n      <DivBox className={disabled}>\n        <CFormLabel className={isRequired ? 'required' : ''}>{label || ''}</CFormLabel>\n        <Upload.Dragger {...props} id={id}>\n          <p className='ant-upload-drag-icon'>\n            <InboxOutlined />\n          </p>\n          <p className='ant-upload-text'>업로드하려면 이 영역으로 파일을 클릭하거나 드래그하세요.</p>\n        </Upload.Dragger>\n      </DivBox>\n    </>\n  )\n}\n\nexport default ModalFilesInput\n\nconst DivBox = styled.div`\n  border-radius: 0.375rem;\n  &.disabled {\n    background: #d8dbe0;\n  }\n  & .ant-upload-disabled {\n    background: #d8dbe0;\n    border: 0.5px dashed #b1b7c1;\n    opacity: 1;\n  }\n  & > span {\n    display: flex;\n    flex-direction: column;\n  }\n`\n","import {PlusOutlined} from '@ant-design/icons'\nimport {Upload} from 'antd'\nimport {useEffect, useState} from 'react'\nimport {CCol, CFormLabel, CImage} from '@coreui/react'\nimport styled from 'styled-components'\nimport AWS from 'aws-sdk'\nimport {antdImageFormat, returnBucketName} from '../../../utils/awsCustom'\n\nconst getBase64 = file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = error => reject(error)\n  })\n\nconst ModalImageInput = ({images, id, label, fileList, setFileList, imgPath, readOnly, oneSheet = false}) => {\n  const [previewOpen, setPreviewOpen] = useState(false)\n  const [previewImage, setPreviewImage] = useState('')\n  const [previewTitle, setPreviewTitle] = useState('')\n\n  useEffect(() => {\n    if (images && images.length > 0) {\n      setFileList(\n        images.map(path => ({\n          uid: path,\n          name: decodeURI(path.split('/')[path.split('/').length - 1]),\n          status: 'done',\n          url: antdImageFormat(path),\n        })),\n      )\n    }\n  }, [images, setFileList])\n\n  const handleCloseImage = () => {\n    setPreviewImage('')\n  }\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj)\n    }\n\n    setPreviewImage(file.url || file.preview)\n    setPreviewOpen(true)\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\n  }\n\n  const onSuccess = successData => {\n    const httpRequest = successData.request.httpRequest\n    const file = httpRequest.body\n    const {protocol, host} = httpRequest.endpoint\n\n    const fileData = {\n      uid: successData.request.params.Key,\n      name: file.name,\n      status: 'done',\n      url: `${protocol}//${host}${httpRequest.path}`,\n    }\n\n    setFileList([...fileList, fileData])\n  }\n\n  const customReq = ({file, onError, onProgress, onSuccess}) => {\n    if (oneSheet && fileList.length === 1) {\n      alert('이미지는 한장만 등록 가능합니다!')\n      return\n    }\n    AWS.config.update({\n      region: process.env.REACT_APP_AWS_REGION,\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n    })\n\n    const S3 = new AWS.S3()\n    const fileName = file.name.replaceAll(' ', '')\n\n    const objParams = {\n      Bucket: returnBucketName(imgPath),\n      Key: fileName,\n      Body: file,\n      ContentType: file.type, // TODO: You should set content-type because AWS SDK will not automatically set file MIME\n    }\n\n    const upload = S3.putObject(objParams)\n      .on('httpUploadProgress', ({loaded, total}) => onProgress({percent: (loaded / total) * 100}))\n      .promise()\n    upload.then(\n      function (data) {\n        onSuccess(data.$response)\n      },\n      function (error) {\n        onError()\n        console.log(error.code)\n        console.log(error.message)\n      },\n    )\n  }\n\n  const onDelete = item => {\n    setFileList(fileList.filter(file => file.uid !== item.uid))\n  }\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{marginTop: 8}}>Upload</div>\n    </div>\n  )\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span>{label || ' * '}</span>\n      </CFormLabel>\n      <Upload\n        listType='picture-card'\n        fileList={fileList}\n        onPreview={handlePreview}\n        onSuccess={data => onSuccess(data)}\n        onRemove={data => onDelete(data)}\n        customRequest={reqData => customReq(reqData)}\n        disabled={readOnly}\n      >\n        {fileList?.length >= 8 ? null : uploadButton}\n      </Upload>\n\n      {previewImage && (\n        <CCol>\n          <CFormLabel className='col-form-label'>\n            <span>{previewTitle || ''}</span>\n          </CFormLabel>\n          <PreviewImageBox className={'text-center p-2'}>\n            <CImage\n              rounded\n              alt='example'\n              onClick={() => handleCloseImage()}\n              src={previewImage}\n              width={300}\n              height={300}\n            />\n          </PreviewImageBox>\n        </CCol>\n      )}\n    </>\n  )\n}\n\nexport default ModalImageInput\n\nconst PreviewImageBox = styled(CCol)`\n  padding: 0.5rem 0;\n  background: #fafafa;\n  border: 1px dashed #d9d9d9;\n  border-radius: 2px;\n  & img {\n    cursor: pointer;\n  }\n`\n","import {CCol, CFormInput, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\nconst ModalInput = ({type, onChange, id, placeholder, value, label, readOnly, disabled, isRequired, xs}) => {\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' xs={xs} style={{display: 'flex'}}>\n        <CFormInput\n          type={type || 'text'}\n          id={id}\n          placeholder={placeholder || ''}\n          value={type === 'file' ? undefined : value || ''}\n          onChange={onChange}\n          readOnly={readOnly}\n          disabled={disabled}\n        />\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalInput\n","import {CCol, CFormSelect, CFormLabel} from '@coreui/react'\nimport * as PorpTypes from 'prop-types'\n\nconst ModalSelect = ({\n  onChange,\n  size,\n  placeholder,\n  label,\n  value,\n  readOnly,\n  id,\n  xs,\n  disabled = false,\n  isRequired,\n  options,\n}) => {\n  const newOptions = options.map(item => (\n    <option key={item.key} value={item.key}>\n      {item.value}\n    </option>\n  ))\n\n  return (\n    <>\n      <CFormLabel htmlFor='staticEmail' className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol xs={xs}>\n        <CFormSelect value={value} disabled={disabled} id={id} size={size} onChange={onChange} readOnly={readOnly}>\n          <option>{placeholder}</option>\n          {newOptions}\n        </CFormSelect>\n      </CCol>\n    </>\n  )\n}\n\nModalSelect.propTypes = {\n  onChange: PorpTypes.func,\n  size: PorpTypes.string,\n  placeholder: PorpTypes.string,\n  label: PorpTypes.string,\n  value: PorpTypes.any,\n  readOnly: PorpTypes.bool,\n  id: PorpTypes.string,\n  disabled: PorpTypes.bool,\n  isRequired: PorpTypes.bool,\n  options: PorpTypes.any,\n}\n\nexport default ModalSelect\n","import {message, Upload} from 'antd'\nimport AWS from 'aws-sdk'\nimport {LoadingOutlined, PlusOutlined} from '@ant-design/icons'\nimport {returnBucketNameFile} from '../../../utils/awsCustom'\nimport {useState} from 'react'\nimport {CCol, CFormLabel} from '@coreui/react'\n\nconst ModalSingleImageInput = ({image, onChangeImage, label, id, disabled, filePath, isRequired}) => {\n  const [loading, setLoading] = useState(false)\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n    if (!isJpgOrPng) {\n      window.alert('옳바른 확장자가 아닙니다 (JPG/PNG)')\n    }\n    const isLt10M = file.size / 1024 / 1024 < 10\n    if (!isLt10M) {\n      message.error('사이즈 용량 초과 (10MB)')\n    }\n    return isJpgOrPng && isLt10M\n  }\n\n  const onSuccess = successData => {\n    const httpRequest = successData.request.httpRequest\n    const file = httpRequest.body\n    const {protocol, host} = httpRequest.endpoint\n\n    const fileData = {\n      uid: successData.request.params.Key,\n      name: file.name,\n      status: 'done',\n      url: `${protocol}//${host}${httpRequest.path}`,\n    }\n    onChangeImage(fileData.url)\n  }\n\n  // 파일 업로드\n  const customReq = ({file, onError, onProgress, onSuccess}) => {\n    AWS.config.update({\n      region: process.env.REACT_APP_AWS_REGION,\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n    })\n\n    const S3 = new AWS.S3()\n    const fileName = file.name.replaceAll(' ', '')\n    const objParams = {\n      Bucket: returnBucketNameFile(filePath),\n      Key: fileName,\n      Body: file,\n      ContentType: file.type, // TODO: You should set content-type because AWS SDK will not automatically set file MIME\n    }\n\n    const upload = S3.putObject(objParams)\n      .on('httpUploadProgress', ({loaded, total}) => onProgress({percent: (loaded / total) * 100}))\n      .promise()\n    upload.then(\n      function (data) {\n        onSuccess(data.$response)\n      },\n      function (error) {\n        onError()\n        console.log(error.code)\n        console.log(error.message)\n      },\n    )\n  }\n\n  // 파일 삭제\n  const onDelete = () => {\n    onChangeImage('')\n  }\n\n  // 업로드 버튼\n  const uploadButton = (\n    <div\n      style={{\n        border: '1px solid #d8dbe0',\n        textAlign: 'center',\n        width: 30,\n      }}\n    >\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div\n        style={{\n          marginTop: 8,\n        }}\n      ></div>\n    </div>\n  )\n\n  const props = {\n    name: 'avatar',\n    listType: 'picture',\n    className: 'avatar-uploader',\n    showUploadList: false,\n    disabled: disabled,\n    image: image,\n    beforeUpload: beforeUpload,\n    customRequest(data) {\n      customReq(data)\n    },\n    onSuccess(data) {\n      onSuccess(data)\n    },\n    onRemove(data) {\n      onDelete(data)\n    },\n  }\n\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' style={{display: 'flex'}}>\n        <Upload {...props}>\n          {image ? (\n            <img\n              src={image}\n              alt='avatar'\n              style={{\n                width: '100%',\n              }}\n            />\n          ) : (\n            uploadButton\n          )}\n        </Upload>\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalSingleImageInput\n","import {CCol, CFormTextarea} from '@coreui/react'\nimport React from 'react'\n\nconst ModalTextArrayInput = ({id, value, rows, label, onChange, text, readOnly, disabled}) => {\n  return (\n    <CCol>\n      <CFormTextarea\n        id={id || ''}\n        label={label || ''}\n        rows={rows || 10}\n        value={value || ''}\n        onChange={onChange}\n        text={text || ''}\n        readOnly={readOnly}\n        disabled={disabled}\n      />\n    </CCol>\n  )\n}\n\nexport default ModalTextArrayInput\n","// 자료실 카테고리 옵션\nexport const dataRoomCategoryOptions = [\n  {\n    key: '드라이버',\n    value: '드라이버',\n  },\n  {\n    key: '프로그램',\n    value: '프로그램',\n  },\n  {\n    key: '매뉴얼',\n    value: '매뉴얼',\n  },\n  {\n    key: '펌웨어',\n    value: '펌웨어',\n  },\n  {\n    key: '기술자료',\n    value: '기술자료',\n  },\n  {\n    key: '기타',\n    value: '기타',\n  },\n]\n","import {useEffect} from 'react'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport ModalTextArrayInput from '../../forms/inputForm/ModalTextArrayInput'\nimport ModalFilesInput from '../../forms/inputForm/ModalFilesInput'\nimport ModalSelect from '../../forms/inputForm/ModalSelect'\nimport {CButton, CForm, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow} from '@coreui/react'\nimport {dataRoomCategoryOptions} from '../../../utils/categoryOptions/officailMall/categoryOptions'\nimport ModalSingleImageInput from '../../forms/inputForm/ModalSingleImageInput'\nimport ModalImageInput from '../../forms/inputForm/ModalImageInput'\n\nconst DataRoomModal = ({\n  onChange,\n  onChangeImage,\n  item,\n  visible,\n  setVisible,\n  onUpdate,\n  onDelete,\n  fileList,\n  setFileList,\n  imageList,\n  setImageList,\n  setIsUpdate,\n  isUpdate,\n  setIsReadOnly,\n  isReadOnly,\n}) => {\n  // Local state 선언\n  const {category, dataRoomId, title, content, image, files, createdAt} = item\n\n  // modal Title 세팅\n  let modalTitle = '자료 추가'\n  if (isUpdate) modalTitle = '자료 수정'\n  if (isReadOnly) modalTitle = '자료 상세 내용'\n\n  useEffect(() => {\n    if (visible) {\n    }\n  }, [visible])\n\n  // 수정 버튼 클릭 함수\n  const clickUpdateBtn = () => {\n    setIsReadOnly(false)\n    setIsUpdate(true)\n  }\n\n  return (\n    <CModal size='lg' visible={visible} onClose={() => setVisible(false)}>\n      <CModalHeader>\n        <CModalTitle>{modalTitle}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <CRow className={'p-2'}>\n            {(isReadOnly || isUpdate) && (\n              <ModalInput\n                id={'no'}\n                placeholder={'No'}\n                label={'No'}\n                value={dataRoomId}\n                onChange={onChange}\n                readOnly\n                disabled\n              />\n            )}\n            <ModalSelect\n              options={dataRoomCategoryOptions}\n              onChange={onChange}\n              size='sm'\n              id='category'\n              value={category}\n              isRequired={true}\n              placeholder='선택해주세요'\n              label='카테고리'\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <CRow className={'p-2'}>\n            <ModalInput\n              id={'title'}\n              placeholder={'제목'}\n              label={'제목'}\n              value={title}\n              onChange={onChange}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n              isRequired\n            />\n          </CRow>\n          <CRow className={'p-2'}>\n            <ModalImageInput\n              id='image'\n              label='이미지 첨부'\n              fileList={imageList}\n              setFileList={setImageList}\n              images={image}\n              imgPath='mall/dataRroom_images'\n              readOnly={isReadOnly}\n            />\n          </CRow>{' '}\n          <CRow className={'p-2'}>\n            <ModalTextArrayInput\n              id='content'\n              label={'본문'}\n              value={content}\n              onChange={onChange}\n              rows={9}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <CRow className={'p-2'}>\n            <ModalFilesInput\n              id={'fileList'}\n              fileList={fileList}\n              setFileList={setFileList}\n              files={files}\n              label={'첨부파일'}\n              filePath={'mall/dataroom_files'}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n              isRequired\n            />\n          </CRow>\n          <br />\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        {!isReadOnly && !isUpdate && (\n          <CButton onClick={onUpdate} color='primary'>\n            추가\n          </CButton>\n        )}\n        {isUpdate && (\n          <CButton onClick={onUpdate} color='primary'>\n            저장\n          </CButton>\n        )}\n        {isReadOnly && (\n          <>\n            <CButton color={isReadOnly ? 'primary' : 'success'} onClick={clickUpdateBtn}>\n              수정\n            </CButton>\n            <CButton onClick={onDelete} color='danger'>\n              삭제\n            </CButton>\n          </>\n        )}\n        <CButton color='secondary' onClick={() => setVisible(false)}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default DataRoomModal\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {dataRoomListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport {useNavigate} from 'react-router-dom'\nimport * as _ from 'lodash'\nimport DataRoomModal from '../../../components/Modal/officialMall/DataRoomModal'\nimport {sendImageUrlFormat} from '../../../utils/awsCustom'\n\nconst DataRoomList = () => {\n  const navigate = useNavigate()\n  const [isReadOnly, setIsReadOnly] = useState(false)\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n  const [fileList, setFileList] = useState([])\n  const [imageList, setImageList] = useState([])\n\n  // API 통신\n\n  // 자료실 리스트 조회\n  const onLoadMallDataRoomList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_DATAROOMS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n      } else {\n        setItems(res.result.dataRoomInfos)\n      }\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 자료 상세 조회\n  const onLoadMallDataRoom = async dataRoomId => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_DATAROOM,\n        path: {dataRoomId},\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n\n      res.result.dataRoomId = dataRoomId\n      setSelectedItem(res.result)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 자료 추가\n  const onCreateMallDataRoom = async item => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.POST,\n        url: EndPoint.POST_MALL_DATAROOM,\n        data: {\n          category: item.category,\n          title: item.title,\n          content: item.content,\n          images: item.image,\n          files: item.files,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      alert(res?.message)\n      setSelectedItem(setInitItem)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 자료 수정\n  const onUpdateMallDataRoom = async item => {\n    console.log(item)\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_UPDATE_DATAROOM,\n        data: {\n          dataRoomId: item.dataRoomId,\n          category: item.category,\n          title: item.title,\n          content: item.content,\n          image: item.image,\n          files: item.files,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      alert(res?.message)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 자료 삭제\n  const onDeleteMallDataRoom = async dataRoomId => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_DELETE_DATAROOM,\n        path: {dataRoomId},\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n      }\n      alert(res?.message)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  useEffect(() => {\n    onLoadMallDataRoomList()\n  }, [])\n\n  const setInitItem = () => {\n    return {\n      title: '',\n      content: '',\n      category: '',\n      content: '',\n      image: '',\n      files: [],\n    }\n  }\n\n  // 자료 추가 Modal Open 함수\n  const handleShowFaqItemAddModal = () => {\n    setSelectedItem(setInitItem)\n    setFileList([])\n    setIsReadOnly(false)\n    setIsUpdate(false)\n    setShowModal(!showModal)\n  }\n  const handleShowDataRoomDetailModal = item => {\n    onLoadMallDataRoom(item.dataRoomId)\n    setIsReadOnly(true)\n    setIsUpdate(false)\n    setShowModal(!showModal)\n  }\n\n  /** Add dataroom Modal*/\n  const handleDataRoomItemModalOnChange = e => {\n    const {id, value} = e.target\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n\n  const handleDataRoomImageOnChange = url => {\n    setSelectedItem({\n      ...selectedItem,\n      image: url,\n    })\n  }\n\n  // 객체 to key value\n  const handleMultiFileUrl = array => {\n    const tempFiles = array.reduce((accumulator, value) => {\n      return {...accumulator, [value.name]: value.url}\n    }, {})\n    return tempFiles\n  }\n\n  const handleDetailModalUpdate = async () => {\n    const {dataRoomId, title, content, category} = selectedItem\n\n    // validation\n    if (!title) return alert('제목을 입력해주세요')\n    if (!category) return alert('카테고리를 선택해주세요')\n    if (!content) return alert('본문을 입력해주세요')\n    if (!imageList) return alert('이미지를 등록해주세요')\n    if (!fileList) return alert('자료를 등록해주세요')\n\n    selectedItem.files = handleMultiFileUrl(fileList)\n    selectedItem.image = sendImageUrlFormat(imageList)\n\n    console.log(selectedItem)\n\n    if (window.confirm('저장 하시겠습니까?')) {\n      if (dataRoomId) {\n        // update\n        await onUpdateMallDataRoom(selectedItem)\n        await onLoadMallDataRoom(dataRoomId)\n        setIsReadOnly(true)\n        setIsUpdate(false)\n      } else {\n        // create\n        await onCreateMallDataRoom(selectedItem)\n        setShowModal(false)\n      }\n      await setFileList([])\n      await onLoadMallDataRoomList()\n    }\n  }\n\n  const handleDetailModalDelete = () => {\n    if (window.confirm('정말 삭제하시겠습니까?')) {\n      onDeleteMallDataRoom(selectedItem.dataRoomId).then(onLoadMallDataRoomList, setShowModal(false))\n    }\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='자료실 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardHeader>\n            <CForm className='row g-3'>\n              <CCol xs={1}>\n                <CButton color='primary' onClick={handleShowFaqItemAddModal}>\n                  추가\n                </CButton>\n              </CCol>\n            </CForm>\n          </CCardHeader>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowDataRoomDetailModal}\n              columns={dataRoomListColumns}\n              className={'dataRoomList'}\n              datePickerHidden={false}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <DataRoomModal\n        item={selectedItem}\n        onUpdate={handleDetailModalUpdate}\n        onDelete={handleDetailModalDelete}\n        onChange={handleDataRoomItemModalOnChange}\n        onChangeImage={handleDataRoomImageOnChange}\n        visible={showModal}\n        setVisible={setShowModal}\n        fileList={fileList}\n        setFileList={setFileList}\n        imageList={imageList}\n        setImageList={setImageList}\n        isReadOnly={isReadOnly}\n        setIsReadOnly={setIsReadOnly}\n        isUpdate={isUpdate}\n        setIsUpdate={setIsUpdate}\n      />\n    </CRow>\n  )\n}\n\nexport default DataRoomList\n","// 회원 리스트\nexport const userListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 탈퇴회원 리스트\nexport const resignUserListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'resignReason', label: '탈퇴사유', _props: {className: 'resignReason'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'updatedAt', label: '계정탈퇴일', sorter: false, filter: false, _props: {className: 'updatedAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 1:1 문의 리스트\nexport const inquiryListColumns = [\n  {key: 'inquiryId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '문의 유형', _props: {className: 'category'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'reply', label: '답변', sorter: false, filter: false, _props: {className: 'reply'}},\n]\n\n// FAQ 리스트\nexport const faqListColumns = [\n  {key: 'faqId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '카테고리', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n]\n\n// 자료실 리스트\nexport const dataRoomListColumns = [\n  {key: 'dataRoomId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '카테고리', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'createdAt', label: '작성일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n\n// 주문 현황 관리\nexport const orderListColumns = [\n  {key: 'orderId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'orderNumber', label: '주문번호', sorter: false, _props: {className: 'orderNumber'}},\n  {key: 'receiver', label: '수취인', _props: {className: 'receiver'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'category', label: '주문상태', _props: {className: 'category'}},\n  {key: 'totalPrice', label: '주문총액', _props: {className: 'totalPrice'}},\n  {key: 'createdAt', label: '주문일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n\n// 제품 관리\nexport const productListColumns = [\n  {key: 'itemName', label: '제품명', sorter: false, filter: false, _props: {className: 'itemName'}},\n  {key: 'orderItemPrice', sorter: false, filter: false, label: '제품가격', _props: {className: 'orderItemPrice'}},\n  {key: 'orderStatus', label: '제품상태', sorter: false, filter: false, _props: {className: 'orderStatus'}},\n  {key: 'invoiceNumber', sorter: false, filter: false, label: '송장번호', _props: {className: 'invoiceNumber'}},\n]\n\n// 배너 관리\nexport const bannerListColumns = [\n  {key: 'bannerId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'image', label: '이미지', _props: {className: 'image'}},\n  {key: 'title', label: '배너 타이틀', _props: {className: 'title'}},\n]\n","// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);"],"names":["id","files","label","isRequired","htmlFor","className","length","map","file","index","splitUrl","split","fileName","SpanStyle","role","href","antdImageFormat","onClick","url","fetch","method","then","res","blob","window","URL","createObjectURL","a","document","createElement","download","body","appendChild","click","setTimeout","_","revokeObjectURL","remove","catch","err","console","error","downloadFile","styled","InboxOutlined","props","ref","React","AntdIcon","_objectSpread","icon","InboxOutlinedSvg","displayName","disabled","fileList","setFileList","filePath","useEffect","key","uid","name","fileTitle","decodeURI","status","multiple","customRequest","data","onError","onProgress","onSuccess","AWS","region","process","accessKeyId","secretAccessKey","S3","replaceAll","objParams","Bucket","returnBucketNameFile","Key","Body","ContentType","type","putObject","on","loaded","total","percent","promise","$response","log","code","message","customReq","successData","httpRequest","request","endpoint","protocol","host","fileData","params","path","onRemove","item","filter","DivBox","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","images","imgPath","readOnly","oneSheet","useState","setPreviewOpen","previewImage","setPreviewImage","previewTitle","setPreviewTitle","handlePreview","preview","originFileObj","substring","lastIndexOf","uploadButton","style","marginTop","listType","onPreview","reqData","alert","returnBucketName","PreviewImageBox","rounded","alt","src","width","height","CCol","onChange","placeholder","value","xs","display","undefined","size","newOptions","options","image","onChangeImage","loading","border","textAlign","showUploadList","beforeUpload","isJpgOrPng","isLt10M","rows","text","dataRoomCategoryOptions","visible","setVisible","onUpdate","onDelete","imageList","setImageList","setIsUpdate","isUpdate","setIsReadOnly","isReadOnly","category","dataRoomId","title","content","modalTitle","createdAt","onClose","ModalInput","ModalSelect","ModalImageInput","ModalTextArrayInput","ModalFilesInput","color","navigate","useNavigate","items","setItems","selectedItem","setSelectedItem","showModal","setShowModal","onLoadMallDataRoomList","ApiConfig","HttpMethod","EndPoint","isSuccess","isEmpty","dataRoomInfos","onLoadMallDataRoom","onCreateMallDataRoom","setInitItem","onUpdateMallDataRoom","onDeleteMallDataRoom","handleDetailModalUpdate","reduce","accumulator","sendImageUrlFormat","confirm","PageHeader","ListTemplate","columns","dataRoomListColumns","datePickerHidden","e","target","userListColumns","sorter","_props","resignUserListColumns","inquiryListColumns","faqListColumns","orderListColumns","productListColumns","bannerListColumns","PlusOutlined","PlusOutlinedSvg"],"sourceRoot":""}