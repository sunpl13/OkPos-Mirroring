{"version":3,"file":"static/js/9191.aa877904.chunk.js","mappings":"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","sources":["components/Modal/officialMall/UserModal.js","pages/officialMall/users/UserList.js"],"sourcesContent":["import {CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow} from '@coreui/react'\nimport {useNavigate} from 'react-router-dom'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport {useEffect, useState} from 'react'\nimport ModalStatus from '../../forms/ModalStatus'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport BasicFileDownloadForm from '../../forms/downloadForm/BasicFileDownloadForm'\nimport {isEmpty} from '../../../utils/utility'\n\nconst UserDetailModal = ({value, visible, setVisible, onChange}) => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [user, setUser] = useState({\n    userId: 0,\n    name: '',\n    email: '',\n    createdAt: '',\n    status: '',\n    phoneNumber: '',\n    businessName: '',\n    businessRegistration: '',\n    businessNumber: '',\n    businessAddress: '',\n  })\n\n  // API 통신 함수\n  const onloadMallUser = async value => {\n    const {userId} = value\n    try {\n      const data = await ApiConfig.request({\n        data: {},\n        query: {},\n        path: {userId},\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_USER,\n      })\n      if (!data?.data?.isSuccess || isEmpty(data?.data?.result)) {\n        console.log('onloadMallUser error')\n        if (data?.data?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(data?.data?.message)\n        }\n        return\n      }\n      setUser(data.data.result)\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    if (visible) {\n      onloadMallUser(value)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible])\n\n  const closeModal = () => {\n    setVisible(false)\n  }\n  return (\n    <CModal size='lg' visible={visible} onClose={closeModal}>\n      <CModalHeader>\n        <CModalTitle>회원 상세정보</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'id'}\n            placeholder={'User Id'}\n            label={'No'}\n            value={value.no}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'userName'}\n            placeholder={''}\n            label={'이름'}\n            value={user.name}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'email'}\n            placeholder={'이메일'}\n            label={'이메일'}\n            value={user.email}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'createdAt'}\n            placeholder={'최초등록일'}\n            label={'최초등록일'}\n            value={user.createdAt}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'phoneNumber'}\n            placeholder={'휴대전화번호'}\n            label={'휴대전화번호'}\n            value={user.phoneNumber}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n          <ModalInput\n            id={'businessName'}\n            placeholder={'상호명'}\n            label={'상호명'}\n            value={user.businessName}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessNumber'}\n            placeholder={'사업자등록번호'}\n            label={'사업자등록번호'}\n            value={user.businessNumber}\n            onChange={onChange}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalInput\n            id={'businessAddress'}\n            placeholder={'사업장주소'}\n            label={'사업장주소'}\n            value={user.businessAddress}\n            readOnly\n            disabled\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <BasicFileDownloadForm\n            id={'businessRegistration'}\n            placeholder={'사업자등록증'}\n            label={'사업자등록증'}\n            value={user.businessRegistration || ''}\n          />\n        </CRow>\n        <CRow className={'p-2'}>\n          <ModalStatus id={'userStatus'} placeholder={'상태'} label={'상태'} value={user.status} />\n        </CRow>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={closeModal}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default UserDetailModal\n","import React, {useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport UserModal from '../../../components/Modal/officialMall/UserModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {userListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\n\nconst UserList = () => {\n  // 모듈 선언\n  const navigate = useNavigate()\n\n  // Local state 선언\n  const [userList, setUserList] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n\n  // API 통신 함수\n  const onLoadMallUserList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_USERS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        console.log('loadMallUserList error')\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n\n      setUserList(\n        res.result.userInfos.map((item, index) => {\n          return {...item, no: res.result.userInfos.length - index}\n        }),\n      )\n    } catch (error) {\n      console.log(error)\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // Life Cycle 선언\n  useEffect(() => {\n    onLoadMallUserList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // 함수 선언\n\n  // Open Modal\n  const handleShowUserDetailModal = item => {\n    setSelectedItem(item)\n    setShowModal(!showModal)\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='회원 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={userList}\n              onClick={handleShowUserDetailModal}\n              columns={userListColumns}\n              className={'userList'}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <UserModal value={selectedItem} visible={showModal} setVisible={setShowModal} readOnly />\n    </CRow>\n  )\n}\n\nexport default UserList\n"],"names":["_ref","value","visible","setVisible","onChange","navigate","useNavigate","user","setUser","useState","userId","name","email","createdAt","status","phoneNumber","businessName","businessRegistration","businessNumber","businessAddress","useEffect","async","_data$data","_data$data2","data","ApiConfig","request","query","path","method","HttpMethod","GET","url","EndPoint","GET_MALL_USER","_data$data3","_data$data4","isSuccess","isEmpty","result","console","log","code","alert","message","error","onloadMallUser","closeModal","_jsxs","CModal","size","onClose","children","_jsx","CModalHeader","CModalTitle","CModalBody","CRow","className","ModalInput","id","placeholder","label","no","readOnly","disabled","BasicFileDownloadForm","ModalStatus","CModalFooter","CButton","color","onClick","UserList","userList","setUserList","selectedItem","setSelectedItem","showModal","setShowModal","res","GET_MALL_USERS","userInfos","map","item","index","length","onLoadMallUserList","PageHeader","title","CCol","xs","CCard","CCardBody","ListTemplate","items","columns","userListColumns","UserModal"],"sourceRoot":""}