{"version":3,"file":"static/js/3907.df53c169.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/InboxOutlined.js","../node_modules/@ant-design/icons/es/icons/InboxOutlined.js","components/forms/inputForm/ModalFilesInput.js","components/forms/inputForm/ModalImageInput.js","components/forms/inputForm/ModalInput.js","components/forms/inputForm/ModalSelect.js","components/forms/inputForm/ModalTextArrayInput.js","components/forms/inputForm/ModalTextOnlyQuillEditor.js","utils/categoryOptions/officailMall/categoryOptions.js","components/Modal/officialMall/DataRoomModal.js","pages/officialMall/dataRoom/DataRoomList.js","utils/columns/officialMall/Columns.js","../node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js"],"sourcesContent":["// This icon file is generated automatically.\nvar InboxOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M885.2 446.3l-.2-.8-112.2-285.1c-5-16.1-19.9-27.2-36.8-27.2H281.2c-17 0-32.1 11.3-36.9 27.6L139.4 443l-.3.7-.2.8c-1.3 4.9-1.7 9.9-1 14.8-.1 1.6-.2 3.2-.2 4.8V830a60.9 60.9 0 0060.8 60.8h627.2c33.5 0 60.8-27.3 60.9-60.8V464.1c0-1.3 0-2.6-.1-3.7.4-4.9 0-9.6-1.3-14.1zm-295.8-43l-.3 15.7c-.8 44.9-31.8 75.1-77.1 75.1-22.1 0-41.1-7.1-54.8-20.6S436 441.2 435.6 419l-.3-15.7H229.5L309 210h399.2l81.7 193.3H589.4zm-375 76.8h157.3c24.3 57.1 76 90.8 140.4 90.8 33.7 0 65-9.4 90.3-27.2 22.2-15.6 39.5-37.4 50.7-63.6h156.5V814H214.4V480.1z\" } }] }, \"name\": \"inbox\", \"theme\": \"outlined\" };\nexport default InboxOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport InboxOutlinedSvg from \"@ant-design/icons-svg/es/asn/InboxOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar InboxOutlined = function InboxOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: InboxOutlinedSvg\n  }));\n};\nInboxOutlined.displayName = 'InboxOutlined';\nexport default /*#__PURE__*/React.forwardRef(InboxOutlined);","import {InboxOutlined} from '@ant-design/icons'\nimport {Upload} from 'antd'\nimport styled from 'styled-components'\nimport {CFormLabel} from '@coreui/react'\nimport AWS from 'aws-sdk'\nimport {useEffect} from 'react'\nimport {antdImageFormat, returnBucketNameFile} from '../../../utils/awsCustom'\n\nconst ModalFilesInput = ({files, label, id, disabled, fileList, setFileList, filePath, isRequired}) => {\n  // files = 조회를 통해 가져온 데이터가 있는 경우\n  useEffect(() => {\n    if (files && files.length > 0) {\n      setFileList(\n        files.map((file, index) => ({\n          key: index,\n          uid: index,\n          name: file.fileTitle ? file.fileTitle : decodeURI(file.split('/')[file.split('/').length - 1]),\n          status: 'done',\n          url: file.file ? file.file : antdImageFormat(file),\n        })),\n      )\n    }\n  }, [files])\n\n  const getFileNameFromURL = url => {\n    //   \"/\" 로 전체 url 을 나눈다\n    const splitUrl = url.split('/')\n    const splitUrlLength = splitUrl.length\n    // 나누어진 배열의 맨 끝이 파일명이다\n    const fileName = splitUrl[splitUrlLength - 1]\n    return fileName\n  }\n\n  const onSuccess = successData => {\n    const httpRequest = successData.request.httpRequest\n    const file = httpRequest.body\n    const {protocol, host} = httpRequest.endpoint\n\n    const fileData = {\n      uid: successData.request.params.Key,\n      name: file.name,\n      status: 'done',\n      url: `${protocol}//${host}${httpRequest.path}`,\n    }\n    setFileList([...fileList, fileData])\n  }\n\n  // 파일 업로드\n  const customReq = ({file, onError, onProgress, onSuccess}) => {\n    AWS.config.update({\n      region: process.env.REACT_APP_AWS_REGION,\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n    })\n\n    const S3 = new AWS.S3()\n    const fileName = file.name.replaceAll(' ', '')\n    const objParams = {\n      Bucket: returnBucketNameFile(filePath),\n      Key: fileName,\n      Body: file,\n      ContentType: file.type, // TODO: You should set content-type because AWS SDK will not automatically set file MIME\n    }\n\n    const upload = S3.putObject(objParams)\n      .on('httpUploadProgress', ({loaded, total}) => onProgress({percent: (loaded / total) * 100}))\n      .promise()\n    upload.then(\n      function (data) {\n        onSuccess(data.$response)\n      },\n      function (error) {\n        onError()\n        console.log(error.code)\n        console.log(error.message)\n      },\n    )\n  }\n\n  // 파일 삭제\n  const onDelete = item => {\n    setFileList(fileList.filter(file => file.uid !== item.uid))\n  }\n\n  const props = {\n    name: 'file',\n    multiple: true,\n    disabled: disabled,\n    fileList: fileList,\n    customRequest(data) {\n      customReq(data)\n    },\n    onSuccess(data) {\n      onSuccess(data)\n    },\n    onRemove(data) {\n      onDelete(data)\n    },\n  }\n\n  return (\n    <>\n      <DivBox className={disabled}>\n        <CFormLabel className={isRequired ? 'required' : ''}>{label || ''}</CFormLabel>\n        <Upload.Dragger {...props} id={id}>\n          <p className='ant-upload-drag-icon'>\n            <InboxOutlined />\n          </p>\n          <p className='ant-upload-text'>업로드하려면 이 영역으로 파일을 클릭하거나 드래그하세요.</p>\n        </Upload.Dragger>\n      </DivBox>\n    </>\n  )\n}\n\nexport default ModalFilesInput\n\nconst DivBox = styled.div`\n  border-radius: 0.375rem;\n  &.disabled {\n    background: #d8dbe0;\n  }\n  & .ant-upload-disabled {\n    background: #d8dbe0;\n    border: 0.5px dashed #b1b7c1;\n    opacity: 1;\n  }\n  & > span {\n    display: flex;\n    flex-direction: column;\n  }\n`\n","import {PlusOutlined} from '@ant-design/icons'\nimport {Upload} from 'antd'\nimport {useEffect, useState} from 'react'\nimport {CCol, CFormLabel, CImage} from '@coreui/react'\nimport styled from 'styled-components'\nimport AWS from 'aws-sdk'\nimport {antdImageFormat, returnBucketName} from '../../../utils/awsCustom'\n\nconst getBase64 = file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = error => reject(error)\n  })\n\nconst ModalImageInput = ({\n  images,\n  id,\n  label,\n  fileList,\n  setFileList,\n  imgPath,\n  isRequired,\n  readOnly,\n  oneSheet = false,\n}) => {\n  const [previewOpen, setPreviewOpen] = useState(false)\n  const [previewImage, setPreviewImage] = useState('')\n  const [previewTitle, setPreviewTitle] = useState('')\n\n  useEffect(() => {\n    if (images && images.length > 0) {\n      setFileList(\n        images.map(path => ({\n          uid: path,\n          name: decodeURI(path.split('/')[path.split('/').length - 1]),\n          status: 'done',\n          url: antdImageFormat(path),\n        })),\n      )\n    }\n  }, [images, setFileList])\n\n  const handleCloseImage = () => {\n    setPreviewImage('')\n  }\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj)\n    }\n\n    setPreviewImage(file.url || file.preview)\n    setPreviewOpen(true)\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\n  }\n\n  const onSuccess = successData => {\n    const httpRequest = successData.request.httpRequest\n    const file = httpRequest.body\n    const {protocol, host} = httpRequest.endpoint\n\n    const fileData = {\n      uid: successData.request.params.Key,\n      name: file.name,\n      status: 'done',\n      url: `${protocol}//${host}${httpRequest.path}`,\n    }\n\n    setFileList([...fileList, fileData])\n  }\n\n  const customReq = ({file, onError, onProgress, onSuccess}) => {\n    if (oneSheet && fileList.length === 1) {\n      alert('이미지는 한장만 등록 가능합니다!')\n      return\n    }\n    AWS.config.update({\n      region: process.env.REACT_APP_AWS_REGION,\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\n    })\n\n    const S3 = new AWS.S3()\n    const fileName = file.name.replaceAll(' ', '')\n\n    const objParams = {\n      Bucket: returnBucketName(imgPath),\n      Key: fileName,\n      Body: file,\n      ContentType: file.type, // TODO: You should set content-type because AWS SDK will not automatically set file MIME\n    }\n\n    const upload = S3.putObject(objParams)\n      .on('httpUploadProgress', ({loaded, total}) => onProgress({percent: (loaded / total) * 100}))\n      .promise()\n    upload.then(\n      function (data) {\n        onSuccess(data.$response)\n      },\n      function (error) {\n        onError()\n        console.log(error.code)\n        console.log(error.message)\n      },\n    )\n  }\n\n  const onDelete = item => {\n    setFileList(fileList.filter(file => file.uid !== item.uid))\n  }\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{marginTop: 8}}>Upload</div>\n    </div>\n  )\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-form-label'>\n        <span className={isRequired && 'required'}>{label || ' * '}</span>\n      </CFormLabel>\n      <Upload\n        listType='picture-card'\n        fileList={fileList}\n        onPreview={handlePreview}\n        onSuccess={data => onSuccess(data)}\n        onRemove={data => onDelete(data)}\n        customRequest={reqData => customReq(reqData)}\n        disabled={readOnly}\n      >\n        {fileList?.length >= 8 ? null : !readOnly && uploadButton}\n      </Upload>\n\n      {previewImage && (\n        <CCol>\n          <CFormLabel className='col-form-label'>\n            <span>{previewTitle || ''}</span>\n          </CFormLabel>\n          <PreviewImageBox className={'text-center p-2'}>\n            <CImage\n              rounded\n              alt='example'\n              onClick={() => handleCloseImage()}\n              src={previewImage}\n              width={300}\n              height={300}\n            />\n          </PreviewImageBox>\n        </CCol>\n      )}\n    </>\n  )\n}\n\nexport default ModalImageInput\n\nconst PreviewImageBox = styled(CCol)`\n  padding: 0.5rem 0;\n  background: #fafafa;\n  border: 1px dashed #d9d9d9;\n  border-radius: 2px;\n  & img {\n    cursor: pointer;\n  }\n`\n","import {CCol, CFormInput, CFormLabel} from '@coreui/react'\nimport React from 'react'\n\nconst ModalInput = ({type, onChange, id, placeholder, value, label, readOnly, disabled, isRequired, xs}) => {\n  return (\n    <>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol className='align-items-center' xs={xs} style={{display: 'flex'}}>\n        <CFormInput\n          type={type || 'text'}\n          id={id}\n          placeholder={placeholder || ''}\n          value={type === 'file' ? undefined : value || ''}\n          onChange={onChange}\n          readOnly={readOnly}\n          disabled={disabled}\n        />\n      </CCol>\n    </>\n  )\n}\n\nexport default ModalInput\n","import {CCol, CFormSelect, CFormLabel} from '@coreui/react'\nimport * as PorpTypes from 'prop-types'\n\nconst ModalSelect = ({\n  onChange,\n  size,\n  placeholder,\n  label,\n  value,\n  readOnly,\n  id,\n  xs,\n  disabled = false,\n  isRequired,\n  options,\n}) => {\n  const newOptions = options.map(item => (\n    <option key={item.key} value={item.key}>\n      {item.value}\n    </option>\n  ))\n\n  return (\n    <>\n      <CFormLabel htmlFor='staticEmail' className='col-sm-2 col-form-label'>\n        <span className={isRequired ? 'required' : ''}>{label || ' * '}</span>\n      </CFormLabel>\n      <CCol xs={xs}>\n        <CFormSelect value={value} disabled={disabled} id={id} size={size} onChange={onChange} readOnly={readOnly}>\n          <option>{placeholder}</option>\n          {newOptions}\n        </CFormSelect>\n      </CCol>\n    </>\n  )\n}\n\nModalSelect.propTypes = {\n  onChange: PorpTypes.func,\n  size: PorpTypes.string,\n  placeholder: PorpTypes.string,\n  label: PorpTypes.string,\n  value: PorpTypes.any,\n  readOnly: PorpTypes.bool,\n  id: PorpTypes.string,\n  disabled: PorpTypes.bool,\n  isRequired: PorpTypes.bool,\n  options: PorpTypes.any,\n}\n\nexport default ModalSelect\n","import {CCol, CFormTextarea} from '@coreui/react'\nimport React from 'react'\n\nconst ModalTextArrayInput = ({id, value, rows, label, onChange, text, readOnly, disabled}) => {\n  return (\n    <CCol>\n      <CFormTextarea\n        id={id || ''}\n        label={label || ''}\n        rows={rows || 10}\n        value={value || ''}\n        onChange={onChange}\n        text={text || ''}\n        readOnly={readOnly}\n        disabled={disabled}\n      />\n    </CCol>\n  )\n}\n\nexport default ModalTextArrayInput\n","import React, {useMemo, useRef} from 'react'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\nimport {CCol, CFormLabel} from '@coreui/react'\nimport styled from 'styled-components'\n\nconst ModalTextOnlyQuillEditor = ({\n  id, // Tag ID\n  value, // useState\n  label, // Title\n  isRequired, // isRequired\n  readOnly = false,\n  setValue, // onChange function\n}) => {\n  const QuillRef = useRef()\n\n  const modules = useMemo(() => {\n    return {\n      toolbar: {\n        container: [\n          ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n          [{size: ['small', false, 'large', 'huge']}, {color: []}],\n          [{list: 'ordered'}, {list: 'bullet'}, {indent: '-1'}, {indent: '+1'}, {align: []}],\n        ],\n      },\n    }\n  }, [])\n\n  return (\n    <CCol style={{height: '300px'}} className={'pb-5'}>\n      <CFormLabel htmlFor={`${id}Static`} className='col-sm-2 col-form-label'>\n        <span className={isRequired && 'required'}>{label || ' * '}</span>\n      </CFormLabel>\n      <EditorStyle\n        id={id || ''}\n        ref={element => {\n          if (element !== null) {\n            QuillRef.current = element\n          }\n        }}\n        value={value}\n        onChange={setValue}\n        modules={modules}\n        readOnly={readOnly}\n        theme='snow'\n        placeholder='내용을 입력해주세요.'\n        style={{height: '100%'}}\n      />\n    </CCol>\n  )\n}\n\nexport default ModalTextOnlyQuillEditor\n\nconst EditorStyle = styled(ReactQuill)`\n  background-color: ${({readOnly}) => (readOnly ? '#d8dbe0' : 'transparent')};\n  .ql-toolbar {\n    display: ${({readOnly}) => (readOnly ? 'none' : 'block')};\n  }\n`\n","// 자료실 카테고리 옵션\nexport const dataRoomCategoryOptions = [\n  {\n    key: '드라이버',\n    value: '드라이버',\n  },\n  {\n    key: '프로그램',\n    value: '프로그램',\n  },\n  {\n    key: '매뉴얼',\n    value: '매뉴얼',\n  },\n  {\n    key: '펌웨어',\n    value: '펌웨어',\n  },\n  {\n    key: '기술자료',\n    value: '기술자료',\n  },\n  {\n    key: '기타',\n    value: '기타',\n  },\n]\n","import {useEffect} from 'react'\nimport ModalInput from '../../forms/inputForm/ModalInput'\nimport ModalTextArrayInput from '../../forms/inputForm/ModalTextArrayInput'\nimport ModalFilesInput from '../../forms/inputForm/ModalFilesInput'\nimport ModalSelect from '../../forms/inputForm/ModalSelect'\nimport {CButton, CForm, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow} from '@coreui/react'\nimport {dataRoomCategoryOptions} from '../../../utils/categoryOptions/officailMall/categoryOptions'\nimport ModalImageInput from '../../forms/inputForm/ModalImageInput'\nimport ModalTextOnlyQuillEditor from '../../forms/inputForm/ModalTextOnlyQuillEditor'\n\nconst DataRoomModal = ({\n  onChange,\n  item,\n  visible,\n  setVisible,\n  onUpdate,\n  onDelete,\n  fileList,\n  setFileList,\n  imageList,\n  setImageList,\n  content,\n  setContent,\n  setIsUpdate,\n  isUpdate,\n  setIsReadOnly,\n  isReadOnly,\n}) => {\n  // Local state 선언\n  const {category, dataRoomId, title, images, files, createdAt} = item\n\n  // modal Title 세팅\n  let modalTitle = '자료 추가'\n  if (isUpdate) modalTitle = '자료 수정'\n  if (isReadOnly) modalTitle = '자료 상세 내용'\n\n  useEffect(() => {\n    if (visible) {\n    }\n  }, [visible])\n\n  // 수정 버튼 클릭 함수\n  const clickUpdateBtn = () => {\n    setIsReadOnly(false)\n    setIsUpdate(true)\n  }\n\n  return (\n    <CModal size='lg' visible={visible} onClose={() => setVisible(false)}>\n      <CModalHeader>\n        <CModalTitle>{modalTitle}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <CRow className={'p-2'}>\n            {(isReadOnly || isUpdate) && (\n              <ModalInput\n                id={'no'}\n                placeholder={'No'}\n                label={'No'}\n                value={dataRoomId}\n                onChange={onChange}\n                readOnly\n                disabled\n              />\n            )}\n            <ModalSelect\n              options={dataRoomCategoryOptions}\n              onChange={onChange}\n              size='sm'\n              id='category'\n              value={category}\n              isRequired={true}\n              placeholder='선택해주세요'\n              label='카테고리'\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <CRow className={'p-2'}>\n            <ModalInput\n              id={'title'}\n              placeholder={'제목'}\n              label={'제목'}\n              value={title}\n              onChange={onChange}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n              isRequired\n            />\n          </CRow>\n          {(isReadOnly || isUpdate) && (\n            <CRow className={'p-2'}>\n              <ModalInput\n                id={'createdAt'}\n                placeholder={'작성일'}\n                label={'작성일'}\n                value={createdAt}\n                readOnly\n                disabled\n              />\n            </CRow>\n          )}\n          <CRow className={'p-2'}>\n            <ModalImageInput\n              id='image'\n              label='이미지 첨부'\n              fileList={imageList}\n              setFileList={setImageList}\n              images={images}\n              isRequired={true}\n              imgPath='mall/dataRroom_images'\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n            />\n          </CRow>\n          <CRow className={'p-2'}>\n            <ModalTextOnlyQuillEditor\n              id='content'\n              value={content || ''}\n              isRequired={true}\n              readOnly={isReadOnly}\n              setValue={setContent}\n              label='본문'\n            />\n          </CRow>\n          <br />\n          <CRow className={'p-2'}>\n            <ModalFilesInput\n              id={'fileList'}\n              fileList={fileList}\n              setFileList={setFileList}\n              files={files}\n              label={'첨부파일'}\n              filePath={'mall/dataroom_files'}\n              readOnly={isReadOnly}\n              disabled={isReadOnly}\n              isRequired\n            />\n          </CRow>\n          <br />\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        {!isReadOnly && !isUpdate && (\n          <CButton onClick={onUpdate} color='primary'>\n            추가\n          </CButton>\n        )}\n        {isUpdate && (\n          <CButton onClick={onUpdate} color='primary'>\n            저장\n          </CButton>\n        )}\n        {isReadOnly && (\n          <>\n            <CButton color={isReadOnly ? 'primary' : 'success'} onClick={clickUpdateBtn}>\n              수정\n            </CButton>\n            <CButton onClick={onDelete} color='danger'>\n              삭제\n            </CButton>\n          </>\n        )}\n        <CButton color='secondary' onClick={() => setVisible(false)}>\n          취소\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default DataRoomModal\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCardHeader, CCol, CForm, CButton, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {dataRoomListColumns} from '../../../utils/columns/officialMall/Columns'\nimport ApiConfig, {HttpMethod} from '../../../dataManager/apiConfig'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {isEmpty} from '../../../utils/utility'\nimport {useNavigate} from 'react-router-dom'\nimport * as _ from 'lodash'\nimport DataRoomModal from '../../../components/Modal/officialMall/DataRoomModal'\nimport {sendImageUrlFormat} from '../../../utils/awsCustom'\n\nconst DataRoomList = () => {\n  const navigate = useNavigate()\n  const [isReadOnly, setIsReadOnly] = useState(false)\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState({})\n  const [showModal, setShowModal] = useState(false)\n  const [fileList, setFileList] = useState([])\n  const [imageList, setImageList] = useState([])\n  const [content, setContent] = useState('')\n\n  // API 통신\n\n  // 자료실 리스트 조회\n  const onLoadMallDataRoomList = async () => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_DATAROOMS,\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n      } else {\n        setItems(res.result.dataRoomInfos)\n      }\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 자료 상세 조회\n  const onLoadMallDataRoom = async dataRoomId => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.GET,\n        url: EndPoint.GET_MALL_DATAROOM,\n        path: {dataRoomId},\n      })\n\n      if (!res?.isSuccess || isEmpty(res?.result)) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n\n      res.result.dataRoomId = dataRoomId\n      setSelectedItem(res.result)\n      setContent(res.result.content)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 자료 추가\n  const onCreateMallDataRoom = async item => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.POST,\n        url: EndPoint.POST_MALL_DATAROOM,\n        data: {\n          category: item.category,\n          title: item.title,\n          content: item.content,\n          images: item.images,\n          files: item.files,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      alert(res?.message)\n      setShowModal(false)\n      setSelectedItem(setInitItem)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 자료 수정\n  const onUpdateMallDataRoom = async item => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_UPDATE_DATAROOM,\n        path: {\n          dataRoomId: item.dataRoomId,\n        },\n        data: {\n          category: item.category,\n          title: item.title,\n          content: item.content,\n          images: item.images,\n          files: item.files,\n        },\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n        return\n      }\n      alert(res?.message)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  // 자료 삭제\n  const onDeleteMallDataRoom = async dataRoomId => {\n    try {\n      const {data: res} = await ApiConfig.request({\n        method: HttpMethod.PATCH,\n        url: EndPoint.PATCH_MALL_DELETE_DATAROOM,\n        path: {dataRoomId},\n      })\n\n      if (!res?.isSuccess) {\n        if (res?.code === 2014) {\n          navigate('/login')\n        } else {\n          alert(res?.message)\n        }\n      }\n      alert(res?.message)\n    } catch (error) {\n      alert('네트워크 통신 실패. 잠시후 다시 시도해주세요.')\n    }\n  }\n\n  useEffect(() => {\n    onLoadMallDataRoomList()\n  }, [])\n\n  const setInitItem = () => {\n    return {\n      title: '',\n      content: '',\n      category: '',\n      content: '',\n      images: [],\n      files: [],\n    }\n  }\n\n  // 자료 추가 Modal Open 함수\n  const handleShowFaqItemAddModal = () => {\n    setSelectedItem(setInitItem)\n    setImageList([])\n    setFileList([])\n    setContent('')\n    setIsReadOnly(false)\n    setIsUpdate(false)\n    setShowModal(!showModal)\n  }\n  const handleShowDataRoomDetailModal = item => {\n    onLoadMallDataRoom(item.dataRoomId)\n    setIsReadOnly(true)\n    setIsUpdate(false)\n    setShowModal(!showModal)\n  }\n\n  /** Add dataroom Modal*/\n  const handleDataRoomItemModalOnChange = e => {\n    const {id, value} = e.target\n    setSelectedItem({\n      ...selectedItem,\n      [id]: value,\n    })\n  }\n\n  // 객체 to key value\n  const handleMultiFileUrl = array => {\n    const tempFiles = array.reduce((accumulator, value) => {\n      return {...accumulator, [value.name]: value.url}\n    }, {})\n    return tempFiles\n  }\n\n  const handleDetailModalUpdate = async () => {\n    const {dataRoomId, title, category} = selectedItem\n\n    // validation\n    if (!title) return alert('제목을 입력해주세요')\n    if (!category) return alert('카테고리를 선택해주세요')\n    if (!content) return alert('본문을 입력해주세요')\n    if (imageList.length < 1) return alert('이미지를 등록해주세요')\n    if (fileList.length < 1) return alert('자료를 등록해주세요')\n\n    selectedItem.files = await handleMultiFileUrl(fileList)\n    selectedItem.images = await sendImageUrlFormat(imageList)\n    selectedItem.content = content\n\n    if (window.confirm('저장 하시겠습니까?')) {\n      if (dataRoomId) {\n        // update\n        await onUpdateMallDataRoom(selectedItem)\n        await onLoadMallDataRoom(dataRoomId)\n        setIsReadOnly(true)\n        setIsUpdate(false)\n      } else {\n        // create\n        await onCreateMallDataRoom(selectedItem)\n      }\n      await onLoadMallDataRoomList()\n    }\n  }\n\n  const handleDetailModalDelete = () => {\n    if (window.confirm('정말 삭제하시겠습니까?')) {\n      onDeleteMallDataRoom(selectedItem.dataRoomId).then(onLoadMallDataRoomList, setShowModal(false))\n    }\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='자료실 관리' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardHeader>\n            <CForm className='row g-3'>\n              <CCol xs={1}>\n                <CButton color='primary' onClick={handleShowFaqItemAddModal}>\n                  추가\n                </CButton>\n              </CCol>\n            </CForm>\n          </CCardHeader>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowDataRoomDetailModal}\n              columns={dataRoomListColumns}\n              className={'dataRoomList'}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <DataRoomModal\n        item={selectedItem}\n        onUpdate={handleDetailModalUpdate}\n        onDelete={handleDetailModalDelete}\n        onChange={handleDataRoomItemModalOnChange}\n        visible={showModal}\n        setVisible={setShowModal}\n        fileList={fileList}\n        setFileList={setFileList}\n        imageList={imageList}\n        setImageList={setImageList}\n        content={content}\n        setContent={setContent}\n        isReadOnly={isReadOnly}\n        setIsReadOnly={setIsReadOnly}\n        isUpdate={isUpdate}\n        setIsUpdate={setIsUpdate}\n      />\n    </CRow>\n  )\n}\n\nexport default DataRoomList\n","import {CFormSelect} from '@coreui/react' // 회원 리스트\nexport const userListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 탈퇴회원 리스트\nexport const resignUserListColumns = [\n  {key: 'userId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'email', label: '이메일', _props: {className: 'email'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'resignReason', label: '탈퇴사유', _props: {className: 'resignReason'}},\n  {key: 'createdAt', label: '최초등록일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n  {key: 'updatedAt', label: '계정탈퇴일', sorter: false, filter: false, _props: {className: 'updatedAt'}},\n  {key: 'status', label: '상태', sorter: false, filter: false, _props: {className: 'status'}},\n]\n\n// 1:1 문의 리스트\nexport const inquiryListColumns = [\n  {key: 'inquiryId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '카테고리', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'name', label: '이름', _props: {className: 'name'}},\n  {key: 'phoneNumber', label: '휴대전화번호', _props: {className: 'phoneNumber'}},\n  {key: 'reply', label: '답변', sorter: false, filter: false, _props: {className: 'reply'}},\n]\n\n// FAQ 리스트\nexport const faqListColumns = [\n  {key: 'faqId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '카테고리', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n]\n\n// 자료실 리스트\nexport const dataRoomListColumns = [\n  {key: 'dataRoomId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'category', label: '카테고리', _props: {className: 'category'}},\n  {key: 'title', label: '제목', _props: {className: 'title'}},\n  {key: 'createdAt', label: '작성일', sorter: false, filter: false, _props: {className: 'createdAt'}},\n]\n\n// 주문 현황 관리\nexport const orderListColumns = [\n  {key: 'orderId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'orderNumber', label: '주문번호', sorter: false, _props: {className: 'orderNumber'}},\n  {key: 'receiver', label: '수취인', sorter: false, _props: {className: 'receiver'}},\n  {key: 'phoneNumber', label: '휴대전화번호', sorter: false, _props: {className: 'phoneNumber'}},\n  {key: 'totalPrice', label: '주문총액', filter: false, _props: {className: 'totalPrice'}},\n  {key: 'orderDate', label: '주문일', sorter: false, filter: false, _props: {className: 'orderDate'}},\n]\n\n// 제품 관리\nexport const productListColumns = [\n  {key: 'radioButton', label: '', sorter: false, filter: false, _props: {className: 'radioButton'}},\n  {key: 'itemName', label: '제품명', sorter: false, filter: false, _props: {className: 'itemName'}},\n  {key: 'orderItemCount', sorter: false, filter: false, label: '제품수량', _props: {className: 'orderItemCount'}},\n  {key: 'orderItemPrice', sorter: false, filter: false, label: '제품가격', _props: {className: 'orderItemPrice'}},\n  {key: 'orderStatus', label: '제품상태', sorter: false, filter: false, _props: {className: 'orderStatus'}},\n  {key: 'invoiceNumber', sorter: false, filter: false, label: '송장번호', _props: {className: 'invoiceNumber'}},\n]\n\n// 취소 현황 관리\nexport const cancelListColumns = [\n  {key: 'orderCancelId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'orderNumber', label: '주문번호', sorter: false, _props: {className: 'orderNumber'}},\n  {key: 'itemName', label: '제품명', sorter: false, _props: {className: 'itemName'}},\n  {key: 'receiver', label: '수취인', sorter: false, _props: {className: 'receiver'}},\n  {key: 'cancelPrice', label: '취소금액', filter: false, _props: {className: 'cancelPrice'}},\n  {key: 'cancelDate', label: '취소 요청일', sorter: false, filter: false, _props: {className: 'cancelDate'}},\n  {\n    key: 'orderStatus',\n    label: '주문상태',\n    sorter: false,\n    filter: () => {\n      return (\n        <CFormSelect size='sm'>\n          <option>주문상태 선택</option>\n          <option value='결제 대기'>결제 대기</option>\n          <option value='결제 완료'>결제 완료</option>\n          <option value='배송 준비중'>배송 준비중</option>\n          <option value='배송중'>배송중</option>\n          <option value='배송 완료'>배송 완료</option>\n          <option value='취소 처리중'>취소 처리중</option>\n          <option value='취소 완료'>취소 완료</option>\n        </CFormSelect>\n      )\n    },\n    _props: {className: 'orderStatus'},\n  },\n]\n// 취소 현황 관리\nexport const exchangeListColumns = [\n  {key: 'orderExchangeId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'orderNumber', label: '주문번호', sorter: false, _props: {className: 'orderNumber'}},\n  {key: 'itemName', label: '제품명', sorter: false, _props: {className: 'itemName'}},\n  {key: 'receiver', label: '수취인', sorter: false, _props: {className: 'receiver'}},\n  {key: 'exchangePrice', label: '교환금액', filter: false, _props: {className: 'exchangePrice'}},\n  {key: 'exchangeDate', label: '교환 요청일', sorter: false, filter: false, _props: {className: 'exchangeDate'}},\n  {\n    key: 'orderStatus',\n    label: '주문상태',\n    sorter: false,\n    _props: {className: 'orderStatus'},\n  },\n]\n\n// 배너 관리\nexport const bannerListColumns = [\n  {key: 'bannerId', label: 'No', sorter: false, filter: false, _props: {className: 'no'}},\n  {key: 'image', label: '이미지', sorter: false, filter: false, _props: {className: 'image'}},\n  {key: 'title', label: '배너 타이틀', sorter: false, _props: {className: 'title'}},\n]\n","// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);"],"names":["InboxOutlined","props","ref","React","AntdIcon","_objectSpread","icon","InboxOutlinedSvg","displayName","files","label","id","disabled","fileList","setFileList","filePath","isRequired","useEffect","length","map","file","index","key","uid","name","fileTitle","decodeURI","split","status","url","antdImageFormat","multiple","customRequest","data","onError","onProgress","onSuccess","AWS","region","process","accessKeyId","secretAccessKey","S3","fileName","replaceAll","objParams","Bucket","returnBucketNameFile","Key","Body","ContentType","type","putObject","on","loaded","total","percent","promise","then","$response","error","console","log","code","message","customReq","successData","httpRequest","request","body","endpoint","protocol","host","fileData","params","path","onRemove","item","filter","DivBox","className","styled","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","images","imgPath","readOnly","oneSheet","useState","setPreviewOpen","previewImage","setPreviewImage","previewTitle","setPreviewTitle","handlePreview","preview","originFileObj","substring","lastIndexOf","uploadButton","style","marginTop","htmlFor","listType","onPreview","reqData","alert","returnBucketName","PreviewImageBox","rounded","alt","onClick","src","width","height","CCol","onChange","placeholder","value","xs","display","undefined","size","newOptions","options","rows","text","setValue","QuillRef","useRef","modules","useMemo","toolbar","container","color","list","indent","align","EditorStyle","element","current","theme","ReactQuill","dataRoomCategoryOptions","visible","setVisible","onUpdate","onDelete","imageList","setImageList","content","setContent","setIsUpdate","isUpdate","setIsReadOnly","isReadOnly","category","dataRoomId","title","createdAt","modalTitle","onClose","ModalInput","ModalSelect","ModalImageInput","ModalTextOnlyQuillEditor","ModalFilesInput","navigate","useNavigate","items","setItems","selectedItem","setSelectedItem","showModal","setShowModal","onLoadMallDataRoomList","ApiConfig","method","HttpMethod","EndPoint","res","isSuccess","isEmpty","dataRoomInfos","onLoadMallDataRoom","onCreateMallDataRoom","setInitItem","onUpdateMallDataRoom","onDeleteMallDataRoom","handleDetailModalUpdate","reduce","accumulator","sendImageUrlFormat","window","confirm","PageHeader","ListTemplate","columns","dataRoomListColumns","e","target","userListColumns","sorter","_props","resignUserListColumns","inquiryListColumns","faqListColumns","orderListColumns","productListColumns","cancelListColumns","exchangeListColumns","bannerListColumns","PlusOutlined","PlusOutlinedSvg"],"sourceRoot":""}