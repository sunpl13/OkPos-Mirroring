{"version":3,"file":"static/js/4783.bf9e56da.chunk.js","mappings":"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","sources":["components/common/PageHeader.tsx","components/list/ThumbnailModal.tsx","components/common/RangeDatePicker.js","components/list/ListTemplate.js","dataManager/apiConfig.js","dataManager/apiMapper.js","utils/awsCustom.js"],"sourcesContent":["import styled from 'styled-components'\ntype Props = {\n  title: string\n}\n\nconst PageHeader = ({title}: Props) => {\n  return (\n    <Header>\n      <h1>{title}</h1>\n    </Header>\n  )\n}\n\nexport default PageHeader\n\nconst Header = styled.div`\n  border-bottom: 1px solid #ccc;\n  margin-bottom: 40px;\n  margin-top: 20px;\n`\n","import {CButton, CImage, CModal, CModalBody, CModalFooter} from '@coreui/react'\nimport {useState} from 'react'\nimport {antdImageFormat} from '../../utils/awsCustom'\n\nexport interface IImage {\n  img: string\n  altName: string\n}\n\ninterface IThumbnail {\n  thumbnails: any\n  visible: boolean\n  url: string\n  setVisible: (state: boolean) => void\n}\n\nconst ThumbnailModal = ({visible, setVisible, url}: IThumbnail) => {\n  const [imgUrl, setImgUrl] = useState('')\n  // useEffect(() => {\n  //   setImgUrl(thumbnails[0].img)\n\n  //   return () => {\n  //     setImgUrl(thumbnails[0].img)\n  //   }\n  // }, [thumbnails])\n  //const onChangeImg = (selectedUrl: string) => {\n  //     setImgUrl(selectedUrl)\n  //   }\n  return (\n    <CModal alignment='center' size='xl' visible={visible} onClose={() => setVisible(false)}>\n      {/*<CModalHeader></CModalHeader>*/}\n      <CModalBody className='clearfix'>\n        <CImage align='center' fluid src={antdImageFormat(url)} alt='안녕하세요' width={600} />\n        {/* <MultipleRows>\n          {thumbnails.map(item => (\n            <CImage key={item.img} src={item.img} alt={item.altName} width={80} height={60} />\n          ))}\n        </MultipleRows> */}\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='primary' onClick={() => setVisible(false)}>\n          Cancel\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nexport default ThumbnailModal\n\n//const MultipleRows = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   flex-wrap: wrap;\n//   gap: 0 10px;\n//   margin-top: 20px;\n//   & img {\n//     width: 80px;\n//     height: 60px;\n//   }\n// `\n","import {ConfigProvider, DatePicker, Space} from 'antd'\nimport locale from 'antd/lib/locale/ko_KR'\nimport 'antd/dist/antd.min.css'\nimport moment from 'moment'\nimport 'moment/locale/ko'\nimport {CCol} from '@coreui/react'\nimport styled from 'styled-components'\n\nconst RangeDatePicker = ({setStartDate, setEndDate}) => {\n  const {RangePicker} = DatePicker\n  moment.locale('ko')\n  const datePickerOnChange = date => {\n    if (date) {\n      setStartDate(moment(date[0]._d).format('YYYY-MM-DD'))\n      setEndDate(moment(date[1]._d).format('YYYY-MM-DD'))\n    } else {\n      setStartDate('')\n      setEndDate('')\n    }\n  }\n\n  return (\n    <PickerCCol>\n      <ConfigProvider locale={locale}>\n        <Space direction='vertical'>\n          <RangePicker allowClear={true} onChange={datePickerOnChange} />\n        </Space>\n      </ConfigProvider>\n    </PickerCCol>\n  )\n}\n\nexport default RangeDatePicker\n\nconst PickerCCol = styled(CCol)`\n  display: flex;\n  flex-direction: row;\n  align-content: end;\n  justify-content: end;\n  height: 100%;\n  width: 100%;\n  & div {\n    height: 100%;\n  }\n  & .ant-space-item {\n    width: 100%;\n  }\n  & .ant-picker {\n    border-radius: 0.375rem;\n    border: solid 1px #9da5b1;\n  }\n  & .ant-space-item {\n    width: 100%;\n    & > div {\n      width: 100%;\n    }\n  }\n  & .ant-space.ant-space-vertical {\n    width: 100%;\n  }\n`\n","import React, {useEffect, useState} from 'react'\nimport {CSmartTable} from '../custom/smart-table/CSmartTable'\nimport PropTypes from 'prop-types'\nimport {\n  CBadge,\n  CButton,\n  CCol,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CFormCheck,\n  CFormInput,\n  CImage,\n  CInputGroup,\n  CRow,\n} from '@coreui/react'\nimport ThumbnailModal from './ThumbnailModal'\nimport RangeDatePicker from '../common/RangeDatePicker'\nimport moment from 'moment'\nimport {isPrice} from '../../utils/utility'\nimport {antdImageFormat} from '../../utils/awsCustom'\n\nconst ListTemplate = ({\n  items, // 리스트 아이템\n  onClick, // 리스트 클릭 이벤트 ex) Modal\n  columns, // 리스트의 헤더\n  className, // 리스트의 클레스 네임\n  onDelete, // 리스트 아이템 삭제\n  selectedOptions, // 리스트의 selectBox 옵션\n  datePickerHidden = true, // 기간선택 데이터 피커 출력 유무\n  itemPerPageHidden = true, // 리스트의 페이지마다 출력될 아이템 개수 선택 박스 출력 유무\n  searchInputHidden = true, // 검색창 출력 유무\n  checkBoxInputHidden = false, // 체크박스 출력 유무\n  func, //보낼 함수\n}) => {\n  // Local state 선언\n  const [listItems, setListItems] = useState([])\n  const [filterItems, setFilterItems] = useState()\n  const [showModal, setShowModal] = useState(false)\n\n  const [imgClick, setImgClick] = useState('')\n  const [startDate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n  const [searchOption, setSearchOption] = useState({\n    category: '',\n    value: '',\n  })\n  const searchSelectedBox = {\n    id: '번호',\n    no: '번호',\n    userName: '회원이름',\n    title: '제목',\n  }\n\n  const [allSelected, setAllSelected] = useState(false)\n\n  // 리스트 헤더 전체 체크박스\n  const handleAllSelectedOnChange = () => {\n    setAllSelected(!allSelected)\n    setListItems(\n      listItems.map(value => ({\n        ...value,\n        checked: allSelected ? false : true,\n      })),\n    )\n  }\n  // 리스트 아이템 체크박스\n  const handleItemOnSelected = item => {\n    setListItems(\n      listItems.map(value =>\n        value._id === item._id\n          ? {\n              ...value,\n              checked: !item.checked,\n            }\n          : value,\n      ),\n    )\n    if (!item.checked) {\n      item.checked = true\n    } else {\n      item.checked = false\n    }\n    console.log(item)\n  }\n  // 테이블 헤더의 전체 체크박스\n  const allCheckBox = {\n    key: 'checkBox',\n    label: (\n      <CFormCheck\n        id={'allSelected'}\n        type={'checkbox'}\n        onChange={event => handleAllSelectedOnChange(event)}\n        checked={allSelected}\n      />\n    ),\n    _props: {className: 'checkBox'},\n    sorter: false,\n    filter: false,\n  }\n\n  // 함수 선언\n\n  // 상태값 Color get 함수\n  const getBadgeColor = status => {\n    switch (status) {\n      case 'ACTIVE':\n        return 'success'\n      case 'INACTIVE':\n        return 'danger'\n      case true:\n        return 'success'\n      case false:\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  // 상태값 Text get 함수\n  const getBadgeText = status => {\n    switch (status) {\n      case 'ACTIVE':\n        return '활성화'\n      case 'INACTIVE':\n        return '비활성화'\n      case true:\n        return '완료'\n      case false:\n        return '미완료'\n      default:\n        return '기타'\n    }\n  }\n\n  const testOnClick = (event, url) => {\n    event.stopPropagation()\n    setShowModal(!showModal)\n    setImgClick(url)\n  }\n  const modalOnClick = () => {\n    setShowModal(!showModal)\n  }\n\n  const handleDeleteOnClick = (event, item) => {\n    event.stopPropagation()\n    onDelete(item)\n  }\n\n  const handleOnCheckedApi = async item => {\n    console.log(item)\n    // try {\n    //   const data = await ApiConfig.request({\n    //     data: {\n    //       editorIds: [item.editorId],\n    //     },\n    //     query: {},\n    //     path: {},\n    //     method: HttpMethod.PATCH,\n    //     url: `${EndPoint.EDITOR}/auth`,\n    //   })\n    //   console.log(data)\n    // } catch (error) {\n    //   alert(error)\n    // }\n  }\n\n  useEffect(() => {\n    setListItems(items)\n    /*\n    if (columns) {\n      setSearchOption({\n        ...searchOption,\n        category: columns[0].key,\n      })\n    }\n    */\n  }, [items])\n\n  useEffect(() => {\n    // data picker 에 선택된 값\n    if (endDate) {\n      setFilterItems(\n        listItems.filter(\n          value =>\n            moment(value.createdAt, 'YYYYMMDDHHmmss').format('YYYY-MM-DD') >= startDate &&\n            moment(value.createdAt, 'YYYYMMDDHHmmss').format('YYYY-MM-DD') <= endDate,\n        ),\n      )\n      // 생성일로 필터\n    } else {\n      setFilterItems('')\n    }\n  }, [endDate])\n\n  return (\n    <>\n      <CRow className={'justify-content-end'}>\n        {/*\n        {searchInputHidden && (\n          <CCol xs={4}>\n            <CInputGroup>\n              <CDropdown alignment='end' variant='input-group'>\n                <CDropdownToggle color='secondary' variant='outline' split>\n                  {searchSelectedBox[searchOption?.category]}\n                </CDropdownToggle>\n                <CFormInput\n                  aria-label='Text input with segmented dropdown button'\n                  onChange={({target: {value}}) =>\n                    setSearchOption({\n                      ...searchOption,\n                      value: value,\n                    })\n                  }\n                />\n                <CDropdownMenu>\n                  {columns.map(({key}) => {\n                    if (key !== 'createdAt' && key !== 'noticeFiles' && key !== searchOption.category) {\n                      //console.log(searchSelectedBox[key])\n                      return (\n                        <CDropdownItem\n                          key={key}\n                          value={searchSelectedBox[key]}\n                          onClick={() => handleSearchItemOnClick(key)}\n                        >\n                          {searchSelectedBox[key]}\n                        </CDropdownItem>\n                      )\n                    }\n                  })}\n                </CDropdownMenu>\n              </CDropdown>\n              <CButton type='button' color='secondary' variant='outline' onClick={() => itemOnSearch(searchOption)}>\n                검색\n              </CButton>\n            </CInputGroup>\n          </CCol>\n        )}\n        */}\n        {datePickerHidden && (\n          <CCol xs={4}>\n            <RangeDatePicker setStartDate={setStartDate} setEndDate={setEndDate} />\n          </CCol>\n        )}\n      </CRow>\n\n      <br />\n      <CSmartTable\n        items={filterItems || listItems}\n        columns={checkBoxInputHidden ? [allCheckBox, ...columns] : columns || null}\n        columnSorter\n        pagination\n        clickableRows\n        columnFilter\n        //onActivePageChange={selectPage => pageOnChange(selectPage)}\n        //paginationProps={{\n        //  activePage: currentPage,\n        //  align: 'center',\n        //  pages: totalPage,\n        //}}\n        tableHeadProps={{\n          color: 'primary',\n        }}\n        onRowClick={onClick}\n        tableProps={{\n          hover: true,\n          responsive: true,\n          striped: true,\n          align: 'middle',\n          className: className,\n        }}\n        scopedColumns={{\n          checkBox: item => (\n            <td onClick={event => event.stopPropagation()}>\n              <CFormCheck onChange={() => handleItemOnSelected(item)} checked={item.checked || false} />\n            </td>\n          ),\n          isAuthorized: item => (\n            <td onClick={event => event.stopPropagation()}>\n              <CFormCheck onChange={() => func(item)} checked={item.isAuthorized || false} />\n            </td>\n          ),\n          // 상태\n          status: ({status}) => (\n            <td>\n              <CBadge color={getBadgeColor(status)}>{getBadgeText(status)}</CBadge>\n            </td>\n          ),\n          // 1:1 문의 답변 상태\n          reply: ({reply}) => (\n            <td>\n              <CBadge color={getBadgeColor(reply)}>{getBadgeText(reply)}</CBadge>\n            </td>\n          ),\n          // 단일 이미지\n          image: ({image}) => (\n            <td>\n              <CImage rounded thumbnail src={image} alt='' />\n            </td>\n          ),\n          // 이미지 리스트\n          images: ({images}) => (\n            <td onClick={event => (images.length !== 0 ? testOnClick(event, images) : onClick)}>\n              <CImage rounded src={images.length === 0 ? '' : images[0]} alt='' width={100} height={60} />\n            </td>\n          ),\n          deleteBtn: item => (\n            <td onClick={event => handleDeleteOnClick(event, item)}>\n              <CBadge color={'danger'}>삭제</CBadge>\n            </td>\n          ),\n          //\n          //category: ({category}) => <td>{selectedOptions ? selectedOptions[category] : ''}</td>,\n          jobType: ({jobType}) => <td>{selectedOptions ? selectedOptions[jobType] : ''}</td>,\n          education: ({education}) => <td>{selectedOptions ? selectedOptions[education] : ''}</td>,\n          inquiryType: ({inquiryType}) => <td>{selectedOptions ? selectedOptions[inquiryType] : ''}</td>,\n          career: ({career}) => <td>{selectedOptions ? selectedOptions[career] : ''}</td>,\n          proceed: ({proceed}) => <td>{proceed ? '채용중' : '채용 마감'}</td>,\n          deliveryStatus: ({deliveryStatus}) => (\n            <td>\n              <CBadge color={'primary'}>{selectedOptions ? selectedOptions[deliveryStatus] : 'Not Data'} </CBadge>\n            </td>\n          ),\n          productImg: ({productImg}) => (\n            <td>\n              <CImage rounded src={productImg || ''} alt='' width={100} height={60} />\n            </td>\n          ),\n          totalPrice: ({totalPrice}) => <td className='totalPrice'>{isPrice(totalPrice)}</td>,\n\n          startedAt: ({startedAt}) => <td>{moment(startedAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          closedAt: ({closedAt}) => <td>{moment(closedAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          createdAt: ({createdAt}) => <td>{moment(createdAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          deletedAt: ({deletedAt}) => <td>{moment(deletedAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          updatedAt: ({updatedAt}) => <td>{moment(updatedAt, 'YYYYMMDDHHmmss').format('YYYY. MM. DD')}</td>,\n          noticeFiles: ({noticeFiles}) => <td>{noticeFiles?.length} 개</td>,\n          imageUrls: ({imageUrls}) => (\n            <td\n              onClick={event =>\n                imageUrls.length !== 0 && imageUrls[0] !== '.' ? testOnClick(event, imageUrls[0]) : onClick\n              }\n            >\n              {imageUrls.length === 0 || imageUrls[0] === '.' ? (\n                ''\n              ) : (\n                <CImage\n                  rounded\n                  src={antdImageFormat(imageUrls[0])}\n                  alt={antdImageFormat(imageUrls[0])}\n                  width={100}\n                  height={60}\n                />\n              )}\n            </td>\n          ),\n          // 변수명 겹침\n          // image: ({image}) => (\n          //   <td onClick={event => (image.length !== 0 && image[0] !== '.' ? testOnClick(event, image[0]) : onClick)}>\n          //     {image.length === 0 || image[0] === '.' ? (\n          //       ''\n          //     ) : (\n          //       <CImage\n          //         rounded\n          //         src={antdImageFormat(image[0])}\n          //         alt={antdImageFormat(image[0])}\n          //         width={100}\n          //         height={60}\n          //       />\n          //     )}\n          //   </td>\n          // ),\n        }}\n        noItemsLabel={'데이터가 없습니다.'}\n        //itemsPerPageSelect={itemPerPageHidden}\n        itemsPerPage={20}\n      />\n      {showModal ? (\n        <ThumbnailModal visible={showModal} setVisible={setShowModal} onClick={modalOnClick} url={imgClick} />\n      ) : (\n        ''\n      )}\n    </>\n  )\n}\n\nListTemplate.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  columns: PropTypes.array,\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n  selectedOptions: PropTypes.object,\n  datePickerHidden: PropTypes.bool,\n  itemPerPageHidden: PropTypes.bool,\n}\n\nexport default ListTemplate\n","import Axios from 'axios'\nimport {isEmpty} from '../utils/utility'\n\nexport const HttpMethod = {\n  GET: 'get',\n  POST: 'post',\n  PUT: 'put',\n  PATCH: 'patch',\n  // DELETE: \"delete\",\n}\n\nexport default class ApiConfig {\n  static request({data, query, path, method, url}) {\n    try {\n      if (isEmpty(method) || isEmpty(url)) {\n        alert('HTTP Method 와 URL 을 확인해주세요.')\n        return\n      }\n\n      // const api = ApiMapper[method][url]\n      // if (isEmpty(api)) {\n      //   alert(`요청하신 API가 존재하지 않습니다.\\n[METHOD: ${method}]\\n[URL:${url}]`)\n      //   return\n      // }\n\n      if (path) {\n        for (const [key, value] of Object.entries(path)) {\n          url = url.replace(`:${key}`, value)\n        }\n      }\n\n      if (!isEmpty(query)) {\n        url +=\n          '?' +\n          Object.keys(query)\n            .map(key => key + '=' + query[key])\n            .join('&')\n      }\n\n      const headers = {\n        accept: 'application/json',\n        'Content-Type': 'application/json',\n        'X-Access-Token': window.sessionStorage.getItem('jwt'),\n      }\n\n      switch (method) {\n        case HttpMethod.GET:\n          return Axios.get(url, {headers: headers})\n        case HttpMethod.POST:\n          return Axios.post(url, data, {headers: headers})\n        case HttpMethod.PATCH:\n          return Axios.patch(url, data, {headers: headers})\n        case HttpMethod.PUT:\n          return Axios.put(url, data, {headers: headers})\n        // case HttpMethod.DELETE:\n        //   return Axios.delete(url, data, {headers: headers})\n        default:\n          break\n      }\n    } catch (error) {\n      alert(error.message)\n    }\n  }\n}\n","const API = process.env.REACT_APP_API\n\nexport const EndPoint = {\n  // ------ 오케이포스 홈페이지\n  GET_V1_TEST_AUTO_LOGIN: `${API}/test/v1/jwt/check/:isManual`,\n  POST_LOGIN: `${API}/admin/login`,\n  POST_TEST_V1_REGISTER: `${API}/test/v1/register`,\n  RECRUITMENT: `${API}/admin/recruitment`,\n  TALENTPOOL: `${API}/admin/talent-pool`,\n  EDITOR: `${API}/admin/editor`,\n  HOME_INQUIRY: `${API}/admin/inquiry`,\n  ENGLISH_HOME_INQUIRY: `${API}/admin/english/inquiry`,\n  NOTICE: `${API}/admin/notice`,\n  DATA_ROOM: `${API}/admin/english/data-room`,\n  HOME_BANNER: `${API}/admin/banner`,\n  ENGLISH_BANNER: `${API}/admin/english/banner`,\n\n  // ------ 파트너 센터 페이지\n  GET_PARTNER_USERS: `${API}/admin/partner/users`, // 유저 리스트\n  GET_PARTNER_INACTIVE_USERS: `${API}/admin/partner/users/inactive`, // 탈퇴 유저 리스트\n  GET_PARTNER_INQUIRIES: `${API}/admin/partner/inquiries`, // 1:1 문의 리스트\n  GET_PARTNER_NOTICES: `${API}/admin/partner/notices`, // 공지사항 리스트\n  GET_PARTNER_AGENCYAPPLICANT: `${API}/admin/partner/notices/agencyApplicant`, // 영업점 딜러 지원 리스트\n  GET_PARTNER_DATAROOMS: `${API}/admin/partner/dataRooms`, // 자료실 리스트\n  GET_PARTNER_ORDERS: `${API}/admin/partner/orders`, // 발주신청 리스트\n  GET_PARTNER_MAINTENANCES: `${API}/admin/partner/maintenances`, // 유지보수 신청 리스트\n  GET_PARTNER_SCHEDULES: `${API}/admin/partner/educations/schedules`, // 교육일정 리스트\n  GET_PARTNER_REGISTRAUINS: `${API}/admin/partner/educations/registrations`, // 교육신청 리스트\n\n  // ------ 가맹점 전용 공식몰 페이지\n  GET_MALL_USERS: `${API}/admin/mall/users`,\n  GET_MALL_USER: `${API}/admin/mall/users/:userId`,\n  GET_MALL_RESIGNUSERS: `${API}/admin/mall/users/resign`,\n  GET_MALL_RESIGNUSER: `${API}/admin/mall/users/resign/:userId`,\n\n  GET_MALL_INQUIRIES: `${API}/admin/mall/inquiries`,\n  GET_MALL_INQUIRY: `${API}/admin/mall/inquiries/:inquiryId`,\n  POST_MALL_INQUIRY_REPLY: `${API}/admin/mall/inquiryReplies`,\n  PATCH_MALL_UPDATE_INQUIRY_REPLY: `${API}/admin/mall/inquiryReplies/:inquiryReplyId`,\n  PATCH_MALL_DELETE_INQUIRY: `${API}/admin/mall/inquiries/:inquiryId/status`,\n\n  GET_MALL_FAQS: `${API}/admin/mall/faqs`,\n  GET_MALL_FAQ: `${API}/admin/mall/faqs/:faqId`,\n  POST_MALL_FAQ: `${API}/admin/mall/faqs`,\n  PATCH_MALL_UPDATE_FAQ: `${API}/admin/mall/faqs/:faqId`,\n  PATCH_MALL_DELETE_FAQ: `${API}/admin/mall/faqs/:faqId/status`,\n\n  GET_MALL_DATAROOMS: `${API}/admin/mall/datarooms`,\n  GET_MALL_DATAROOM: `${API}/admin/mall/datarooms/:dataRoomId`,\n  POST_MALL_DATAROOM: `${API}/admin/mall/datarooms`,\n  PATCH_MALL_UPDATE_DATAROOM: `${API}/admin/mall/datarooms/:dataRoomId`,\n  PATCH_MALL_DELETE_DATAROOM: `${API}/admin/mall/datarooms/:dataRoomId/status`,\n\n  GET_MALL_BANNERS: `${API}/admin/mall/banners`,\n  GET_MALL_BANNER: `${API}/admin/mall/banners/:bannerId`,\n  POST_MALL_BANNER: `${API}/admin/mall/banners`,\n  PATCH_MALL_UPDATE_BANNER: `${API}/admin/mall/banners`,\n  PATCH_MALL_DELETE_BANNER: `${API}/admin/mall/banners/:bannerId`,\n\n  GET_MALL_ORDERS: `${API}/admin/mall/orders`,\n  GET_MALL_CANCEL_ORDERS: `${API}/admin/mall/orders/cancel`,\n  GET_MALL_EXCHANGE_ORDERS: `${API}/admin/mall/orders/exchange`,\n\n  // ------ 대리점 전용 파트너 센터\n  POST_REGISTER: `${API}/admin/join`,\n}\n\nconst ApiMapper = {\n  get: {\n    [EndPoint.GET_V1_TEST_AUTO_LOGIN]: {},\n\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.GET_MALL_USERS]: {},\n    [EndPoint.GET_MALL_USER]: {},\n    [EndPoint.GET_MALL_RESIGNUSERS]: {},\n    [EndPoint.GET_MALL_RESIGNUSER]: {},\n    [EndPoint.GET_MALL_INQUIRIES]: {},\n    [EndPoint.GET_MALL_INQUIRY]: {},\n    [EndPoint.GET_MALL_FAQS]: {},\n    [EndPoint.GET_MALL_FAQ]: {},\n    [EndPoint.GET_MALL_DATAROOMS]: {},\n    [EndPoint.GET_MALL_DATAROOM]: {},\n    [EndPoint.GET_MALL_BANNERS]: {},\n    [EndPoint.GET_MALL_BANNER]: {},\n    [EndPoint.GET_MALL_ORDERS]: {},\n    [EndPoint.GET_MALL_CANCEL_ORDERS]: {},\n    [EndPoint.GET_MALL_EXCHANGE_ORDERS]: {},\n\n    // ------ 파트너센터 페이지\n    [EndPoint.GET_PARTNER_USERS]: {},\n    [EndPoint.GET_PARTNER_INACTIVE_USERS]: {},\n    [EndPoint.GET_PARTNER_INQUIRIES]: {},\n    [EndPoint.GET_PARTNER_NOTICES]: {},\n    [EndPoint.GET_PARTNER_AGENCYAPPLICANT]: {},\n    [EndPoint.GET_PARTNER_ORDERS]: {},\n    [EndPoint.GET_PARTNER_MAINTENANCES]: {},\n    [EndPoint.GET_PARTNER_SCHEDULES]: {},\n    [EndPoint.GET_PARTNER_REGISTRAUINS]: {},\n  },\n  post: {\n    [EndPoint.POST_LOGIN]: {},\n    [EndPoint.POST_REGISTER]: {},\n\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.POST_MALL_INQUIRY_REPLY]: {},\n    [EndPoint.POST_MALL_FAQ]: {},\n    [EndPoint.POST_MALL_DATAROOM]: {},\n    [EndPoint.POST_MALL_BANNER]: {},\n  },\n  patch: {\n    // ------ 가맹점 전용 공식몰 페이지\n    [EndPoint.PATCH_MALL_UPDATE_INQUIRY_REPLY]: {},\n    [EndPoint.PATCH_MALL_DELETE_INQUIRY]: {},\n    [EndPoint.PATCH_MALL_UPDATE_FAQ]: {},\n    [EndPoint.PATCH_MALL_DELETE_FAQ]: {},\n    [EndPoint.PATCH_MALL_UPDATE_DATAROOM]: {},\n    [EndPoint.PATCH_MALL_DELETE_DATAROOM]: {},\n    [EndPoint.PATCH_MALL_UPDATE_BANNER]: {},\n    [EndPoint.PATCH_MALL_DELETE_BANNER]: {},\n  },\n  put: {},\n  delete: {},\n}\n\nexport default ApiMapper\n","//url 리스트를 보낼 때 커스텀 해주는 함수\nexport const sendImageUrlFormat = array => {\n  return array.map(item => {\n    return item.url.split('.com/')[1]\n  })\n}\n\nexport const returnBucketName = imgPath => {\n  return `${process.env.REACT_APP_AWS_BUCKET_NAME}/admin/images/${imgPath}`\n}\n\nexport const antdImageFormat = path => {\n  return `https://${process.env.REACT_APP_AWS_BUCKET_NAME}.s3.${process.env.REACT_APP_AWS_REGION}.amazonaws.com/${path}`\n}\n\nexport const returnBucketNameFile = imgPath => {\n  return `${process.env.REACT_APP_AWS_BUCKET_NAME}/admin/files/${imgPath}`\n}\n"],"names":["title","Header","styled","visible","setVisible","url","useState","alignment","size","onClose","className","align","fluid","src","antdImageFormat","alt","width","color","onClick","setStartDate","setEndDate","RangePicker","DatePicker","moment","PickerCCol","locale","direction","allowClear","onChange","date","_d","format","CCol","items","columns","onDelete","selectedOptions","datePickerHidden","itemPerPageHidden","searchInputHidden","checkBoxInputHidden","func","listItems","setListItems","filterItems","setFilterItems","showModal","setShowModal","imgClick","setImgClick","startDate","endDate","category","value","allSelected","setAllSelected","allCheckBox","key","label","id","type","event","map","checked","_props","sorter","filter","getBadgeColor","status","getBadgeText","testOnClick","stopPropagation","useEffect","createdAt","xs","CSmartTable","columnSorter","pagination","clickableRows","columnFilter","tableHeadProps","onRowClick","tableProps","hover","responsive","striped","scopedColumns","checkBox","item","_id","console","log","handleItemOnSelected","isAuthorized","reply","image","rounded","thumbnail","images","length","height","deleteBtn","handleDeleteOnClick","jobType","education","inquiryType","career","proceed","deliveryStatus","productImg","totalPrice","isPrice","startedAt","closedAt","deletedAt","updatedAt","noticeFiles","imageUrls","noItemsLabel","itemsPerPage","HttpMethod","GET","POST","PUT","PATCH","ApiConfig","data","query","path","method","isEmpty","alert","Object","entries","replace","keys","join","headers","accept","window","sessionStorage","getItem","Axios","error","message","API","process","EndPoint","GET_V1_TEST_AUTO_LOGIN","POST_LOGIN","POST_TEST_V1_REGISTER","RECRUITMENT","TALENTPOOL","EDITOR","HOME_INQUIRY","ENGLISH_HOME_INQUIRY","NOTICE","DATA_ROOM","HOME_BANNER","ENGLISH_BANNER","GET_PARTNER_USERS","GET_PARTNER_INACTIVE_USERS","GET_PARTNER_INQUIRIES","GET_PARTNER_NOTICES","GET_PARTNER_AGENCYAPPLICANT","GET_PARTNER_DATAROOMS","GET_PARTNER_ORDERS","GET_PARTNER_MAINTENANCES","GET_PARTNER_SCHEDULES","GET_PARTNER_REGISTRAUINS","GET_MALL_USERS","GET_MALL_USER","GET_MALL_RESIGNUSERS","GET_MALL_RESIGNUSER","GET_MALL_INQUIRIES","GET_MALL_INQUIRY","POST_MALL_INQUIRY_REPLY","PATCH_MALL_UPDATE_INQUIRY_REPLY","PATCH_MALL_DELETE_INQUIRY","GET_MALL_FAQS","GET_MALL_FAQ","POST_MALL_FAQ","PATCH_MALL_UPDATE_FAQ","PATCH_MALL_DELETE_FAQ","GET_MALL_DATAROOMS","GET_MALL_DATAROOM","POST_MALL_DATAROOM","PATCH_MALL_UPDATE_DATAROOM","PATCH_MALL_DELETE_DATAROOM","GET_MALL_BANNERS","GET_MALL_BANNER","POST_MALL_BANNER","PATCH_MALL_UPDATE_BANNER","PATCH_MALL_DELETE_BANNER","GET_MALL_ORDERS","GET_MALL_CANCEL_ORDERS","GET_MALL_EXCHANGE_ORDERS","POST_REGISTER","sendImageUrlFormat","array","split","returnBucketName","imgPath","returnBucketNameFile"],"sourceRoot":""}