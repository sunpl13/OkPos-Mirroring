{"version":3,"file":"static/js/2988.098dbd32.chunk.js","mappings":"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","sources":["components/chart/BarChartTemplate.js","components/chart/DoughnutChartTemplate.js","pages/partnerCenter/users/InActiveUserList.js"],"sourcesContent":["import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\nimport PropTypes, {object} from 'prop-types'\n\nconst BarChartTemplate = ({title, labels, data}) => {\n  const dataSet = {\n    labels: [' '],\n    datasets: [\n      {\n        label: '서비스 이용 불편',\n        data: [data[0]],\n        backgroundColor: 'rgb(255, 99, 132)',\n      },\n      {\n        label: '가격 불만족',\n        data: [data[1]],\n        backgroundColor: 'rgb(54, 162, 235)',\n      },\n      {\n        label: '제품 기능 불만족',\n        data: [data[2]],\n        backgroundColor: 'rgb(255, 205, 86)',\n      },\n      {\n        label: '기타(직접 입력)',\n        backgroundColor: 'rgba(255, 159, 64)',\n        data: [data[3]],\n      },\n    ],\n  }\n\n  const options = {\n    plugins: {\n      //responsive: true,\n      hoverBorderWidth: 2,\n      legend: {\n        display: true,\n        position: 'right',\n        align: 'start',\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n        },\n      },\n    },\n  }\n  return (\n    // <CChart\n    //   type='doughnut'\n    //   customTooltips={false}\n    //   labels={labels}\n    //   data={data}\n    //   options={{\n    //     responsive: true,\n    //     hoverBorderWidth: 2,\n    //     plugins: {\n    //       title: {\n    //         display: true,\n    //         text: title || '',\n    //         font: {\n    //           size: 24,\n    //         },\n    //       },\n    //     },\n    //     borderRadius: 10,\n    //     inflateAmount: 1,\n    //   }}\n    // />\n    <CChart type='bar' data={dataSet} customTooltips={false} options={options} />\n  )\n}\n\nexport default React.memo(BarChartTemplate)\n","import React from 'react'\nimport {CChart} from '@coreui/react-chartjs'\n\nconst DoughnutChartTemplate = ({title, labels, data}) => {\n  const dataSet = {\n    labels: labels,\n    datasets: [\n      {\n        label: title,\n        data: data,\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)', 'rgba(255, 159, 64)'],\n        hoverOffset: 4,\n      },\n    ],\n  }\n\n  const options = {\n    plugins: {\n      responsive: true,\n      hoverBorderWidth: 2,\n      legend: {\n        display: true,\n        position: 'right',\n        align: 'start',\n      },\n    },\n  }\n  return (\n    // <CChart\n    //   type='doughnut'\n    //   customTooltips={false}\n    //   labels={labels}\n    //   data={data}\n    //   options={{\n    //     responsive: true,\n    //     hoverBorderWidth: 2,\n    //     plugins: {\n    //       title: {\n    //         display: true,\n    //         text: title || '',\n    //         font: {\n    //           size: 24,\n    //         },\n    //       },\n    //     },\n    //     borderRadius: 10,\n    //     inflateAmount: 1,\n    //   }}\n    // />\n    <CChart type='doughnut' data={dataSet} customTooltips={false} options={options} />\n  )\n}\nexport default React.memo(DoughnutChartTemplate)\n","import React, {useEffect, useState} from 'react'\nimport {CCard, CCardBody, CCol, CRow} from '@coreui/react'\nimport ListTemplate from '../../../components/list/ListTemplate'\nimport UserDetailModal from '../../../components/Modal/partnerCenter/users/UserDetailModal'\nimport PageHeader from '../../../components/common/PageHeader'\nimport {withdrawalUsersColumns} from '../../../utils/columns/partnerCenter/Columns'\nimport {EndPoint} from '../../../dataManager/apiMapper'\nimport {getDetailInfo, getListData} from '../../../components/function/partnerCenter/ApiModules'\nimport MallDoughnutChartTemplate from '../../../components/chart/DoughnutChartTemplate'\nimport MallBarChartTemplate from '../../../components/chart/BarChartTemplate'\n\nconst InActiveUserList = () => {\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState([])\n  const [showModal, setShowModal] = useState(false)\n  const [chartData, setChartData] = useState([])\n  const [chartLabels, setChartLabels] = useState([\n    '서비스 이용 불편',\n    '가격 불만족',\n    '제품 기능 불만족',\n    '기타(직접 입력)',\n  ])\n\n  const datePickerOptions = [\n    {key: 'createdAt', value: '최초 등록일'},\n    {key: 'deletedAt', value: '계정 탈퇴일'},\n  ]\n\n  // 탈퇴회원 API\n  const getList = async () => {\n    getListData(EndPoint.PARTNER_INACTIVE_USERS)\n      .then(res => {\n        setItems(\n          res?.inActiveUserInfoPartnerDTOs.map(v => {\n            return {name: v.userName, phoneNumber: v.phoneNum.replace(/-/g, ''), ...v}\n          }),\n        )\n        const {inActiveUserWithdrawalCategoryStatistics} = res\n        setChartData([\n          inActiveUserWithdrawalCategoryStatistics.inconvenienceOfService,\n          inActiveUserWithdrawalCategoryStatistics?.disSatisfiedWithPrice,\n          inActiveUserWithdrawalCategoryStatistics?.disSatisfiedWithProductFeature,\n          inActiveUserWithdrawalCategoryStatistics?.directInput,\n        ])\n      })\n      .catch(err => console.log(err))\n  }\n  useEffect(() => {\n    getList()\n  }, [])\n\n  /** Open Modal*/\n  const handleShowUserDetailModal = async ({id}) => {\n    getDetailInfo(EndPoint.PARTNER_INACTIVE_USERS, id)\n      .then(res => {\n        setSelectedItem(res)\n        setShowModal(!showModal)\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <CRow>\n      <PageHeader title='탈퇴 회원 리스트' />\n      <CCol xs={12}>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <CRow>\n              <CCol xs={4}>\n                <CCardBody>\n                  <MallDoughnutChartTemplate title={'탈퇴 사유'} labels={chartLabels} data={chartData} />\n                </CCardBody>\n              </CCol>\n              <CCol xs={8}>\n                <CCardBody>\n                  <MallBarChartTemplate title={'탈퇴 사유'} labels={chartLabels} data={chartData} />\n                </CCardBody>\n              </CCol>\n            </CRow>\n            <div>서비스 이용 불편 : {chartData[0]}</div>\n            <div> 가격 불만족 : {chartData[1]}</div>\n            <div> 제품 기능 불만족 : {chartData[2]}</div>\n            <div>기타(직접 입력) : {chartData[3]}</div>\n          </CCardBody>\n        </CCard>\n        <CCard className='mb-4'>\n          <CCardBody>\n            <ListTemplate\n              items={items}\n              onClick={handleShowUserDetailModal}\n              columns={withdrawalUsersColumns}\n              className={'userList'}\n              datePickerOptions={datePickerOptions}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <UserDetailModal value={selectedItem} visible={showModal} setVisible={setShowModal} readOnly />\n    </CRow>\n  )\n}\nexport default InActiveUserList\n"],"names":["BarChartTemplate","_ref","title","labels","data","dataSet","datasets","label","backgroundColor","_jsx","CChart","type","customTooltips","options","plugins","hoverBorderWidth","legend","display","position","align","scales","y","beginAtZero","React","DoughnutChartTemplate","hoverOffset","responsive","_useState","useState","_useState2","_slicedToArray","items","setItems","_useState3","_useState4","selectedItem","setSelectedItem","_useState5","_useState6","showModal","setShowModal","_useState7","_useState8","chartData","setChartData","_useState9","_useState10","chartLabels","getList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getListData","EndPoint","PARTNER_INACTIVE_USERS","then","res","inActiveUserInfoPartnerDTOs","map","v","_objectSpread","name","userName","phoneNumber","phoneNum","replace","inActiveUserWithdrawalCategoryStatistics","inconvenienceOfService","disSatisfiedWithPrice","disSatisfiedWithProductFeature","directInput","catch","err","console","log","stop","apply","arguments","useEffect","handleShowUserDetailModal","_ref3","_callee2","_ref2","id","_context2","getDetailInfo","_x","_jsxs","CRow","children","PageHeader","CCol","xs","CCard","className","CCardBody","MallDoughnutChartTemplate","MallBarChartTemplate","ListTemplate","onClick","columns","withdrawalUsersColumns","datePickerOptions","key","value","UserDetailModal","visible","setVisible","readOnly"],"sourceRoot":""}